{"version":3,"sources":["webpack:///chart.min.js","webpack:///./client/app/components/linechart/linechart.js","webpack:///./client/app/components/linechart/linechart.component.js","webpack:///./client/app/components/linechart/linechart.html","webpack:///./client/app/components/linechart/linechart.controller.js","webpack:///./~/echarts/lib/chart/line.js","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/tool/transformPath.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/zrender/lib/zrender.js","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/chart/line/LineSeries.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/chart/line/LineView.js","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/echarts/lib/chart/line/poly.js","webpack:///./~/echarts/lib/visual/symbol.js","webpack:///./~/echarts/lib/layout/points.js","webpack:///./~/echarts/lib/processor/dataSample.js","webpack:///./~/echarts/lib/component/grid.js","webpack:///./~/echarts/lib/coord/cartesian/Grid.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/cartesian/axisLabelInterval.js","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/echarts/lib/coord/axisModelCreator.js","webpack:///./~/echarts/lib/coord/axisDefault.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/echarts/lib/coord/axisModelZoomMixin.js","webpack:///./~/echarts/lib/component/axis.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/title.js","webpack:///./~/echarts/lib/component/legend.js","webpack:///./~/echarts/lib/component/legend/LegendModel.js","webpack:///./~/echarts/lib/component/legend/legendAction.js","webpack:///./~/echarts/lib/component/legend/LegendView.js","webpack:///./~/echarts/lib/component/helper/listComponent.js","webpack:///./~/echarts/lib/component/legend/legendFilter.js","webpack:///./client/app/components/linechart/linechart.less?8f05","webpack:///./client/app/components/linechart/linechart.less","webpack:///./~/ffan-ng-echarts/src/ng-echarts.js","webpack:///./client/app/components/piechart/piechart.js","webpack:///./client/app/components/piechart/piechart.component.js","webpack:///./client/app/components/piechart/piechart.html","webpack:///./client/app/components/piechart/piechart.controller.js","webpack:///./~/echarts/lib/chart/pie.js","webpack:///./~/echarts/lib/chart/pie/PieSeries.js","webpack:///./~/echarts/lib/component/helper/selectableMixin.js","webpack:///./~/echarts/lib/chart/pie/PieView.js","webpack:///./~/echarts/lib/action/createDataSelectAction.js","webpack:///./~/echarts/lib/visual/dataColor.js","webpack:///./~/echarts/lib/chart/pie/pieLayout.js","webpack:///./~/echarts/lib/chart/pie/labelLayout.js","webpack:///./~/echarts/lib/processor/dataFilter.js","webpack:///./client/app/components/piechart/piechart.less?b255","webpack:///./client/app/components/piechart/piechart.less","webpack:///./client/app/components/gaugechart/gaugechart.js","webpack:///./client/app/components/gaugechart/gaugechart.component.js","webpack:///./client/app/components/gaugechart/gaugechart.html","webpack:///./client/app/components/gaugechart/gaugechart.controller.js","webpack:///./~/echarts/lib/chart/gauge.js","webpack:///./~/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./~/echarts/lib/chart/gauge/GaugeView.js","webpack:///./~/echarts/lib/chart/gauge/PointerPath.js","webpack:///./client/app/components/gaugechart/gaugechart.less?167b","webpack:///./client/app/components/gaugechart/gaugechart.less"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_linechart","_linechart2","angular","component","_linechart3","_linechart4","restrict","bindings","template","controller","controllerAs","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","LinechartController","this","initLineChart","lineConfig","theme","dataLoaded","lineOption","title","text","subtext","textAlign","x","textStyle","color","fontSize","subtextStyle","display","grid","borderWidth","borderColor","legend","orient","top","right","align","data","tooltip","trigger","xAxis","type","boundaryGap","splitLine","show","interval","yAxis","axisLabel","formatter","series","name","smooth","zrUtil","echarts","PRIORITY","registerVisual","curry","registerLayout","registerProcessor","PROCESSOR","STATISTIC","clone","source","result","typeStr","objToString","call","len","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isDom","hasOwnProperty","merge","overwrite","isObject","targetProp","sourceProp","isArray","isBuildInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","inherits","clazz","baseClazz","F","clazzPrototype","prop","superClass","mixin","isArrayLike","each","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","isFunction","isString","nodeType","ownerDocument","retrieve","values","slice","Function","assert","condition","message","Error","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","noop","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_api","ExtensionAPI","_coordSysMgr","CoordinateSystemManager","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","toggleHighlight","payload","eachComponent","mainType","query","seriesModel","index","chartView","__viewId","__alive","doDispatchAction","silent","actionWrap","actions","actionInfo","updateMethod","update","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighlightOrDownplay","batchItem","action","event","updateMethods","OPTION_UPDATED","prepareAndUpdate","flushPendingActions","pendingActions","shift","invokeUpdateMethod","api","componentModel","__model","updateZ","eachSeries","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","prepareView","isComponent","viewList","viewMap","componentType","model","viewId","view","classType","ComponentModel","parseClassType","Clazz","ComponentView","getClass","main","sub","ChartView","add","__id","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","stack","get","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","clearColorPalette","doRender","componentView","render","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","otherChart","STATUS_KEY","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","dispatchAction","window","GlobalModel","OptionManager","SeriesModel","graphic","colorTool","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","HAS_GRADIENT_OR_PATTERN_BG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","painter","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","MAX_NUMBER","Infinity","left","bottom","canvasList","dpr","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","coordSysMgr","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","highlight","downplay","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","DOM_ATTRIBUTE_KEY","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","priority","processorFunc","isNaN","registerAction","registerCoordinateSystem","CoordinateSystem","register","layoutFunc","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","number","format","matrix","vector","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","detect","ua","os","firefox","match","ie","edge","test","touchEventsSupported","pointerEventsSupported","navigator","userAgent","mergeTheme","themeItem","hasClass","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","mergeOption","getComponentsByTypes","componentsMap","types","ret","determineSubType","newCptOption","existComponent","subType","createSeriesIndices","seriesModels","componentIndex","filterBySubType","components","cpt","assertSeriesInitialized","parentModel","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","newOption","visitComponent","newCptOptionList","normalizeToArray","mapResult","mappingToExists","makeIdAndName","keyInfo","exist","dependentModels","resultItem","ComponentModelClass","optionUpdated","extraOpt","newCptTypes","componentOption","topologicalTravel","getAllClassMainTypes","isIdInner","getTheme","getComponent","queryComponents","cpts","val","isIdArray","isNameArray","findComponents","getQueryCond","q","indexAttr","idAttr","nameAttr","doFilter","res","queryCond","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeries","eachSeriesByType","eachRawSeriesByType","isSeriesFiltered","filterSeries","filteredSeries","componentTypes","has","formatUtil","nubmerUtil","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","isFinite","parseDate","NaN","createDataFormatModel","dataFormatMixin","seriesName","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","$vars","getFormattedLabel","dimIndex","itemModel","getItemModel","formatTpl","formatTooltip","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","parsedKey","queryType","queryParam","numberUtil","textContain","addCommas","split","toCamelCase","str","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","seriesLen","alias","k","s2d","formatTime","date","getFullYear","M","getMonth","d","getDate","h","getHours","m","getMinutes","s","getSeconds","capitalFirst","substr","truncateText","_trim","RADIAN_EPSILON","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","round","precision","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","abs","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","quantity","pow","nice","nf","exp10","f","reformIntervals","littleThan","lg","close","curr","currClose","getTextWidth","textFont","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textBaseline","textLineLen","lineHeight","rect","BoundingRect","adjustTextPositionOnRect","textPosition","textRect","distance","textHeight","halfHeight","containerWidth","ellipsis","options","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","lineWidth","subLength","estimateLength","join","charCode","charCodeAt","getBoundingRect","ctx","font","vec2","v2ApplyTransform","applyTransform","union","other","lt","rb","lb","rt","maxX","maxY","calculateTransform","sx","sy","translate","scale","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","contain","copy","plain","ArrayCtor","Float32Array","out","v","set","v1","v2","scaleAndAdd","sqrt","lenSquare","mul","div","dot","normalize","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","identity","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","invert","det","clazzUtil","path","ignoreParent","getShallow","thisParentModel","isEmpty","Ctor","setReadOnly","properties","enableClassExtend","superCall","superApply","TYPE_DELIMITER","IS_CONTAINER","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","makeContainer","container","registerClass","componentTypeMain","throwWhenNotFound","getClassesByMainType","hasSubTypes","registerWhenExtend","originalExtend","getLineStyle","excludes","lineDash","getLineDash","lineType","dotSize","dashSize","propName","getAreaStyle","getTextColor","getFont","gTextStyleModel","getItemStyle","getBorderLineDash","getDependencies","deps","arrayPush","componentUtil","layout","defaultOption","uid","layoutMode","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getDefaultOption","mergeLayoutParam","isInit","optList","Class","__defaultOption","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","base","DELIMITER","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","pop","currVertex","isInTargetNameSet","boxLayout","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","child","nextX","nextY","position","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerHeight","x2","y2","getLayoutRect","verticalMargin","horizontalMargin","aspect","positionElement","hv","boundingMode","needLocalTransform","transform","getLocalTransform","elPos","dx","dy","attr","targetOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","ignoreSize","hasProp","hasValue","hNames","vNames","hResult","vResult","copyLayoutParams","getBoxLayoutParams","platform","fontFamily","fontStyle","fontWeight","animationDuration","animationDurationUpdate","animationEasing","animationEasingUpdate","animationThreshold","progressiveThreshold","hoverLayerThreshold","_colorIdx","_colorNameMap","getColorFromPalette","scope","colorIdx","colorNameMap","colorPalette","chartInstance","echartsAPIList","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","compare","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","indices","colorPaletteMixin","legendDataProvider","visualColorAccessPath","_dataBeforeProcessed","getInitialData","_data","cloneShallow","label","fillDataTextStyle","newSeriesOption","getLinkedData","setData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","multipleSeries","formatArrayValue","valStr","getDimensionInfo","formattedValue","colorEl","ifEnableAnimation","animationEnabled","getAxisTooltipDataIndex","getTooltipPosition","Group","Component","componentProto","Element","_children","__storage","__dirty","children","childOfName","childCount","parent","_doAdd","addBefore","nextSibling","__zr","addToMap","addChildrenToStorage","refresh","delFromMap","delChildrenFromStorage","removeAll","dirty","includeChildren","tmpRect","tmpMat","invisible","childRect","guid","Transformable","Animatable","clipPath","drift","draggable","decomposeTransform","beforeUpdate","afterUpdate","updateTransform","attrKV","hide","setClipPath","addSelfToZr","removeClipPath","__clipTarget","removeSelfFromZr","animators","addAnimator","removeAnimator","idStart","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","isNotAroundZero","EPSILON","mIdentity","rotation","origin","transformableProto","parentHasTransform","invTransform","setTransform","restoreTransform","tmpTransform","atan2","getGlobalScale","transformCoordToLocal","transformCoordToGlobal","Animator","animate","loop","animatingShape","pathSplitted","animator","during","done","forwardToLast","stop","animateTo","time","delay","easing","_animateToShallow","start","objShallow","propertyCount","when","defaultGetter","defaultSetter","interpolateNumber","p0","p1","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","arraySlice","isArraySame","catmullRomInterpolateArray","p2","p3","t2","t3","catmullRomInterpolate","v0","cloneValue","rgba2String","rgba","createTrackClip","oneTrackDone","keyframes","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastValue","_target","w","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","_tracks","_clipCount","_doneList","_onframeList","_clipList","tracks","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","clipList","removeClip","getClips","_life","_initialized","onrestart","easingFuncs","step","globalTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","remainder","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","p","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","colorStr","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba2hsla","H","S","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","lift","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","config","debugMode","Chart","elSetState","state","dataIdx","getItemGraphicEl","eachItemGraphicEl","chartProto","hasFillOrStroke","fillOrStroke","liftColor","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","animatableModel","postfix","duration","animationDelay","pathTool","Path","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","extendPath","pathData","extendFromString","makePath","createFromString","cx","cy","resizePath","mergePath","pathRect","subPixelOptimizeLine","param","subPixelOptimize","shape","x1","y1","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","labelModel","labelPosition","labelColor","textStyleModel","textDistance","textFill","updateProps","initProps","getTransform","ancestor","mat","vertex","transformDirection","direction","hBase","vBase","groupTransition","g1","g2","getElMap","g","elMap","anid","getAnimatableProps","elMap1","oldEl","newProp","processArc","fa","fs","rx","ry","psiDeg","cmd","psi","xp","mathCos","mathSin","yp","lambda","mathSqrt","cxp","cyp","theta","vAngle","u","dTheta","vRatio","addData","createPathProxyFromString","n","cs","cc","RegExp","prevCmd","cpx","cpy","PathProxy","CMD","c","ctlPtx","ctlPty","C","Q","A","Z","toStatic","createPathOptions","pathProxy","buildPath","transformPath","rebuildPath","vMag","acos","pathEls","pathList","pathEl","pathBundle","appendPath","Displayable","pathContain","Pattern","getCanvasPattern","__dirtyPath","strokeContainThreshold","brush","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDashOffset","ctxLineDash","setLineDash","setScale","beginPath","setLineDashOffset","drawRectText","shapeCfg","inBundle","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","strokeNoScale","getLineScale","localPos","containStroke","dirtyPath","animateShape","setShape","Sub","extendFrom","defaultShape","thisShape","Style","__clipPaths","RectText","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","createLinearGradient","canvasGradient","createRadialGradient","r","STYLE_COMMON_PROPS","opacity","shadowBlur","shadowOffsetX","shadowOffsetY","textStroke","textVerticalAlign","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","textRotation","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","addColorStop","offset","styleProto","maxValue","lastIndexOf","save","baseline","verticalAlign","shadowColor","textShadowColor","fillText","strokeText","restore","curve","bbox","min2","max2","mathAbs","hasTypedArray","_len","_xi","_yi","_x0","_y0","_ux","_uy","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","x0","y0","lineDashSum","appendSize","appendPathData","_expandData","_prevCmd","newData","dash","dashSum","nDash","cubicAt","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","fromArc","ux","uy","scaleX","scaleY","isEllipse","isAroundZero","onet","cubicDerivativeAt","cubicRootAt","roots","t1","disc","K","discSqrt","Y1","Y2","mathPow","ONE_THIRD","T","ASqrt","tmp","THREE_SQRT","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","end","extremity","PI2","fromPoints","points","xDim","yDim","tx","ty","vec2Min","vec2Max","diff","angle","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","x_","windingQuadratic","y_","windingArc","dir","normalizeRadian","containPath","isStroke","windingLine","cubic","quadratic","_x","line","_l","_a","_b","_s","repeat","_canvasPattern","createPattern","nPoint","mathAtan2","ZImage","LRU","globalImageCache","src","_image","cachedImgObj","onload","pending","put","sWidth","sHeight","drawImage","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","LRUProto","leastUsedEntry","r0","clockwise","unitX","unitY","polyHelper","smoothConstraint","smoothSpline","smoothBezier","controlPoints","cp1","cp2","interpolate","isLoop","segs","pos","w2","w3","v2Min","v2Max","v2Scale","v2Distance","v2Add","constraint","prevPoint","nextPoint","cps","point","d0","sum","cp0","roundRectHelper","r1","r2","r3","r4","total","pointAt","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","tangentAt","paths","_updatePathDirty","Gradient","globalCoord","lib","ORIGIN_METHOD","RATE","THROTTLE_TYPE","fn","debounce","exec","lastExec","getTime","timer","currCall","lastCall","clearTimeout","setTimeout","createOrUpdate","fnAttr","rate","throttleType","originFn","lastThrottleType","lastRate","delInstance","Handler","Storage","Animation","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromMap","oldAddToMap","elId","getId","addRoot","delRoot","zLevel","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","cursorStyle","eventHandler","makeEventPacket","eveType","cancelBubble","offsetX","zrX","offsetY","zrY","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","EmptyProxy","isHover","displayable","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","mousemove","hovered","findHover","lastHovered","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","dispatch","eventArgs","targetEl","eventPacket","eachOtherLayer","layer","exclude","_downel","_upel","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","_y","dropTarget","lastDropTarget","_dropTarget","shapeCompareFunc","_elements","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","clipPaths","elements","_renderList","displayableSortFunc","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","tmpStorageLength","DEFAULT_TMP_STORAGE_LENGTH","stackLength","remaining","ts","minRun","force","Dispatcher","requestAnimationFrame","_clips","_running","_time","_pausedTime","_pauseStart","_paused","clips","_update","deferredEvents","deferredClips","_startLoop","pause","resume","clientToLocal","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","normalizeEvent","isTouch","touch","targetTouches","changedTouches","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","preventDefault","stopPropagation","returnValue","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","eventNameFix","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","_touching","_touchTimer","useTouchEvent","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","mouseHandlerNames","HandlerDomProxy","mountHandlers","GestureMgr","eventTool","TOUCH_CLICK_DELAY","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","pointPair","center","eventUtil","_track","_doTrack","_recognize","touches","trackItem","recognizers","pinch","track","pinchEnd","pinchPre","pinchCenter","parseInt10","isLayerValid","isBuildin","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","cssText","Layer","MAX_PROGRESSIVE_LAYER_NUMBER","Painter","singleCanvas","_opts","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","initContext","_getSize","_domRoot","appendChild","_createPathToImage","_progressiveLayers","_hoverlayer","_hoverElements","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","originalEl","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuildinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","imageLayer","whIdx","wh","cwh","plt","prb","stl","defaultView","getComputedStyle","_pathToImage","clearRect","pathTransform","ImageShape","imgShape","me","returnFalse","createDom","newDom","newDomStyle","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","encodeColor","colorAccessPath","setVisual","setItemVisual","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","itemStyle","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","textColor","maskColor","mask","lineCap","labelRect","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","hostModel","transferProperties","_storage","originalStorage","dim","dimStore","UNDEFINED","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","dimStorage","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","indexOfNearest","maxDistance","nearestIdx","minDist","rawIdx","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","prefix","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","createListFromArray","legendHoverLink","hoverAnimation","clipOverflow","lineStyle","smoothMonotone","symbol","symbolSize","symbolRotate","showSymbol","showAllSymbol","connectNulls","sampling","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","coordSysName","creators","registeredCoordSys","axesInfo","completeDimensions","categoryIndex","createNameList","categories","categoryAxesModels","getCategories","isStackable","axisType","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","defaultNames","extraPrefix","value0","retrieveValue","guessOrdinal","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","axis","extent","getGlobalExtent","onBand","halfBandWidth","getBandWidth","sign","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","onZero","getExtent","valueDim","baseDataOffset","stackedOnSameSign","stackedData","dataToPoint","createGridClipShape","cartesian","hasAnimation","xExtent","getAxis","yExtent","isHorizontal","expandSize","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","inverse","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","toGlobalCoord","dataToCoord","stopLen","outerColors","reverse","tinyExtent","minCoord","maxCoord","coordSpan","gradient","SymbolDraw","Symbol","lineAnimationDiff","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","oldData","__temp","_step","_newPolygon","updateData","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","stackedOnSeries","setZ","stopSymbolAnimation","categoryAxis","getAxesByScale","isLabelIgnored","current","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","seriesScope","hoverItemStyle","symbolOffset","hoverLabelModel","newIdx","symbolEl","oldIdx","fadeOut","enableAnimation","normalizeSymbolSize","driftSymbol","symbolUtil","symbolProto","_createSymbol","symbolType","symbolPath","createSymbol","_symbolType","toLastFrame","getSymbolPath","getScale","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","elStyle","setColor","onEmphasis","ratio","onNormal","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","samplers","average","nearest","indexSampler","sampler","gridModel","getRect","isAxisUsedInTheGrid","axisModel","findGridModel","getLabelUnionRect","labels","getFormattedLabels","labelCount","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtent","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","axisHelper","Cartesian2D","Axis2D","ifAxisCrossZero","niceScaleExtent","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","adjustAxes","axesList","gridRect","setExtent","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","_findConvertTarget","pointToData","coordToData","coordsList","createAxisCreator","axisPosition","axisPositionUsed","createScaleByModel","isCategory","axesCount","addAxis","unionExtent","grids","OrdinalScale","IntervalScale","Scale","getScaleExtent","originalExtent","span","getMin","getMax","crossZero","getNeedCrossZero","fixMin","fixMax","splitNumber","niceExtent","minInterval","getInterval","intervalScale","setInterval","getAxisLabelInterval","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","tickCoord","labelFormatter","getTicksLabels","ticks","getTicks","tick","getLabel","scaleProto","rank","niceTicks","_interval","thisExtent","mathFloor","mathCeil","roundingErrorFix","_niceExtent","safeLimit","intervalScaleProto","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","yearStep","fixRoundingError","originalVal","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","err","Cartesian","axisX","axisY","containData","dataToPoints","dimAxisMapper","_axes","_dimList","getAxes","scaleType","_dataCoordConvert","input","dimList","output","Axis","axisLabelInterval","coordExtent","getLabelInterval","labelInterval","_labelInterval","fixExtentWithBands","nTick","normalizedExtent","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","containLabel","getAxisType","axisDim","axisModelCreator","AxisModel","resetRange","extraOption","axisDefault","AXIS_TYPES","axisName","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","nameLocation","nameRotate","nameTruncate","nameTextStyle","nameGap","triggerEvent","axisLine","axisTick","inside","splitArea","areaStyle","timeAxis","logAxis","logBase","rangeStart","rangeEnd","setRange","layoutAxis","getZero","theAxis","rawAxisPosition","rectBound","axisOffset","posMap","dirMap","labelDirection","tickDirection","nameDirection","labelOffset","labelRotation","AxisBuilder","ifIgnoreOnTick","axisBuilderAttrs","selfBuilderAttrs","AxisView","oldAxisGroup","_axisGroup","axisBuilder","getGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","ticksCoords","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","makeAxisEventDataBase","innerTextLayout","rotationDiff","endTextLayout","textRotate","onLeft","tooltipOpt","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","pt1","pt2","tickModel","tickLen","tickInterval","isTwoLabelOverlapped","firstRect","nextRect","axisLabelShow","labelMargin","labelLayout","categoryData","textEls","tickVal","itemTextStyleModel","labelBeforeFormat","textEl","targetType","firstLabel","nextLabel","lastLabel","prevLabel","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","content","rawTick","showContent","triggerOn","alwaysShowContent","confine","showDelay","hideDelay","transitionDuration","enterable","borderRadius","padding","extraCssText","axisPointer","crossStyle","shadowStyle","dataEqual","makeLineShape","makeRectShape","makeSectorShape","refixTooltipPosition","viewWidth","viewHeight","confineTooltipPosition","calcTooltipPosition","domWidth","domHeight","rectWidth","rectHeight","updatePosition","positionExpr","ifSeriesSupportAxisTrigger","TooltipContent","_axisPointers","tooltipContent","_tooltipContent","_manuallyShowTip","_manuallyHideTip","tooltipModel","_tooltipModel","_ecModel","_lastHover","_alwaysShowContent","_seriesGroupByAxis","_prepareAxisTriggerData","crossText","_crossText","_refreshUpdateTimeout","_tryShow","_mousemove","_hide","_showTimeout","seriesHaveDataOnIndex","_series","isTriggerAxis","seriesGroupByAxis","globalTrigger","_showAxisTooltip","_ticket","_hideAxisPointer","_resetLastHover","_showItemTooltipContent","subTooltipModel","defaultHtml","asyncTicket","_showTooltipContent","axisPointerModel","axisPointerType","_showAxisPointer","allNotShow","seriesCoordSysSameAxis","allCoordSys","contentNotChange","lastHover","valIndex","_showSinglePointer","_showPolarPointer","_showCartesianPointer","_dispatchAndShowSeriesTooltipContent","moveGridLine","otherExtent","targetShape","pointerEl","_getPointerElement","moveAnimation","moveGridShadow","bandWidth","_updateCrossText","otherAxis","single","moveSingleLine","movePolarLine","mouseCoord","pointToCoord","coordToPoint","movePolarShadow","crossStyleModel","pointerModel","initShape","axisPointers","pointerType","styleModel","isShadow","elementType","seriesList","sampleSeriesIndex","rootTooltipModel","baseDimIndex","payloadBatch","firstDataIndex","firstLine","seriesTooltipModel","html","ticket","cbTicket","setContent","hideLater","assembleTransition","transitionCurve","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","borderName","camelCase","_container","_show","_hideTimeout","onmouseenter","_inContent","onmousemove","onmouseleave","_hideDelay","gCssText","currentStyle","isShow","subtarget","itemGap","titleModel","subtextStyleModel","subText","subTextEl","link","sublink","open","groupRect","layoutOption","layoutRect","alignStyle","LegendModel","selected","_updateData","legendData","hasSelected","isSelected","select","availableNames","_availableNames","selectedMode","unSelect","toggleSelected","itemWidth","itemHeight","inactiveColor","legendSelectActionHandler","selectedMap","isToggleSelect","legendModel","isItemSelected","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","_symbolTypeStore","selectMode","itemAlign","legendDrawedMap","legendSymbolType","itemGroup","_createItem","addBackground","itemIcon","legendGlobalTooltipModel","textX","hitRect","legendIndex","positionGroup","legendModels","locals","directive","attrs","ctrl","refreshChart","$watch","_piechart","_piechart2","_piechart3","_piechart4","PiechartController","initPieChart","pieConfig","pieOption","oa","labelLine","dataSelectableMixin","PieSeries","updateSelectedMap","_defaultLabelLine","labelLineNormalOpt","labelLineEmphasisOpt","minAngle","selectedOffset","avoidLabelOverlap","targetList","_selectTargetMap","targetMap","updateDataSelected","toggleItemSelected","midAngle","PiePiece","hoverIgnore","normalIgnore","sector","getLabelStyle","isLabelInside","piePieceProto","firstCreate","sectorShape","itemStyleModel","_updateLabel","labelText","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","Pie","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","_createClipPath","itemLayout","actionInfos","paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","textY","labelLineLen","labelLineLen2","labelRotate","_gaugechart","_gaugechart2","_gaugechart3","_gaugechart4","GaugechartController","initGaugeChart","gaugeConfig","gaugeOption","pointer","offsetCenter","GaugeSeries","dataOpt","parsePosition","formatLabel","PointerPath","GaugeView","colorList","posInfo","_renderMain","axisLineModel","angleRangeSpan","prevEndAngle","axisLineWidth","getColor","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","tickLine","valueExtent","detailModel"],"mappings":"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","file":"chart.min.js","sourcesContent":["webpackJsonp([16],Array(478).concat([\n/* 478 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\t\tvalue: true\n\t});\n\t\n\tvar _linechart = __webpack_require__(479);\n\t\n\tvar _linechart2 = _interopRequireDefault(_linechart);\n\t\n\t__webpack_require__(629);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = angular.module('lineChart', ['ng-echarts'])\n\t/**\n\t * 轻在routerConfig.js里定义路由\n\t */\n\t.component('lineChart', _linechart2.default);\n\n/***/ },\n/* 479 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _linechart = __webpack_require__(480);\n\t\n\tvar _linechart2 = _interopRequireDefault(_linechart);\n\t\n\tvar _linechart3 = __webpack_require__(481);\n\t\n\tvar _linechart4 = _interopRequireDefault(_linechart3);\n\t\n\t__webpack_require__(627);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  restrict: 'E',\n\t  bindings: {},\n\t  template: _linechart2.default,\n\t  controller: _linechart4.default,\n\t  controllerAs: 'vm'\n\t};\n\n/***/ },\n/* 480 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1>曲线图</h1>\\n\\t<h2>安装</h2>\\n\\t<p>安装ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n\\t<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"bash\\\">npm install ffan-ng-echarts --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>注入模块</h2>\\n\\t<p>在使用图表的模版入口js中注入ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport 'ffan-ng-echarts';\\nimport linechartComponent from './linechart.component';\\n\\nexport default angular.module('lineChart', [\\n  'ng-echarts'\\n])\\n.component('lineChart', linechartComponent);\\n</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<p>在controller中注入echarts lib</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\n// include line chart\\nrequire('echarts/lib/chart/line');\\n\\n// include tooltip component\\nrequire('echarts/lib/component/tooltip');\\n// include title component\\nrequire('echarts/lib/component/title');\\n// include legend component\\nrequire('echarts/lib/component/legend');\\n</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>示例</h2>\\n</section>\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-12 echarts-container\\\" style=\\\"height: 400px\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.lineConfig\\\" ec-option=\\\"vm.lineOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.lineConfig\\\" ec-option=\\\"vm.lineOption\\\" ></ng-echarts>\\n</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nlet self = this;\\nthis.lineConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\n\\nthis.lineOption = {\\n  title: {\\n    text: '内存使用情况',\\n    subtext: 'pod memory usage',\\n    textAlign: 'left',\\n    x: \\\"0\\\",\\n    textStyle: {\\n      color: '#666',\\n      fontSize: '14'\\n    },\\n    subtextStyle: {\\n      color: '#d6d6d6',\\n      fontSize: '12',\\n      display: 'inline'\\n    }\\n  },\\n  grid: {\\n    borderWidth: 0,\\n    borderColor: '#f2f2f2'\\n  },\\n  legend: {\\n    orient: 'horizontal',\\n    top: '0',\\n    right: '0',\\n    align: 'left',\\n    data: ['op-lodgings-sync', 'elasticsearch-logging']\\n  },\\n  tooltip: {\\n    trigger: 'axis'\\n  },\\n  xAxis: {\\n    type: 'category',\\n    boundaryGap: false,\\n    data: ['13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55', '14:00', '14:05', '14:10', '14:15', '14:20'],\\n      splitLine: {\\n      show: true,\\n      interval: 'auto'\\n    }\\n  },\\n  yAxis: {\\n    type: 'value',\\n    axisLabel: {\\n      formatter: '{value} GiB'\\n    }\\n  },\\n  color: ['#64b1e4', '#fa9073'],\\n  series: [\\n    {\\n      name: 'op-lodgings-sync',\\n      type: 'line',\\n      smooth: false,\\n      data: [1.1, 4.5, 3.4, 1.7, 3.8, 2.1, 4.5, 4.7, 5.1, 3.8, 5.5, 6.2]\\n    },\\n    {\\n      name: 'elasticsearch-logging',\\n      type: 'line',\\n      smooth: false,\\n      data: [2.6, 3.7, 5.1, 8.2, 3.2, 6.1, 3.9, 4.5, 3.4, 1.7, 3.8, 2.1]\\n    }\\n  ]\\n};\\n</div>\\n</div>\\n\"\n\n/***/ },\n/* 481 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * (description)\n\t *\n\t * @author yourname\n\t */\n\t\n\t// include line chart\n\t__webpack_require__(482);\n\t\n\t// include tooltip component\n\t__webpack_require__(616);\n\t// include title component\n\t__webpack_require__(620);\n\t// include legend component\n\t__webpack_require__(621);\n\t\n\tvar LinechartController = function () {\n\t\tfunction LinechartController() {\n\t\t\t\"ngInject\";\n\t\n\t\t\t_classCallCheck(this, LinechartController);\n\t\n\t\t\tthis.initLineChart();\n\t\t}\n\t\n\t\t_createClass(LinechartController, [{\n\t\t\tkey: 'initLineChart',\n\t\t\tvalue: function initLineChart() {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.lineConfig = {\n\t\t\t\t\ttheme: 'default',\n\t\t\t\t\tdataLoaded: true\n\t\t\t\t};\n\t\n\t\t\t\tthis.lineOption = {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: '内存使用情况',\n\t\t\t\t\t\tsubtext: 'pod memory usage',\n\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\tx: \"0\",\n\t\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\t\tcolor: '#666',\n\t\t\t\t\t\t\tfontSize: '14'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsubtextStyle: {\n\t\t\t\t\t\t\tcolor: '#d6d6d6',\n\t\t\t\t\t\t\tfontSize: '12',\n\t\t\t\t\t\t\tdisplay: 'inline'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tgrid: {\n\t\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\t\tborderColor: '#f2f2f2'\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\torient: 'horizontal',\n\t\t\t\t\t\ttop: '0',\n\t\t\t\t\t\tright: '0',\n\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\tdata: ['op-lodgings-sync', 'elasticsearch-logging']\n\t\t\t\t\t},\n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\ttrigger: 'axis'\n\t\t\t\t\t},\n\t\t\t\t\txAxis: {\n\t\t\t\t\t\ttype: 'category',\n\t\t\t\t\t\tboundaryGap: false,\n\t\t\t\t\t\tdata: ['13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55', '14:00', '14:05', '14:10', '14:15', '14:20'],\n\t\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\tinterval: 'auto'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tyAxis: {\n\t\t\t\t\t\ttype: 'value',\n\t\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\t\tformatter: '{value} GiB'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tcolor: ['#64b1e4', '#fa9073'],\n\t\t\t\t\tseries: [{\n\t\t\t\t\t\tname: 'op-lodgings-sync',\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tsmooth: false,\n\t\t\t\t\t\tdata: [1.1, 4.5, 3.4, 1.7, 3.8, 2.1, 4.5, 4.7, 5.1, 3.8, 5.5, 6.2]\n\t\t\t\t\t}, {\n\t\t\t\t\t\tname: 'elasticsearch-logging',\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tsmooth: false,\n\t\t\t\t\t\tdata: [2.6, 3.7, 5.1, 8.2, 3.2, 6.1, 3.9, 4.5, 3.4, 1.7, 3.8, 2.1]\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn LinechartController;\n\t}();\n\t\n\texports.default = LinechartController;\n\n/***/ },\n/* 482 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var echarts = __webpack_require__(484);\n\t    var PRIORITY = echarts.PRIORITY;\n\t\n\t    __webpack_require__(582);\n\t    __webpack_require__(585);\n\t\n\t    echarts.registerVisual(zrUtil.curry(\n\t        __webpack_require__(591), 'line', 'circle', 'line'\n\t    ));\n\t    echarts.registerLayout(zrUtil.curry(\n\t        __webpack_require__(592), 'line'\n\t    ));\n\t\n\t    // Down sample after filter\n\t    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n\t        __webpack_require__(593), 'line'\n\t    ));\n\t\n\t    // In case developer forget to include grid component\n\t    __webpack_require__(594);\n\n\n/***/ },\n/* 483 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @module zrender/core/util\n\t */\n\t\n\t\n\t    // 用于处理merge时无法遍历Date等对象的问题\n\t    var BUILTIN_OBJECT = {\n\t        '[object Function]': 1,\n\t        '[object RegExp]': 1,\n\t        '[object Date]': 1,\n\t        '[object Error]': 1,\n\t        '[object CanvasGradient]': 1,\n\t        '[object CanvasPattern]': 1,\n\t        // For node-canvas\n\t        '[object Image]': 1,\n\t        '[object Canvas]': 1\n\t    };\n\t\n\t    var TYPED_ARRAY = {\n\t        '[object Int8Array]': 1,\n\t        '[object Uint8Array]': 1,\n\t        '[object Uint8ClampedArray]': 1,\n\t        '[object Int16Array]': 1,\n\t        '[object Uint16Array]': 1,\n\t        '[object Int32Array]': 1,\n\t        '[object Uint32Array]': 1,\n\t        '[object Float32Array]': 1,\n\t        '[object Float64Array]': 1\n\t    };\n\t\n\t    var objToString = Object.prototype.toString;\n\t\n\t    var arrayProto = Array.prototype;\n\t    var nativeForEach = arrayProto.forEach;\n\t    var nativeFilter = arrayProto.filter;\n\t    var nativeSlice = arrayProto.slice;\n\t    var nativeMap = arrayProto.map;\n\t    var nativeReduce = arrayProto.reduce;\n\t\n\t    /**\n\t     * Those data types can be cloned:\n\t     *     Plain object, Array, TypedArray, number, string, null, undefined.\n\t     * Those data types will be assgined using the orginal data:\n\t     *     BUILTIN_OBJECT\n\t     * Instance of user defined class will be cloned to a plain object, without\n\t     * properties in prototype.\n\t     * Other data types is not supported (not sure what will happen).\n\t     *\n\t     * Caution: do not support clone Date, for performance consideration.\n\t     * (There might be a large number of date in `series.data`).\n\t     * So date should not be modified in and out of echarts.\n\t     *\n\t     * @param {*} source\n\t     * @return {*} new\n\t     */\n\t    function clone(source) {\n\t        if (source == null || typeof source != 'object') {\n\t            return source;\n\t        }\n\t\n\t        var result = source;\n\t        var typeStr = objToString.call(source);\n\t\n\t        if (typeStr === '[object Array]') {\n\t            result = [];\n\t            for (var i = 0, len = source.length; i < len; i++) {\n\t                result[i] = clone(source[i]);\n\t            }\n\t        }\n\t        else if (TYPED_ARRAY[typeStr]) {\n\t            result = source.constructor.from(source);\n\t        }\n\t        else if (!BUILTIN_OBJECT[typeStr] && !isDom(source)) {\n\t            result = {};\n\t            for (var key in source) {\n\t                if (source.hasOwnProperty(key)) {\n\t                    result[key] = clone(source[key]);\n\t                }\n\t            }\n\t        }\n\t\n\t        return result;\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {*} target\n\t     * @param {*} source\n\t     * @param {boolean} [overwrite=false]\n\t     */\n\t    function merge(target, source, overwrite) {\n\t        // We should escapse that source is string\n\t        // and enter for ... in ...\n\t        if (!isObject(source) || !isObject(target)) {\n\t            return overwrite ? clone(source) : target;\n\t        }\n\t\n\t        for (var key in source) {\n\t            if (source.hasOwnProperty(key)) {\n\t                var targetProp = target[key];\n\t                var sourceProp = source[key];\n\t\n\t                if (isObject(sourceProp)\n\t                    && isObject(targetProp)\n\t                    && !isArray(sourceProp)\n\t                    && !isArray(targetProp)\n\t                    && !isDom(sourceProp)\n\t                    && !isDom(targetProp)\n\t                    && !isBuildInObject(sourceProp)\n\t                    && !isBuildInObject(targetProp)\n\t                ) {\n\t                    // 如果需要递归覆盖，就递归调用merge\n\t                    merge(targetProp, sourceProp, overwrite);\n\t                }\n\t                else if (overwrite || !(key in target)) {\n\t                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n\t                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n\t                    target[key] = clone(source[key], true);\n\t                }\n\t            }\n\t        }\n\t\n\t        return target;\n\t    }\n\t\n\t    /**\n\t     * @param {Array} targetAndSources The first item is target, and the rests are source.\n\t     * @param {boolean} [overwrite=false]\n\t     * @return {*} target\n\t     */\n\t    function mergeAll(targetAndSources, overwrite) {\n\t        var result = targetAndSources[0];\n\t        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n\t            result = merge(result, targetAndSources[i], overwrite);\n\t        }\n\t        return result;\n\t    }\n\t\n\t    /**\n\t     * @param {*} target\n\t     * @param {*} source\n\t     * @memberOf module:zrender/core/util\n\t     */\n\t    function extend(target, source) {\n\t        for (var key in source) {\n\t            if (source.hasOwnProperty(key)) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t\n\t    /**\n\t     * @param {*} target\n\t     * @param {*} source\n\t     * @param {boolen} [overlay=false]\n\t     * @memberOf module:zrender/core/util\n\t     */\n\t    function defaults(target, source, overlay) {\n\t        for (var key in source) {\n\t            if (source.hasOwnProperty(key)\n\t                && (overlay ? source[key] != null : target[key] == null)\n\t            ) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t\n\t    function createCanvas() {\n\t        return document.createElement('canvas');\n\t    }\n\t    // FIXME\n\t    var _ctx;\n\t    function getContext() {\n\t        if (!_ctx) {\n\t            // Use util.createCanvas instead of createCanvas\n\t            // because createCanvas may be overwritten in different environment\n\t            _ctx = util.createCanvas().getContext('2d');\n\t        }\n\t        return _ctx;\n\t    }\n\t\n\t    /**\n\t     * 查询数组中元素的index\n\t     * @memberOf module:zrender/core/util\n\t     */\n\t    function indexOf(array, value) {\n\t        if (array) {\n\t            if (array.indexOf) {\n\t                return array.indexOf(value);\n\t            }\n\t            for (var i = 0, len = array.length; i < len; i++) {\n\t                if (array[i] === value) {\n\t                    return i;\n\t                }\n\t            }\n\t        }\n\t        return -1;\n\t    }\n\t\n\t    /**\n\t     * 构造类继承关系\n\t     *\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Function} clazz 源类\n\t     * @param {Function} baseClazz 基类\n\t     */\n\t    function inherits(clazz, baseClazz) {\n\t        var clazzPrototype = clazz.prototype;\n\t        function F() {}\n\t        F.prototype = baseClazz.prototype;\n\t        clazz.prototype = new F();\n\t\n\t        for (var prop in clazzPrototype) {\n\t            clazz.prototype[prop] = clazzPrototype[prop];\n\t        }\n\t        clazz.prototype.constructor = clazz;\n\t        clazz.superClass = baseClazz;\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Object|Function} target\n\t     * @param {Object|Function} sorce\n\t     * @param {boolean} overlay\n\t     */\n\t    function mixin(target, source, overlay) {\n\t        target = 'prototype' in target ? target.prototype : target;\n\t        source = 'prototype' in source ? source.prototype : source;\n\t\n\t        defaults(target, source, overlay);\n\t    }\n\t\n\t    /**\n\t     * @param {Array|TypedArray} data\n\t     */\n\t    function isArrayLike(data) {\n\t        if (! data) {\n\t            return;\n\t        }\n\t        if (typeof data == 'string') {\n\t            return false;\n\t        }\n\t        return typeof data.length == 'number';\n\t    }\n\t\n\t    /**\n\t     * 数组或对象遍历\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Object|Array} obj\n\t     * @param {Function} cb\n\t     * @param {*} [context]\n\t     */\n\t    function each(obj, cb, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        if (obj.forEach && obj.forEach === nativeForEach) {\n\t            obj.forEach(cb, context);\n\t        }\n\t        else if (obj.length === +obj.length) {\n\t            for (var i = 0, len = obj.length; i < len; i++) {\n\t                cb.call(context, obj[i], i, obj);\n\t            }\n\t        }\n\t        else {\n\t            for (var key in obj) {\n\t                if (obj.hasOwnProperty(key)) {\n\t                    cb.call(context, obj[key], key, obj);\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 数组映射\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Array} obj\n\t     * @param {Function} cb\n\t     * @param {*} [context]\n\t     * @return {Array}\n\t     */\n\t    function map(obj, cb, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        if (obj.map && obj.map === nativeMap) {\n\t            return obj.map(cb, context);\n\t        }\n\t        else {\n\t            var result = [];\n\t            for (var i = 0, len = obj.length; i < len; i++) {\n\t                result.push(cb.call(context, obj[i], i, obj));\n\t            }\n\t            return result;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Array} obj\n\t     * @param {Function} cb\n\t     * @param {Object} [memo]\n\t     * @param {*} [context]\n\t     * @return {Array}\n\t     */\n\t    function reduce(obj, cb, memo, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        if (obj.reduce && obj.reduce === nativeReduce) {\n\t            return obj.reduce(cb, memo, context);\n\t        }\n\t        else {\n\t            for (var i = 0, len = obj.length; i < len; i++) {\n\t                memo = cb.call(context, memo, obj[i], i, obj);\n\t            }\n\t            return memo;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 数组过滤\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Array} obj\n\t     * @param {Function} cb\n\t     * @param {*} [context]\n\t     * @return {Array}\n\t     */\n\t    function filter(obj, cb, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        if (obj.filter && obj.filter === nativeFilter) {\n\t            return obj.filter(cb, context);\n\t        }\n\t        else {\n\t            var result = [];\n\t            for (var i = 0, len = obj.length; i < len; i++) {\n\t                if (cb.call(context, obj[i], i, obj)) {\n\t                    result.push(obj[i]);\n\t                }\n\t            }\n\t            return result;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 数组项查找\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Array} obj\n\t     * @param {Function} cb\n\t     * @param {*} [context]\n\t     * @return {Array}\n\t     */\n\t    function find(obj, cb, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        for (var i = 0, len = obj.length; i < len; i++) {\n\t            if (cb.call(context, obj[i], i, obj)) {\n\t                return obj[i];\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Function} func\n\t     * @param {*} context\n\t     * @return {Function}\n\t     */\n\t    function bind(func, context) {\n\t        var args = nativeSlice.call(arguments, 2);\n\t        return function () {\n\t            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Function} func\n\t     * @return {Function}\n\t     */\n\t    function curry(func) {\n\t        var args = nativeSlice.call(arguments, 1);\n\t        return function () {\n\t            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isArray(value) {\n\t        return objToString.call(value) === '[object Array]';\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isFunction(value) {\n\t        return typeof value === 'function';\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isString(value) {\n\t        return objToString.call(value) === '[object String]';\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isObject(value) {\n\t        // Avoid a V8 JIT bug in Chrome 19-20.\n\t        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t        var type = typeof value;\n\t        return type === 'function' || (!!value && type == 'object');\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isBuildInObject(value) {\n\t        return !!BUILTIN_OBJECT[objToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isDom(value) {\n\t        return typeof value === 'object'\n\t            && typeof value.nodeType === 'number'\n\t            && typeof value.ownerDocument === 'object';\n\t    }\n\t\n\t    /**\n\t     * If value1 is not null, then return value1, otherwise judget rest of values.\n\t     * @memberOf module:zrender/core/util\n\t     * @return {*} Final value\n\t     */\n\t    function retrieve(values) {\n\t        for (var i = 0, len = arguments.length; i < len; i++) {\n\t            if (arguments[i] != null) {\n\t                return arguments[i];\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Array} arr\n\t     * @param {number} startIndex\n\t     * @param {number} endIndex\n\t     * @return {Array}\n\t     */\n\t    function slice() {\n\t        return Function.call.apply(nativeSlice, arguments);\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/util\n\t     * @param {boolean} condition\n\t     * @param {string} message\n\t     */\n\t    function assert(condition, message) {\n\t        if (!condition) {\n\t            throw new Error(message);\n\t        }\n\t    }\n\t\n\t    var util = {\n\t        inherits: inherits,\n\t        mixin: mixin,\n\t        clone: clone,\n\t        merge: merge,\n\t        mergeAll: mergeAll,\n\t        extend: extend,\n\t        defaults: defaults,\n\t        getContext: getContext,\n\t        createCanvas: createCanvas,\n\t        indexOf: indexOf,\n\t        slice: slice,\n\t        find: find,\n\t        isArrayLike: isArrayLike,\n\t        each: each,\n\t        map: map,\n\t        reduce: reduce,\n\t        filter: filter,\n\t        bind: bind,\n\t        curry: curry,\n\t        isArray: isArray,\n\t        isString: isString,\n\t        isObject: isObject,\n\t        isFunction: isFunction,\n\t        isBuildInObject: isBuildInObject,\n\t        isDom: isDom,\n\t        retrieve: retrieve,\n\t        assert: assert,\n\t        noop: function () {}\n\t    };\n\t    module.exports = util;\n\t\n\n\n/***/ },\n/* 484 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n\t// In build process 'typeof __DEV__' will be replace with 'boolean'\n\t// So this code will be removed or disabled anyway after built.\n\tif (typeof __DEV__ === 'undefined') {\n\t    // In browser\n\t    if (typeof window !== 'undefined') {\n\t        window.__DEV__ = true;\n\t    }\n\t    // In node\n\t    else if (typeof global !== 'undefined') {\n\t        global.__DEV__ = true;\n\t    }\n\t}\n\t\n\t/*!\n\t * ECharts, a javascript interactive chart library.\n\t *\n\t * Copyright (c) 2015, Baidu Inc.\n\t * All rights reserved.\n\t *\n\t * LICENSE\n\t * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n\t */\n\t\n\t/**\n\t * @module echarts\n\t */\n\t\n\t\n\t    var env = __webpack_require__(485);\n\t\n\t    var GlobalModel = __webpack_require__(486);\n\t    var ExtensionAPI = __webpack_require__(507);\n\t    var CoordinateSystemManager = __webpack_require__(508);\n\t    var OptionManager = __webpack_require__(509);\n\t\n\t    var ComponentModel = __webpack_require__(501);\n\t    var SeriesModel = __webpack_require__(510);\n\t\n\t    var ComponentView = __webpack_require__(511);\n\t    var ChartView = __webpack_require__(524);\n\t    var graphic = __webpack_require__(525);\n\t    var modelUtil = __webpack_require__(487);\n\t    var throttle = __webpack_require__(563);\n\t\n\t    var zrender = __webpack_require__(564);\n\t    var zrUtil = __webpack_require__(483);\n\t    var colorTool = __webpack_require__(521);\n\t    var Eventful = __webpack_require__(515);\n\t    var timsort = __webpack_require__(568);\n\t\n\t    var each = zrUtil.each;\n\t\n\t    var PRIORITY_PROCESSOR_FILTER = 1000;\n\t    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\t\n\t\n\t    var PRIORITY_VISUAL_LAYOUT = 1000;\n\t    var PRIORITY_VISUAL_GLOBAL = 2000;\n\t    var PRIORITY_VISUAL_CHART = 3000;\n\t    var PRIORITY_VISUAL_COMPONENT = 4000;\n\t    var PRIORITY_VISUAL_BRUSH = 5000;\n\t\n\t    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n\t    // where they must not be invoked nestedly, except the only case: invoke\n\t    // dispatchAction with updateMethod \"none\" in main process.\n\t    // This flag is used to carry out this rule.\n\t    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\t    var IN_MAIN_PROCESS = '__flagInMainProcess';\n\t    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n\t    var OPTION_UPDATED = '__optionUpdated';\n\t\n\t    function createRegisterEventWithLowercaseName(method) {\n\t        return function (eventName, handler, context) {\n\t            // Event name is all lowercase\n\t            eventName = eventName && eventName.toLowerCase();\n\t            Eventful.prototype[method].call(this, eventName, handler, context);\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @module echarts~MessageCenter\n\t     */\n\t    function MessageCenter() {\n\t        Eventful.call(this);\n\t    }\n\t    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n\t    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n\t    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n\t    zrUtil.mixin(MessageCenter, Eventful);\n\t\n\t    /**\n\t     * @module echarts~ECharts\n\t     */\n\t    function ECharts (dom, theme, opts) {\n\t        opts = opts || {};\n\t\n\t        // Get theme by name\n\t        if (typeof theme === 'string') {\n\t            theme = themeStorage[theme];\n\t        }\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        this.id;\n\t        /**\n\t         * Group id\n\t         * @type {string}\n\t         */\n\t        this.group;\n\t        /**\n\t         * @type {HTMLDomElement}\n\t         * @private\n\t         */\n\t        this._dom = dom;\n\t        /**\n\t         * @type {module:zrender/ZRender}\n\t         * @private\n\t         */\n\t        var zr = this._zr = zrender.init(dom, {\n\t            renderer: opts.renderer || 'canvas',\n\t            devicePixelRatio: opts.devicePixelRatio,\n\t            width: opts.width,\n\t            height: opts.height\n\t        });\n\t\n\t        /**\n\t         * Expect 60 pfs.\n\t         * @type {Function}\n\t         * @private\n\t         */\n\t        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\t\n\t        /**\n\t         * @type {Object}\n\t         * @private\n\t         */\n\t        this._theme = zrUtil.clone(theme);\n\t\n\t        /**\n\t         * @type {Array.<module:echarts/view/Chart>}\n\t         * @private\n\t         */\n\t        this._chartsViews = [];\n\t\n\t        /**\n\t         * @type {Object.<string, module:echarts/view/Chart>}\n\t         * @private\n\t         */\n\t        this._chartsMap = {};\n\t\n\t        /**\n\t         * @type {Array.<module:echarts/view/Component>}\n\t         * @private\n\t         */\n\t        this._componentsViews = [];\n\t\n\t        /**\n\t         * @type {Object.<string, module:echarts/view/Component>}\n\t         * @private\n\t         */\n\t        this._componentsMap = {};\n\t\n\t        /**\n\t         * @type {module:echarts/ExtensionAPI}\n\t         * @private\n\t         */\n\t        this._api = new ExtensionAPI(this);\n\t\n\t        /**\n\t         * @type {module:echarts/CoordinateSystem}\n\t         * @private\n\t         */\n\t        this._coordSysMgr = new CoordinateSystemManager();\n\t\n\t        Eventful.call(this);\n\t\n\t        /**\n\t         * @type {module:echarts~MessageCenter}\n\t         * @private\n\t         */\n\t        this._messageCenter = new MessageCenter();\n\t\n\t        // Init mouse events\n\t        this._initEvents();\n\t\n\t        // In case some people write `window.onresize = chart.resize`\n\t        this.resize = zrUtil.bind(this.resize, this);\n\t\n\t        // Can't dispatch action during rendering procedure\n\t        this._pendingActions = [];\n\t        // Sort on demand\n\t        function prioritySortFunc(a, b) {\n\t            return a.prio - b.prio;\n\t        }\n\t        timsort(visualFuncs, prioritySortFunc);\n\t        timsort(dataProcessorFuncs, prioritySortFunc);\n\t\n\t        zr.animation.on('frame', this._onframe, this);\n\t    }\n\t\n\t    var echartsProto = ECharts.prototype;\n\t\n\t    echartsProto._onframe = function () {\n\t        // Lazy update\n\t        if (this[OPTION_UPDATED]) {\n\t\n\t            this[IN_MAIN_PROCESS] = true;\n\t\n\t            updateMethods.prepareAndUpdate.call(this);\n\t\n\t            this[IN_MAIN_PROCESS] = false;\n\t\n\t            this[OPTION_UPDATED] = false;\n\t        }\n\t    };\n\t    /**\n\t     * @return {HTMLDomElement}\n\t     */\n\t    echartsProto.getDom = function () {\n\t        return this._dom;\n\t    };\n\t\n\t    /**\n\t     * @return {module:zrender~ZRender}\n\t     */\n\t    echartsProto.getZr = function () {\n\t        return this._zr;\n\t    };\n\t\n\t    /**\n\t     * @param {Object} option\n\t     * @param {boolean} notMerge\n\t     * @param {boolean} [lazyUpdate=false] Useful when setOption frequently.\n\t     */\n\t    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n\t        if (__DEV__) {\n\t            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n\t        }\n\t\n\t        this[IN_MAIN_PROCESS] = true;\n\t\n\t        if (!this._model || notMerge) {\n\t            var optionManager = new OptionManager(this._api);\n\t            var theme = this._theme;\n\t            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n\t            ecModel.init(null, null, theme, optionManager);\n\t        }\n\t\n\t        // FIXME\n\t        // ugly\n\t        this.__lastOnlyGraphic = !!(option && option.graphic);\n\t        zrUtil.each(option, function (o, mainType) {\n\t            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n\t        }, this);\n\t\n\t        this._model.setOption(option, optionPreprocessorFuncs);\n\t\n\t        if (lazyUpdate) {\n\t            this[OPTION_UPDATED] = true;\n\t        }\n\t        else {\n\t            updateMethods.prepareAndUpdate.call(this);\n\t            // Ensure zr refresh sychronously, and then pixel in canvas can be\n\t            // fetched after `setOption`.\n\t            this._zr.flush();\n\t            this[OPTION_UPDATED] = false;\n\t        }\n\t\n\t        this[IN_MAIN_PROCESS] = false;\n\t\n\t        flushPendingActions.call(this, false);\n\t    };\n\t\n\t    /**\n\t     * @DEPRECATED\n\t     */\n\t    echartsProto.setTheme = function () {\n\t        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n\t    };\n\t\n\t    /**\n\t     * @return {module:echarts/model/Global}\n\t     */\n\t    echartsProto.getModel = function () {\n\t        return this._model;\n\t    };\n\t\n\t    /**\n\t     * @return {Object}\n\t     */\n\t    echartsProto.getOption = function () {\n\t        return this._model && this._model.getOption();\n\t    };\n\t\n\t    /**\n\t     * @return {number}\n\t     */\n\t    echartsProto.getWidth = function () {\n\t        return this._zr.getWidth();\n\t    };\n\t\n\t    /**\n\t     * @return {number}\n\t     */\n\t    echartsProto.getHeight = function () {\n\t        return this._zr.getHeight();\n\t    };\n\t\n\t    /**\n\t     * Get canvas which has all thing rendered\n\t     * @param {Object} opts\n\t     * @param {string} [opts.backgroundColor]\n\t     */\n\t    echartsProto.getRenderedCanvas = function (opts) {\n\t        if (!env.canvasSupported) {\n\t            return;\n\t        }\n\t        opts = opts || {};\n\t        opts.pixelRatio = opts.pixelRatio || 1;\n\t        opts.backgroundColor = opts.backgroundColor\n\t            || this._model.get('backgroundColor');\n\t        var zr = this._zr;\n\t        var list = zr.storage.getDisplayList();\n\t        // Stop animations\n\t        zrUtil.each(list, function (el) {\n\t            el.stopAnimation(true);\n\t        });\n\t        return zr.painter.getRenderedCanvas(opts);\n\t    };\n\t    /**\n\t     * @return {string}\n\t     * @param {Object} opts\n\t     * @param {string} [opts.type='png']\n\t     * @param {string} [opts.pixelRatio=1]\n\t     * @param {string} [opts.backgroundColor]\n\t     * @param {string} [opts.excludeComponents]\n\t     */\n\t    echartsProto.getDataURL = function (opts) {\n\t        opts = opts || {};\n\t        var excludeComponents = opts.excludeComponents;\n\t        var ecModel = this._model;\n\t        var excludesComponentViews = [];\n\t        var self = this;\n\t\n\t        each(excludeComponents, function (componentType) {\n\t            ecModel.eachComponent({\n\t                mainType: componentType\n\t            }, function (component) {\n\t                var view = self._componentsMap[component.__viewId];\n\t                if (!view.group.ignore) {\n\t                    excludesComponentViews.push(view);\n\t                    view.group.ignore = true;\n\t                }\n\t            });\n\t        });\n\t\n\t        var url = this.getRenderedCanvas(opts).toDataURL(\n\t            'image/' + (opts && opts.type || 'png')\n\t        );\n\t\n\t        each(excludesComponentViews, function (view) {\n\t            view.group.ignore = false;\n\t        });\n\t        return url;\n\t    };\n\t\n\t\n\t    /**\n\t     * @return {string}\n\t     * @param {Object} opts\n\t     * @param {string} [opts.type='png']\n\t     * @param {string} [opts.pixelRatio=1]\n\t     * @param {string} [opts.backgroundColor]\n\t     */\n\t    echartsProto.getConnectedDataURL = function (opts) {\n\t        if (!env.canvasSupported) {\n\t            return;\n\t        }\n\t        var groupId = this.group;\n\t        var mathMin = Math.min;\n\t        var mathMax = Math.max;\n\t        var MAX_NUMBER = Infinity;\n\t        if (connectedGroups[groupId]) {\n\t            var left = MAX_NUMBER;\n\t            var top = MAX_NUMBER;\n\t            var right = -MAX_NUMBER;\n\t            var bottom = -MAX_NUMBER;\n\t            var canvasList = [];\n\t            var dpr = (opts && opts.pixelRatio) || 1;\n\t\n\t            zrUtil.each(instances, function (chart, id) {\n\t                if (chart.group === groupId) {\n\t                    var canvas = chart.getRenderedCanvas(\n\t                        zrUtil.clone(opts)\n\t                    );\n\t                    var boundingRect = chart.getDom().getBoundingClientRect();\n\t                    left = mathMin(boundingRect.left, left);\n\t                    top = mathMin(boundingRect.top, top);\n\t                    right = mathMax(boundingRect.right, right);\n\t                    bottom = mathMax(boundingRect.bottom, bottom);\n\t                    canvasList.push({\n\t                        dom: canvas,\n\t                        left: boundingRect.left,\n\t                        top: boundingRect.top\n\t                    });\n\t                }\n\t            });\n\t\n\t            left *= dpr;\n\t            top *= dpr;\n\t            right *= dpr;\n\t            bottom *= dpr;\n\t            var width = right - left;\n\t            var height = bottom - top;\n\t            var targetCanvas = zrUtil.createCanvas();\n\t            targetCanvas.width = width;\n\t            targetCanvas.height = height;\n\t            var zr = zrender.init(targetCanvas);\n\t\n\t            each(canvasList, function (item) {\n\t                var img = new graphic.Image({\n\t                    style: {\n\t                        x: item.left * dpr - left,\n\t                        y: item.top * dpr - top,\n\t                        image: item.dom\n\t                    }\n\t                });\n\t                zr.add(img);\n\t            });\n\t            zr.refreshImmediately();\n\t\n\t            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n\t        }\n\t        else {\n\t            return this.getDataURL(opts);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Convert from logical coordinate system to pixel coordinate system.\n\t     * See CoordinateSystem#convertToPixel.\n\t     * @param {string|Object} finder\n\t     *        If string, e.g., 'geo', means {geoIndex: 0}.\n\t     *        If Object, could contain some of these properties below:\n\t     *        {\n\t     *            seriesIndex / seriesId / seriesName,\n\t     *            geoIndex / geoId, geoName,\n\t     *            bmapIndex / bmapId / bmapName,\n\t     *            xAxisIndex / xAxisId / xAxisName,\n\t     *            yAxisIndex / yAxisId / yAxisName,\n\t     *            gridIndex / gridId / gridName,\n\t     *            ... (can be extended)\n\t     *        }\n\t     * @param {Array|number} value\n\t     * @return {Array|number} result\n\t     */\n\t    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\t\n\t    /**\n\t     * Convert from pixel coordinate system to logical coordinate system.\n\t     * See CoordinateSystem#convertFromPixel.\n\t     * @param {string|Object} finder\n\t     *        If string, e.g., 'geo', means {geoIndex: 0}.\n\t     *        If Object, could contain some of these properties below:\n\t     *        {\n\t     *            seriesIndex / seriesId / seriesName,\n\t     *            geoIndex / geoId / geoName,\n\t     *            bmapIndex / bmapId / bmapName,\n\t     *            xAxisIndex / xAxisId / xAxisName,\n\t     *            yAxisIndex / yAxisId / yAxisName\n\t     *            gridIndex / gridId / gridName,\n\t     *            ... (can be extended)\n\t     *        }\n\t     * @param {Array|number} value\n\t     * @return {Array|number} result\n\t     */\n\t    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\t\n\t    function doConvertPixel(methodName, finder, value) {\n\t        var ecModel = this._model;\n\t        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\t        var result;\n\t\n\t        finder = modelUtil.parseFinder(ecModel, finder);\n\t\n\t        for (var i = 0; i < coordSysList.length; i++) {\n\t            var coordSys = coordSysList[i];\n\t            if (coordSys[methodName]\n\t                && (result = coordSys[methodName](ecModel, finder, value)) != null\n\t            ) {\n\t                return result;\n\t            }\n\t        }\n\t\n\t        if (__DEV__) {\n\t            console.warn(\n\t                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n\t            );\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Is the specified coordinate systems or components contain the given pixel point.\n\t     * @param {string|Object} finder\n\t     *        If string, e.g., 'geo', means {geoIndex: 0}.\n\t     *        If Object, could contain some of these properties below:\n\t     *        {\n\t     *            seriesIndex / seriesId / seriesName,\n\t     *            geoIndex / geoId / geoName,\n\t     *            bmapIndex / bmapId / bmapName,\n\t     *            xAxisIndex / xAxisId / xAxisName,\n\t     *            yAxisIndex / yAxisId / yAxisName\n\t     *            gridIndex / gridId / gridName,\n\t     *            ... (can be extended)\n\t     *        }\n\t     * @param {Array|number} value\n\t     * @return {boolean} result\n\t     */\n\t    echartsProto.containPixel = function (finder, value) {\n\t        var ecModel = this._model;\n\t        var result;\n\t\n\t        finder = modelUtil.parseFinder(ecModel, finder);\n\t\n\t        zrUtil.each(finder, function (models, key) {\n\t            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n\t                var coordSys = model.coordinateSystem;\n\t                if (coordSys && coordSys.containPoint) {\n\t                    result |= !!coordSys.containPoint(value);\n\t                }\n\t                else if (key === 'seriesModels') {\n\t                    var view = this._chartsMap[model.__viewId];\n\t                    if (view && view.containPoint) {\n\t                        result |= view.containPoint(value, model);\n\t                    }\n\t                    else {\n\t                        if (__DEV__) {\n\t                            console.warn(key + ': ' + (view\n\t                                ? 'The found component do not support containPoint.'\n\t                                : 'No view mapping to the found component.'\n\t                            ));\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                    if (__DEV__) {\n\t                        console.warn(key + ': containPoint is not supported');\n\t                    }\n\t                }\n\t            }, this);\n\t        }, this);\n\t\n\t        return !!result;\n\t    };\n\t\n\t    /**\n\t     * Get visual from series or data.\n\t     * @param {string|Object} finder\n\t     *        If string, e.g., 'series', means {seriesIndex: 0}.\n\t     *        If Object, could contain some of these properties below:\n\t     *        {\n\t     *            seriesIndex / seriesId / seriesName,\n\t     *            dataIndex / dataIndexInside\n\t     *        }\n\t     *        If dataIndex is not specified, series visual will be fetched,\n\t     *        but not data item visual.\n\t     *        If all of seriesIndex, seriesId, seriesName are not specified,\n\t     *        visual will be fetched from first series.\n\t     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n\t     */\n\t    echartsProto.getVisual = function (finder, visualType) {\n\t        var ecModel = this._model;\n\t\n\t        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\t\n\t        var seriesModel = finder.seriesModel;\n\t\n\t        if (__DEV__) {\n\t            if (!seriesModel) {\n\t                console.warn('There is no specified seires model');\n\t            }\n\t        }\n\t\n\t        var data = seriesModel.getData();\n\t\n\t        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n\t            ? finder.dataIndexInside\n\t            : finder.hasOwnProperty('dataIndex')\n\t            ? data.indexOfRawIndex(finder.dataIndex)\n\t            : null;\n\t\n\t        return dataIndexInside != null\n\t            ? data.getItemVisual(dataIndexInside, visualType)\n\t            : data.getVisual(visualType);\n\t    };\n\t\n\t\n\t    var updateMethods = {\n\t\n\t        /**\n\t         * @param {Object} payload\n\t         * @private\n\t         */\n\t        update: function (payload) {\n\t            // console.time && console.time('update');\n\t\n\t            var ecModel = this._model;\n\t            var api = this._api;\n\t            var coordSysMgr = this._coordSysMgr;\n\t            var zr = this._zr;\n\t            // update before setOption\n\t            if (!ecModel) {\n\t                return;\n\t            }\n\t\n\t            // Fixme First time update ?\n\t            ecModel.restoreData();\n\t\n\t            // TODO\n\t            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n\t            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\t\n\t            // Create new coordinate system each update\n\t            // In LineView may save the old coordinate system and use it to get the orignal point\n\t            coordSysMgr.create(this._model, this._api);\n\t\n\t            processData.call(this, ecModel, api);\n\t\n\t            stackSeriesData.call(this, ecModel);\n\t\n\t            coordSysMgr.update(ecModel, api);\n\t\n\t            doVisualEncoding.call(this, ecModel, payload);\n\t\n\t            doRender.call(this, ecModel, payload);\n\t\n\t            // Set background\n\t            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\t\n\t            var painter = zr.painter;\n\t            // TODO all use clearColor ?\n\t            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n\t                zr.configLayer(0, {\n\t                    clearColor: backgroundColor\n\t                });\n\t            }\n\t            else {\n\t                // In IE8\n\t                if (!env.canvasSupported) {\n\t                    var colorArr = colorTool.parse(backgroundColor);\n\t                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\t                    if (colorArr[3] === 0) {\n\t                        backgroundColor = 'transparent';\n\t                    }\n\t                }\n\t                if (backgroundColor.colorStops || backgroundColor.image) {\n\t                    // Gradient background\n\t                    // FIXME Fixed layer？\n\t                    zr.configLayer(0, {\n\t                        clearColor: backgroundColor\n\t                    });\n\t                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\t\n\t                    this._dom.style.background = 'transparent';\n\t                }\n\t                else {\n\t                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n\t                        zr.configLayer(0, {\n\t                            clearColor: null\n\t                        });\n\t                    }\n\t                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\t\n\t                    this._dom.style.background = backgroundColor;\n\t                }\n\t            }\n\t\n\t            // console.time && console.timeEnd('update');\n\t        },\n\t\n\t        // PENDING\n\t        /**\n\t         * @param {Object} payload\n\t         * @private\n\t         */\n\t        updateView: function (payload) {\n\t            var ecModel = this._model;\n\t\n\t            // update before setOption\n\t            if (!ecModel) {\n\t                return;\n\t            }\n\t\n\t            ecModel.eachSeries(function (seriesModel) {\n\t                seriesModel.getData().clearAllVisual();\n\t            });\n\t\n\t            doVisualEncoding.call(this, ecModel, payload);\n\t\n\t            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n\t        },\n\t\n\t        /**\n\t         * @param {Object} payload\n\t         * @private\n\t         */\n\t        updateVisual: function (payload) {\n\t            var ecModel = this._model;\n\t\n\t            // update before setOption\n\t            if (!ecModel) {\n\t                return;\n\t            }\n\t\n\t            ecModel.eachSeries(function (seriesModel) {\n\t                seriesModel.getData().clearAllVisual();\n\t            });\n\t\n\t            doVisualEncoding.call(this, ecModel, payload);\n\t\n\t            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n\t        },\n\t\n\t        /**\n\t         * @param {Object} payload\n\t         * @private\n\t         */\n\t        updateLayout: function (payload) {\n\t            var ecModel = this._model;\n\t\n\t            // update before setOption\n\t            if (!ecModel) {\n\t                return;\n\t            }\n\t\n\t            doLayout.call(this, ecModel, payload);\n\t\n\t            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n\t        },\n\t\n\t        /**\n\t         * @param {Object} payload\n\t         * @private\n\t         */\n\t        highlight: function (payload) {\n\t            toggleHighlight.call(this, 'highlight', payload);\n\t        },\n\t\n\t        /**\n\t         * @param {Object} payload\n\t         * @private\n\t         */\n\t        downplay: function (payload) {\n\t            toggleHighlight.call(this, 'downplay', payload);\n\t        },\n\t\n\t        /**\n\t         * @param {Object} payload\n\t         * @private\n\t         */\n\t        prepareAndUpdate: function (payload) {\n\t            var ecModel = this._model;\n\t\n\t            prepareView.call(this, 'component', ecModel);\n\t\n\t            prepareView.call(this, 'chart', ecModel);\n\t\n\t            // FIXME\n\t            // ugly\n\t            if (this.__lastOnlyGraphic) {\n\t                each(this._componentsViews, function (componentView) {\n\t                    var componentModel = componentView.__model;\n\t                    if (componentModel && componentModel.mainType === 'graphic') {\n\t                        componentView.render(componentModel, ecModel, this._api, payload);\n\t                        updateZ(componentModel, componentView);\n\t                    }\n\t                }, this);\n\t                this.__lastOnlyGraphic = false;\n\t            }\n\t            else {\n\t                updateMethods.update.call(this, payload);\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @param {Object} payload\n\t     * @private\n\t     */\n\t    function toggleHighlight(method, payload) {\n\t        var ecModel = this._model;\n\t\n\t        // dispatchAction before setOption\n\t        if (!ecModel) {\n\t            return;\n\t        }\n\t\n\t        ecModel.eachComponent(\n\t            {mainType: 'series', query: payload},\n\t            function (seriesModel, index) {\n\t                var chartView = this._chartsMap[seriesModel.__viewId];\n\t                if (chartView && chartView.__alive) {\n\t                    chartView[method](\n\t                        seriesModel, ecModel, this._api, payload\n\t                    );\n\t                }\n\t            },\n\t            this\n\t        );\n\t    }\n\t\n\t    /**\n\t     * Resize the chart\n\t     * @param {Object} opts\n\t     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n\t     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n\t     */\n\t    echartsProto.resize = function (opts) {\n\t        if (__DEV__) {\n\t            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n\t        }\n\t\n\t        this[IN_MAIN_PROCESS] = true;\n\t\n\t        this._zr.resize(opts);\n\t\n\t        var optionChanged = this._model && this._model.resetOption('media');\n\t        updateMethods[optionChanged ? 'prepareAndUpdate' : 'update'].call(this);\n\t\n\t        // Resize loading effect\n\t        this._loadingFX && this._loadingFX.resize();\n\t\n\t        this[IN_MAIN_PROCESS] = false;\n\t\n\t        flushPendingActions.call(this);\n\t    };\n\t\n\t    /**\n\t     * Show loading effect\n\t     * @param  {string} [name='default']\n\t     * @param  {Object} [cfg]\n\t     */\n\t    echartsProto.showLoading = function (name, cfg) {\n\t        if (zrUtil.isObject(name)) {\n\t            cfg = name;\n\t            name = '';\n\t        }\n\t        name = name || 'default';\n\t\n\t        this.hideLoading();\n\t        if (!loadingEffects[name]) {\n\t            if (__DEV__) {\n\t                console.warn('Loading effects ' + name + ' not exists.');\n\t            }\n\t            return;\n\t        }\n\t        var el = loadingEffects[name](this._api, cfg);\n\t        var zr = this._zr;\n\t        this._loadingFX = el;\n\t\n\t        zr.add(el);\n\t    };\n\t\n\t    /**\n\t     * Hide loading effect\n\t     */\n\t    echartsProto.hideLoading = function () {\n\t        this._loadingFX && this._zr.remove(this._loadingFX);\n\t        this._loadingFX = null;\n\t    };\n\t\n\t    /**\n\t     * @param {Object} eventObj\n\t     * @return {Object}\n\t     */\n\t    echartsProto.makeActionFromEvent = function (eventObj) {\n\t        var payload = zrUtil.extend({}, eventObj);\n\t        payload.type = eventActionMap[eventObj.type];\n\t        return payload;\n\t    };\n\t\n\t    /**\n\t     * @pubilc\n\t     * @param {Object} payload\n\t     * @param {string} [payload.type] Action type\n\t     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n\t     * @param {boolean} [opt.silent=false] Whether trigger events.\n\t     * @param {boolean} [opt.flush=undefined]\n\t     *                  true: Flush immediately, and then pixel in canvas can be fetched\n\t     *                      immediately. Caution: it might affect performance.\n\t     *                  false: Not not flush.\n\t     *                  undefined: Auto decide whether perform flush.\n\t     */\n\t    echartsProto.dispatchAction = function (payload, opt) {\n\t        if (!zrUtil.isObject(opt)) {\n\t            opt = {silent: !!opt};\n\t        }\n\t\n\t        if (!actions[payload.type]) {\n\t            return;\n\t        }\n\t\n\t        // if (__DEV__) {\n\t        //     zrUtil.assert(\n\t        //         !this[IN_MAIN_PROCESS],\n\t        //         '`dispatchAction` should not be called during main process.'\n\t        //         + 'unless updateMathod is \"none\".'\n\t        //     );\n\t        // }\n\t\n\t        // May dispatchAction in rendering procedure\n\t        if (this[IN_MAIN_PROCESS]) {\n\t            this._pendingActions.push(payload);\n\t            return;\n\t        }\n\t\n\t        doDispatchAction.call(this, payload, opt.silent);\n\t\n\t        if (opt.flush) {\n\t            this._zr.flush(true);\n\t        }\n\t        else if (opt.flush !== false && env.browser.weChat) {\n\t            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n\t            // hang when sliding page (on touch event), which cause that zr does not\n\t            // refresh util user interaction finished, which is not expected.\n\t            // But `dispatchAction` may be called too frequently when pan on touch\n\t            // screen, which impacts performance if do not throttle them.\n\t            this._throttledZrFlush();\n\t        }\n\t\n\t        flushPendingActions.call(this, opt.silent);\n\t    };\n\t\n\t    function doDispatchAction(payload, silent) {\n\t        var actionWrap = actions[payload.type];\n\t        var actionInfo = actionWrap.actionInfo;\n\t        var updateMethod = actionInfo.update || 'update';\n\t\n\t        this[IN_MAIN_PROCESS] = true;\n\t\n\t        var payloads = [payload];\n\t        var batched = false;\n\t        // Batch action\n\t        if (payload.batch) {\n\t            batched = true;\n\t            payloads = zrUtil.map(payload.batch, function (item) {\n\t                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n\t                item.batch = null;\n\t                return item;\n\t            });\n\t        }\n\t\n\t        var eventObjBatch = [];\n\t        var eventObj;\n\t        var isHighlightOrDownplay = payload.type === 'highlight' || payload.type === 'downplay';\n\t        for (var i = 0; i < payloads.length; i++) {\n\t            var batchItem = payloads[i];\n\t            // Action can specify the event by return it.\n\t            eventObj = actionWrap.action(batchItem, this._model);\n\t            // Emit event outside\n\t            eventObj = eventObj || zrUtil.extend({}, batchItem);\n\t            // Convert type to eventType\n\t            eventObj.type = actionInfo.event || eventObj.type;\n\t            eventObjBatch.push(eventObj);\n\t\n\t            // Highlight and downplay are special.\n\t            isHighlightOrDownplay && updateMethods[updateMethod].call(this, batchItem);\n\t        }\n\t\n\t        if (updateMethod !== 'none' && !isHighlightOrDownplay) {\n\t            // Still dirty\n\t            if (this[OPTION_UPDATED]) {\n\t                // FIXME Pass payload ?\n\t                updateMethods.prepareAndUpdate.call(this, payload);\n\t                this[OPTION_UPDATED] = false;\n\t            }\n\t            else {\n\t                updateMethods[updateMethod].call(this, payload);\n\t            }\n\t        }\n\t\n\t        // Follow the rule of action batch\n\t        if (batched) {\n\t            eventObj = {\n\t                type: actionInfo.event || payload.type,\n\t                batch: eventObjBatch\n\t            };\n\t        }\n\t        else {\n\t            eventObj = eventObjBatch[0];\n\t        }\n\t\n\t        this[IN_MAIN_PROCESS] = false;\n\t\n\t        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n\t    }\n\t\n\t    function flushPendingActions(silent) {\n\t        var pendingActions = this._pendingActions;\n\t        while (pendingActions.length) {\n\t            var payload = pendingActions.shift();\n\t            doDispatchAction.call(this, payload, silent);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Register event\n\t     * @method\n\t     */\n\t    echartsProto.on = createRegisterEventWithLowercaseName('on');\n\t    echartsProto.off = createRegisterEventWithLowercaseName('off');\n\t    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\t\n\t    /**\n\t     * @param {string} methodName\n\t     * @private\n\t     */\n\t    function invokeUpdateMethod(methodName, ecModel, payload) {\n\t        var api = this._api;\n\t\n\t        // Update all components\n\t        each(this._componentsViews, function (component) {\n\t            var componentModel = component.__model;\n\t            component[methodName](componentModel, ecModel, api, payload);\n\t\n\t            updateZ(componentModel, component);\n\t        }, this);\n\t\n\t        // Upate all charts\n\t        ecModel.eachSeries(function (seriesModel, idx) {\n\t            var chart = this._chartsMap[seriesModel.__viewId];\n\t            chart[methodName](seriesModel, ecModel, api, payload);\n\t\n\t            updateZ(seriesModel, chart);\n\t\n\t            updateProgressiveAndBlend(seriesModel, chart);\n\t        }, this);\n\t\n\t        // If use hover layer\n\t        updateHoverLayerStatus(this._zr, ecModel);\n\t    }\n\t\n\t    /**\n\t     * Prepare view instances of charts and components\n\t     * @param  {module:echarts/model/Global} ecModel\n\t     * @private\n\t     */\n\t    function prepareView(type, ecModel) {\n\t        var isComponent = type === 'component';\n\t        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n\t        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n\t        var zr = this._zr;\n\t\n\t        for (var i = 0; i < viewList.length; i++) {\n\t            viewList[i].__alive = false;\n\t        }\n\t\n\t        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n\t            if (isComponent) {\n\t                if (componentType === 'series') {\n\t                    return;\n\t                }\n\t            }\n\t            else {\n\t                model = componentType;\n\t            }\n\t\n\t            // Consider: id same and type changed.\n\t            var viewId = model.id + '_' + model.type;\n\t            var view = viewMap[viewId];\n\t            if (!view) {\n\t                var classType = ComponentModel.parseClassType(model.type);\n\t                var Clazz = isComponent\n\t                    ? ComponentView.getClass(classType.main, classType.sub)\n\t                    : ChartView.getClass(classType.sub);\n\t                if (Clazz) {\n\t                    view = new Clazz();\n\t                    view.init(ecModel, this._api);\n\t                    viewMap[viewId] = view;\n\t                    viewList.push(view);\n\t                    zr.add(view.group);\n\t                }\n\t                else {\n\t                    // Error\n\t                    return;\n\t                }\n\t            }\n\t\n\t            model.__viewId = viewId;\n\t            view.__alive = true;\n\t            view.__id = viewId;\n\t            view.__model = model;\n\t        }, this);\n\t\n\t        for (var i = 0; i < viewList.length;) {\n\t            var view = viewList[i];\n\t            if (!view.__alive) {\n\t                zr.remove(view.group);\n\t                view.dispose(ecModel, this._api);\n\t                viewList.splice(i, 1);\n\t                delete viewMap[view.__id];\n\t            }\n\t            else {\n\t                i++;\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Processor data in each series\n\t     *\n\t     * @param {module:echarts/model/Global} ecModel\n\t     * @private\n\t     */\n\t    function processData(ecModel, api) {\n\t        each(dataProcessorFuncs, function (process) {\n\t            process.func(ecModel, api);\n\t        });\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    function stackSeriesData(ecModel) {\n\t        var stackedDataMap = {};\n\t        ecModel.eachSeries(function (series) {\n\t            var stack = series.get('stack');\n\t            var data = series.getData();\n\t            if (stack && data.type === 'list') {\n\t                var previousStack = stackedDataMap[stack];\n\t                if (previousStack) {\n\t                    data.stackedOn = previousStack;\n\t                }\n\t                stackedDataMap[stack] = data;\n\t            }\n\t        });\n\t    }\n\t\n\t    /**\n\t     * Layout before each chart render there series, special visual encoding stage\n\t     *\n\t     * @param {module:echarts/model/Global} ecModel\n\t     * @private\n\t     */\n\t    function doLayout(ecModel, payload) {\n\t        var api = this._api;\n\t        each(visualFuncs, function (visual) {\n\t            if (visual.isLayout) {\n\t                visual.func(ecModel, api, payload);\n\t            }\n\t        });\n\t    }\n\t\n\t    /**\n\t     * Encode visual infomation from data after data processing\n\t     *\n\t     * @param {module:echarts/model/Global} ecModel\n\t     * @private\n\t     */\n\t    function doVisualEncoding(ecModel, payload) {\n\t        var api = this._api;\n\t        ecModel.clearColorPalette();\n\t        ecModel.eachSeries(function (seriesModel) {\n\t            seriesModel.clearColorPalette();\n\t        });\n\t        each(visualFuncs, function (visual) {\n\t            visual.func(ecModel, api, payload);\n\t        });\n\t    }\n\t\n\t    /**\n\t     * Render each chart and component\n\t     * @private\n\t     */\n\t    function doRender(ecModel, payload) {\n\t        var api = this._api;\n\t        // Render all components\n\t        each(this._componentsViews, function (componentView) {\n\t            var componentModel = componentView.__model;\n\t            componentView.render(componentModel, ecModel, api, payload);\n\t\n\t            updateZ(componentModel, componentView);\n\t        }, this);\n\t\n\t        each(this._chartsViews, function (chart) {\n\t            chart.__alive = false;\n\t        }, this);\n\t\n\t        // Render all charts\n\t        ecModel.eachSeries(function (seriesModel, idx) {\n\t            var chartView = this._chartsMap[seriesModel.__viewId];\n\t            chartView.__alive = true;\n\t            chartView.render(seriesModel, ecModel, api, payload);\n\t\n\t            chartView.group.silent = !!seriesModel.get('silent');\n\t\n\t            updateZ(seriesModel, chartView);\n\t\n\t            updateProgressiveAndBlend(seriesModel, chartView);\n\t\n\t        }, this);\n\t\n\t        // If use hover layer\n\t        updateHoverLayerStatus(this._zr, ecModel);\n\t\n\t        // Remove groups of unrendered charts\n\t        each(this._chartsViews, function (chart) {\n\t            if (!chart.__alive) {\n\t                chart.remove(ecModel, api);\n\t            }\n\t        }, this);\n\t    }\n\t\n\t    var MOUSE_EVENT_NAMES = [\n\t        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n\t        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n\t    ];\n\t    /**\n\t     * @private\n\t     */\n\t    echartsProto._initEvents = function () {\n\t        each(MOUSE_EVENT_NAMES, function (eveName) {\n\t            this._zr.on(eveName, function (e) {\n\t                var ecModel = this.getModel();\n\t                var el = e.target;\n\t                var params;\n\t\n\t                // no e.target when 'globalout'.\n\t                if (eveName === 'globalout') {\n\t                    params = {};\n\t                }\n\t                else if (el && el.dataIndex != null) {\n\t                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n\t                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n\t                }\n\t                // If element has custom eventData of components\n\t                else if (el && el.eventData) {\n\t                    params = zrUtil.extend({}, el.eventData);\n\t                }\n\t\n\t                if (params) {\n\t                    params.event = e;\n\t                    params.type = eveName;\n\t                    this.trigger(eveName, params);\n\t                }\n\t\n\t            }, this);\n\t        }, this);\n\t\n\t        each(eventActionMap, function (actionType, eventType) {\n\t            this._messageCenter.on(eventType, function (event) {\n\t                this.trigger(eventType, event);\n\t            }, this);\n\t        }, this);\n\t    };\n\t\n\t    /**\n\t     * @return {boolean}\n\t     */\n\t    echartsProto.isDisposed = function () {\n\t        return this._disposed;\n\t    };\n\t\n\t    /**\n\t     * Clear\n\t     */\n\t    echartsProto.clear = function () {\n\t        this.setOption({ series: [] }, true);\n\t    };\n\t    /**\n\t     * Dispose instance\n\t     */\n\t    echartsProto.dispose = function () {\n\t        if (this._disposed) {\n\t            if (__DEV__) {\n\t                console.warn('Instance ' + this.id + ' has been disposed');\n\t            }\n\t            return;\n\t        }\n\t        this._disposed = true;\n\t\n\t        var api = this._api;\n\t        var ecModel = this._model;\n\t\n\t        each(this._componentsViews, function (component) {\n\t            component.dispose(ecModel, api);\n\t        });\n\t        each(this._chartsViews, function (chart) {\n\t            chart.dispose(ecModel, api);\n\t        });\n\t\n\t        // Dispose after all views disposed\n\t        this._zr.dispose();\n\t\n\t        delete instances[this.id];\n\t    };\n\t\n\t    zrUtil.mixin(ECharts, Eventful);\n\t\n\t    function updateHoverLayerStatus(zr, ecModel) {\n\t        var storage = zr.storage;\n\t        var elCount = 0;\n\t        storage.traverse(function (el) {\n\t            if (!el.isGroup) {\n\t                elCount++;\n\t            }\n\t        });\n\t        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n\t            storage.traverse(function (el) {\n\t                if (!el.isGroup) {\n\t                    el.useHoverLayer = true;\n\t                }\n\t            });\n\t        }\n\t    }\n\t    /**\n\t     * Update chart progressive and blend.\n\t     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n\t     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n\t     */\n\t    function updateProgressiveAndBlend(seriesModel, chartView) {\n\t        // Progressive configuration\n\t        var elCount = 0;\n\t        chartView.group.traverse(function (el) {\n\t            if (el.type !== 'group' && !el.ignore) {\n\t                elCount++;\n\t            }\n\t        });\n\t        var frameDrawNum = +seriesModel.get('progressive');\n\t        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\t        if (needProgressive) {\n\t            chartView.group.traverse(function (el) {\n\t                // FIXME marker and other components\n\t                if (!el.isGroup) {\n\t                    el.progressive = needProgressive ?\n\t                        Math.floor(elCount++ / frameDrawNum) : -1;\n\t                    if (needProgressive) {\n\t                        el.stopAnimation(true);\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        // Blend configration\n\t        var blendMode = seriesModel.get('blendMode') || null;\n\t        if (__DEV__) {\n\t            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n\t                console.warn('Only canvas support blendMode');\n\t            }\n\t        }\n\t        chartView.group.traverse(function (el) {\n\t            // FIXME marker and other components\n\t            if (!el.isGroup) {\n\t                el.setStyle('blend', blendMode);\n\t            }\n\t        });\n\t    }\n\t    /**\n\t     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n\t     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n\t     */\n\t    function updateZ(model, view) {\n\t        var z = model.get('z');\n\t        var zlevel = model.get('zlevel');\n\t        // Set z and zlevel\n\t        view.group.traverse(function (el) {\n\t            if (el.type !== 'group') {\n\t                z != null && (el.z = z);\n\t                zlevel != null && (el.zlevel = zlevel);\n\t            }\n\t        });\n\t    }\n\t    /**\n\t     * @type {Array.<Function>}\n\t     * @inner\n\t     */\n\t    var actions = [];\n\t\n\t    /**\n\t     * Map eventType to actionType\n\t     * @type {Object}\n\t     */\n\t    var eventActionMap = {};\n\t\n\t    /**\n\t     * Data processor functions of each stage\n\t     * @type {Array.<Object.<string, Function>>}\n\t     * @inner\n\t     */\n\t    var dataProcessorFuncs = [];\n\t\n\t    /**\n\t     * @type {Array.<Function>}\n\t     * @inner\n\t     */\n\t    var optionPreprocessorFuncs = [];\n\t\n\t    /**\n\t     * Visual encoding functions of each stage\n\t     * @type {Array.<Object.<string, Function>>}\n\t     * @inner\n\t     */\n\t    var visualFuncs = [];\n\t    /**\n\t     * Theme storage\n\t     * @type {Object.<key, Object>}\n\t     */\n\t    var themeStorage = {};\n\t    /**\n\t     * Loading effects\n\t     */\n\t    var loadingEffects = {};\n\t\n\t\n\t    var instances = {};\n\t    var connectedGroups = {};\n\t\n\t    var idBase = new Date() - 0;\n\t    var groupIdBase = new Date() - 0;\n\t    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\t    /**\n\t     * @alias module:echarts\n\t     */\n\t    var echarts = {\n\t        /**\n\t         * @type {number}\n\t         */\n\t        version: '3.3.2',\n\t        dependencies: {\n\t            zrender: '3.2.2'\n\t        }\n\t    };\n\t\n\t    function enableConnect(chart) {\n\t\n\t        var STATUS_PENDING = 0;\n\t        var STATUS_UPDATING = 1;\n\t        var STATUS_UPDATED = 2;\n\t        var STATUS_KEY = '__connectUpdateStatus';\n\t        function updateConnectedChartsStatus(charts, status) {\n\t            for (var i = 0; i < charts.length; i++) {\n\t                var otherChart = charts[i];\n\t                otherChart[STATUS_KEY] = status;\n\t            }\n\t        }\n\t        zrUtil.each(eventActionMap, function (actionType, eventType) {\n\t            chart._messageCenter.on(eventType, function (event) {\n\t                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n\t                    var action = chart.makeActionFromEvent(event);\n\t                    var otherCharts = [];\n\t\n\t                    zrUtil.each(instances, function (otherChart) {\n\t                        if (otherChart !== chart && otherChart.group === chart.group) {\n\t                            otherCharts.push(otherChart);\n\t                        }\n\t                    });\n\t\n\t                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n\t                    each(otherCharts, function (otherChart) {\n\t                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n\t                            otherChart.dispatchAction(action);\n\t                        }\n\t                    });\n\t                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n\t                }\n\t            });\n\t        });\n\t\n\t    }\n\t    /**\n\t     * @param {HTMLDomElement} dom\n\t     * @param {Object} [theme]\n\t     * @param {Object} opts\n\t     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n\t     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n\t     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n\t     *                              Can be 'auto' (the same as null/undefined)\n\t     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n\t     *                               Can be 'auto' (the same as null/undefined)\n\t     */\n\t    echarts.init = function (dom, theme, opts) {\n\t        if (__DEV__) {\n\t            // Check version\n\t            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n\t                throw new Error(\n\t                    'ZRender ' + zrender.version\n\t                    + ' is too old for ECharts ' + echarts.version\n\t                    + '. Current version need ZRender '\n\t                    + echarts.dependencies.zrender + '+'\n\t                );\n\t            }\n\t            if (!dom) {\n\t                throw new Error('Initialize failed: invalid dom.');\n\t            }\n\t            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n\t                console.warn('Can\\'t get dom width or height');\n\t            }\n\t        }\n\t\n\t        var chart = new ECharts(dom, theme, opts);\n\t        chart.id = 'ec_' + idBase++;\n\t        instances[chart.id] = chart;\n\t\n\t        dom.setAttribute &&\n\t            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\t\n\t        enableConnect(chart);\n\t\n\t        return chart;\n\t    };\n\t\n\t    /**\n\t     * @return {string|Array.<module:echarts~ECharts>} groupId\n\t     */\n\t    echarts.connect = function (groupId) {\n\t        // Is array of charts\n\t        if (zrUtil.isArray(groupId)) {\n\t            var charts = groupId;\n\t            groupId = null;\n\t            // If any chart has group\n\t            zrUtil.each(charts, function (chart) {\n\t                if (chart.group != null) {\n\t                    groupId = chart.group;\n\t                }\n\t            });\n\t            groupId = groupId || ('g_' + groupIdBase++);\n\t            zrUtil.each(charts, function (chart) {\n\t                chart.group = groupId;\n\t            });\n\t        }\n\t        connectedGroups[groupId] = true;\n\t        return groupId;\n\t    };\n\t\n\t    /**\n\t     * @return {string} groupId\n\t     */\n\t    echarts.disConnect = function (groupId) {\n\t        connectedGroups[groupId] = false;\n\t    };\n\t\n\t    /**\n\t     * Dispose a chart instance\n\t     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n\t     */\n\t    echarts.dispose = function (chart) {\n\t        if (zrUtil.isDom(chart)) {\n\t            chart = echarts.getInstanceByDom(chart);\n\t        }\n\t        else if (typeof chart === 'string') {\n\t            chart = instances[chart];\n\t        }\n\t        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n\t            chart.dispose();\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @param  {HTMLDomElement} dom\n\t     * @return {echarts~ECharts}\n\t     */\n\t    echarts.getInstanceByDom = function (dom) {\n\t        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n\t        return instances[key];\n\t    };\n\t    /**\n\t     * @param {string} key\n\t     * @return {echarts~ECharts}\n\t     */\n\t    echarts.getInstanceById = function (key) {\n\t        return instances[key];\n\t    };\n\t\n\t    /**\n\t     * Register theme\n\t     */\n\t    echarts.registerTheme = function (name, theme) {\n\t        themeStorage[name] = theme;\n\t    };\n\t\n\t    /**\n\t     * Register option preprocessor\n\t     * @param {Function} preprocessorFunc\n\t     */\n\t    echarts.registerPreprocessor = function (preprocessorFunc) {\n\t        optionPreprocessorFuncs.push(preprocessorFunc);\n\t    };\n\t\n\t    /**\n\t     * @param {number} [priority=1000]\n\t     * @param {Function} processorFunc\n\t     */\n\t    echarts.registerProcessor = function (priority, processorFunc) {\n\t        if (typeof priority === 'function') {\n\t            processorFunc = priority;\n\t            priority = PRIORITY_PROCESSOR_FILTER;\n\t        }\n\t        if (__DEV__) {\n\t            if (isNaN(priority)) {\n\t                throw new Error('Unkown processor priority');\n\t            }\n\t        }\n\t        dataProcessorFuncs.push({\n\t            prio: priority,\n\t            func: processorFunc\n\t        });\n\t    };\n\t\n\t    /**\n\t     * Usage:\n\t     * registerAction('someAction', 'someEvent', function () { ... });\n\t     * registerAction('someAction', function () { ... });\n\t     * registerAction(\n\t     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n\t     *     function () { ... }\n\t     * );\n\t     *\n\t     * @param {(string|Object)} actionInfo\n\t     * @param {string} actionInfo.type\n\t     * @param {string} [actionInfo.event]\n\t     * @param {string} [actionInfo.update]\n\t     * @param {string} [eventName]\n\t     * @param {Function} action\n\t     */\n\t    echarts.registerAction = function (actionInfo, eventName, action) {\n\t        if (typeof eventName === 'function') {\n\t            action = eventName;\n\t            eventName = '';\n\t        }\n\t        var actionType = zrUtil.isObject(actionInfo)\n\t            ? actionInfo.type\n\t            : ([actionInfo, actionInfo = {\n\t                event: eventName\n\t            }][0]);\n\t\n\t        // Event name is all lowercase\n\t        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n\t        eventName = actionInfo.event;\n\t\n\t        if (!actions[actionType]) {\n\t            actions[actionType] = {action: action, actionInfo: actionInfo};\n\t        }\n\t        eventActionMap[eventName] = actionType;\n\t    };\n\t\n\t    /**\n\t     * @param {string} type\n\t     * @param {*} CoordinateSystem\n\t     */\n\t    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n\t        CoordinateSystemManager.register(type, CoordinateSystem);\n\t    };\n\t\n\t    /**\n\t     * Layout is a special stage of visual encoding\n\t     * Most visual encoding like color are common for different chart\n\t     * But each chart has it's own layout algorithm\n\t     *\n\t     * @param {number} [priority=1000]\n\t     * @param {Function} layoutFunc\n\t     */\n\t    echarts.registerLayout = function (priority, layoutFunc) {\n\t        if (typeof priority === 'function') {\n\t            layoutFunc = priority;\n\t            priority = PRIORITY_VISUAL_LAYOUT;\n\t        }\n\t        if (__DEV__) {\n\t            if (isNaN(priority)) {\n\t                throw new Error('Unkown layout priority');\n\t            }\n\t        }\n\t        visualFuncs.push({\n\t            prio: priority,\n\t            func: layoutFunc,\n\t            isLayout: true\n\t        });\n\t    };\n\t\n\t    /**\n\t     * @param {number} [priority=3000]\n\t     * @param {Function} visualFunc\n\t     */\n\t    echarts.registerVisual = function (priority, visualFunc) {\n\t        if (typeof priority === 'function') {\n\t            visualFunc = priority;\n\t            priority = PRIORITY_VISUAL_CHART;\n\t        }\n\t        if (__DEV__) {\n\t            if (isNaN(priority)) {\n\t                throw new Error('Unkown visual priority');\n\t            }\n\t        }\n\t        visualFuncs.push({\n\t            prio: priority,\n\t            func: visualFunc\n\t        });\n\t    };\n\t\n\t    /**\n\t     * @param {string} name\n\t     */\n\t    echarts.registerLoading = function (name, loadingFx) {\n\t        loadingEffects[name] = loadingFx;\n\t    };\n\t\n\t\n\t    var parseClassType = ComponentModel.parseClassType;\n\t    /**\n\t     * @param {Object} opts\n\t     * @param {string} [superClass]\n\t     */\n\t    echarts.extendComponentModel = function (opts, superClass) {\n\t        var Clazz = ComponentModel;\n\t        if (superClass) {\n\t            var classType = parseClassType(superClass);\n\t            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n\t        }\n\t        return Clazz.extend(opts);\n\t    };\n\t\n\t    /**\n\t     * @param {Object} opts\n\t     * @param {string} [superClass]\n\t     */\n\t    echarts.extendComponentView = function (opts, superClass) {\n\t        var Clazz = ComponentView;\n\t        if (superClass) {\n\t            var classType = parseClassType(superClass);\n\t            Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n\t        }\n\t        return Clazz.extend(opts);\n\t    };\n\t\n\t    /**\n\t     * @param {Object} opts\n\t     * @param {string} [superClass]\n\t     */\n\t    echarts.extendSeriesModel = function (opts, superClass) {\n\t        var Clazz = SeriesModel;\n\t        if (superClass) {\n\t            superClass = 'series.' + superClass.replace('series.', '');\n\t            var classType = parseClassType(superClass);\n\t            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n\t        }\n\t        return Clazz.extend(opts);\n\t    };\n\t\n\t    /**\n\t     * @param {Object} opts\n\t     * @param {string} [superClass]\n\t     */\n\t    echarts.extendChartView = function (opts, superClass) {\n\t        var Clazz = ChartView;\n\t        if (superClass) {\n\t            superClass.replace('series.', '');\n\t            var classType = parseClassType(superClass);\n\t            Clazz = ChartView.getClass(classType.main, true);\n\t        }\n\t        return Clazz.extend(opts);\n\t    };\n\t\n\t    /**\n\t     * ZRender need a canvas context to do measureText.\n\t     * But in node environment canvas may be created by node-canvas.\n\t     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n\t     *\n\t     * Be careful of using it in the browser.\n\t     *\n\t     * @param {Function} creator\n\t     * @example\n\t     *     var Canvas = require('canvas');\n\t     *     var echarts = require('echarts');\n\t     *     echarts.setCanvasCreator(function () {\n\t     *         // Small size is enough.\n\t     *         return new Canvas(32, 32);\n\t     *     });\n\t     */\n\t    echarts.setCanvasCreator = function (creator) {\n\t        zrUtil.createCanvas = creator;\n\t    };\n\t\n\t    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(576));\n\t    echarts.registerPreprocessor(__webpack_require__(577));\n\t    echarts.registerLoading('default', __webpack_require__(579));\n\t\n\t    // Default action\n\t    echarts.registerAction({\n\t        type: 'highlight',\n\t        event: 'highlight',\n\t        update: 'highlight'\n\t    }, zrUtil.noop);\n\t    echarts.registerAction({\n\t        type: 'downplay',\n\t        event: 'downplay',\n\t        update: 'downplay'\n\t    }, zrUtil.noop);\n\t\n\t\n\t    // --------\n\t    // Exports\n\t    // --------\n\t    //\n\t    echarts.List = __webpack_require__(580);\n\t    echarts.Model = __webpack_require__(494);\n\t\n\t    echarts.graphic = __webpack_require__(525);\n\t    echarts.number = __webpack_require__(489);\n\t    echarts.format = __webpack_require__(488);\n\t    echarts.matrix = __webpack_require__(493);\n\t    echarts.vector = __webpack_require__(492);\n\t    echarts.color = __webpack_require__(521);\n\t\n\t    echarts.util = {};\n\t    each([\n\t            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n\t            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n\t            'extend', 'defaults', 'clone'\n\t        ],\n\t        function (name) {\n\t            echarts.util[name] = zrUtil[name];\n\t        }\n\t    );\n\t\n\t    // PRIORITY\n\t    echarts.PRIORITY = {\n\t        PROCESSOR: {\n\t            FILTER: PRIORITY_PROCESSOR_FILTER,\n\t            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n\t        },\n\t        VISUAL: {\n\t            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n\t            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n\t            CHART: PRIORITY_VISUAL_CHART,\n\t            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n\t            BRUSH: PRIORITY_VISUAL_BRUSH\n\t        }\n\t    };\n\t\n\t    module.exports = echarts;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 485 */\n/***/ function(module, exports) {\n\n\t/**\n\t * echarts设备环境识别\n\t *\n\t * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n\t * @author firede[firede@firede.us]\n\t * @desc thanks zepto.\n\t */\n\t\n\t    var env = {};\n\t    if (typeof navigator === 'undefined') {\n\t        // In node\n\t        env = {\n\t            browser: {},\n\t            os: {},\n\t            node: true,\n\t            // Assume canvas is supported\n\t            canvasSupported: true\n\t        };\n\t    }\n\t    else {\n\t        env = detect(navigator.userAgent);\n\t    }\n\t\n\t    module.exports = env;\n\t\n\t    // Zepto.js\n\t    // (c) 2010-2013 Thomas Fuchs\n\t    // Zepto.js may be freely distributed under the MIT license.\n\t\n\t    function detect(ua) {\n\t        var os = {};\n\t        var browser = {};\n\t        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n\t        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n\t        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n\t        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n\t        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n\t        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n\t        // var touchpad = webos && ua.match(/TouchPad/);\n\t        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n\t        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n\t        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n\t        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n\t        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n\t        // var playbook = ua.match(/PlayBook/);\n\t        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\t        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n\t        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n\t        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\t        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n\t            // IE 11 Trident/7.0; rv:11.0\n\t            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n\t        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\t\n\t        var weChat = (/micromessenger/i).test(ua);\n\t\n\t        // Todo: clean this up with a better OS/browser seperation:\n\t        // - discern (more) between multiple browsers on android\n\t        // - decide if kindle fire in silk mode is android or not\n\t        // - Firefox on Android doesn't specify the Android version\n\t        // - possibly devide in os, device and browser hashes\n\t\n\t        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\t\n\t        // if (android) os.android = true, os.version = android[2];\n\t        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n\t        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n\t        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n\t        // if (webos) os.webos = true, os.version = webos[2];\n\t        // if (touchpad) os.touchpad = true;\n\t        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n\t        // if (bb10) os.bb10 = true, os.version = bb10[2];\n\t        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n\t        // if (playbook) browser.playbook = true;\n\t        // if (kindle) os.kindle = true, os.version = kindle[1];\n\t        // if (silk) browser.silk = true, browser.version = silk[1];\n\t        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n\t        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\t        if (firefox) {\n\t            browser.firefox = true;\n\t            browser.version = firefox[1];\n\t        }\n\t        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n\t        // if (webview) browser.webview = true;\n\t\n\t        if (ie) {\n\t            browser.ie = true;\n\t            browser.version = ie[1];\n\t        }\n\t\n\t        if (edge) {\n\t            browser.edge = true;\n\t            browser.version = edge[1];\n\t        }\n\t\n\t        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n\t        // not be set on win phone. So we do not consider Win Phone.\n\t        if (weChat) {\n\t            browser.weChat = true;\n\t        }\n\t\n\t        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n\t        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n\t        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n\t        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n\t        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\t\n\t        return {\n\t            browser: browser,\n\t            os: os,\n\t            node: false,\n\t            // 原生canvas支持，改极端点了\n\t            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n\t            canvasSupported : document.createElement('canvas').getContext ? true : false,\n\t            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n\t            // works on most browsers\n\t            // IE10/11 does not support touch event, and MS Edge supports them but not by\n\t            // default, so we dont check navigator.maxTouchPoints for them here.\n\t            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n\t            // <http://caniuse.com/#search=pointer%20event>.\n\t            pointerEventsSupported: 'onpointerdown' in window\n\t                // Firefox supports pointer but not by default,\n\t                // only MS browsers are reliable on pointer events currently.\n\t                && (browser.edge || (browser.ie && browser.version >= 10))\n\t        };\n\t    }\n\n\n/***/ },\n/* 486 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * ECharts global model\n\t *\n\t * @module {echarts/model/Global}\n\t */\n\t\n\t\n\t\n\t    /**\n\t     * Caution: If the mechanism should be changed some day, these cases\n\t     * should be considered:\n\t     *\n\t     * (1) In `merge option` mode, if using the same option to call `setOption`\n\t     * many times, the result should be the same (try our best to ensure that).\n\t     * (2) In `merge option` mode, if a component has no id/name specified, it\n\t     * will be merged by index, and the result sequence of the components is\n\t     * consistent to the original sequence.\n\t     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n\t     * `mergeOption` in module:echarts/model/OptionManager.\n\t     */\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var modelUtil = __webpack_require__(487);\n\t    var Model = __webpack_require__(494);\n\t    var each = zrUtil.each;\n\t    var filter = zrUtil.filter;\n\t    var map = zrUtil.map;\n\t    var isArray = zrUtil.isArray;\n\t    var indexOf = zrUtil.indexOf;\n\t    var isObject = zrUtil.isObject;\n\t\n\t    var ComponentModel = __webpack_require__(501);\n\t\n\t    var globalDefault = __webpack_require__(505);\n\t\n\t    var OPTION_INNER_KEY = '\\0_ec_inner';\n\t\n\t    /**\n\t     * @alias module:echarts/model/Global\n\t     *\n\t     * @param {Object} option\n\t     * @param {module:echarts/model/Model} parentModel\n\t     * @param {Object} theme\n\t     */\n\t    var GlobalModel = Model.extend({\n\t\n\t        constructor: GlobalModel,\n\t\n\t        init: function (option, parentModel, theme, optionManager) {\n\t            theme = theme || {};\n\t\n\t            this.option = null; // Mark as not initialized.\n\t\n\t            /**\n\t             * @type {module:echarts/model/Model}\n\t             * @private\n\t             */\n\t            this._theme = new Model(theme);\n\t\n\t            /**\n\t             * @type {module:echarts/model/OptionManager}\n\t             */\n\t            this._optionManager = optionManager;\n\t        },\n\t\n\t        setOption: function (option, optionPreprocessorFuncs) {\n\t            zrUtil.assert(\n\t                !(OPTION_INNER_KEY in option),\n\t                'please use chart.getOption()'\n\t            );\n\t\n\t            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\t\n\t            this.resetOption();\n\t        },\n\t\n\t        /**\n\t         * @param {string} type null/undefined: reset all.\n\t         *                      'recreate': force recreate all.\n\t         *                      'timeline': only reset timeline option\n\t         *                      'media': only reset media query option\n\t         * @return {boolean} Whether option changed.\n\t         */\n\t        resetOption: function (type) {\n\t            var optionChanged = false;\n\t            var optionManager = this._optionManager;\n\t\n\t            if (!type || type === 'recreate') {\n\t                var baseOption = optionManager.mountOption(type === 'recreate');\n\t\n\t                if (!this.option || type === 'recreate') {\n\t                    initBase.call(this, baseOption);\n\t                }\n\t                else {\n\t                    this.restoreData();\n\t                    this.mergeOption(baseOption);\n\t                }\n\t                optionChanged = true;\n\t            }\n\t\n\t            if (type === 'timeline' || type === 'media') {\n\t                this.restoreData();\n\t            }\n\t\n\t            if (!type || type === 'recreate' || type === 'timeline') {\n\t                var timelineOption = optionManager.getTimelineOption(this);\n\t                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n\t            }\n\t\n\t            if (!type || type === 'recreate' || type === 'media') {\n\t                var mediaOptions = optionManager.getMediaOption(this, this._api);\n\t                if (mediaOptions.length) {\n\t                    each(mediaOptions, function (mediaOption) {\n\t                        this.mergeOption(mediaOption, optionChanged = true);\n\t                    }, this);\n\t                }\n\t            }\n\t\n\t            return optionChanged;\n\t        },\n\t\n\t        /**\n\t         * @protected\n\t         */\n\t        mergeOption: function (newOption) {\n\t            var option = this.option;\n\t            var componentsMap = this._componentsMap;\n\t            var newCptTypes = [];\n\t\n\t            // 如果不存在对应的 component model 则直接 merge\n\t            each(newOption, function (componentOption, mainType) {\n\t                if (componentOption == null) {\n\t                    return;\n\t                }\n\t\n\t                if (!ComponentModel.hasClass(mainType)) {\n\t                    option[mainType] = option[mainType] == null\n\t                        ? zrUtil.clone(componentOption)\n\t                        : zrUtil.merge(option[mainType], componentOption, true);\n\t                }\n\t                else {\n\t                    newCptTypes.push(mainType);\n\t                }\n\t            });\n\t\n\t            // FIXME OPTION 同步是否要改回原来的\n\t            ComponentModel.topologicalTravel(\n\t                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n\t            );\n\t\n\t            this._seriesIndices = this._seriesIndices || [];\n\t\n\t            function visitComponent(mainType, dependencies) {\n\t                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\t\n\t                var mapResult = modelUtil.mappingToExists(\n\t                    componentsMap[mainType], newCptOptionList\n\t                );\n\t\n\t                modelUtil.makeIdAndName(mapResult);\n\t\n\t                // Set mainType and complete subType.\n\t                each(mapResult, function (item, index) {\n\t                    var opt = item.option;\n\t                    if (isObject(opt)) {\n\t                        item.keyInfo.mainType = mainType;\n\t                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n\t                    }\n\t                });\n\t\n\t                var dependentModels = getComponentsByTypes(\n\t                    componentsMap, dependencies\n\t                );\n\t\n\t                option[mainType] = [];\n\t                componentsMap[mainType] = [];\n\t\n\t                each(mapResult, function (resultItem, index) {\n\t                    var componentModel = resultItem.exist;\n\t                    var newCptOption = resultItem.option;\n\t\n\t                    zrUtil.assert(\n\t                        isObject(newCptOption) || componentModel,\n\t                        'Empty component definition'\n\t                    );\n\t\n\t                    // Consider where is no new option and should be merged using {},\n\t                    // see removeEdgeAndAdd in topologicalTravel and\n\t                    // ComponentModel.getAllClassMainTypes.\n\t                    if (!newCptOption) {\n\t                        componentModel.mergeOption({}, this);\n\t                        componentModel.optionUpdated({}, false);\n\t                    }\n\t                    else {\n\t                        var ComponentModelClass = ComponentModel.getClass(\n\t                            mainType, resultItem.keyInfo.subType, true\n\t                        );\n\t\n\t                        if (componentModel && componentModel instanceof ComponentModelClass) {\n\t                            componentModel.name = resultItem.keyInfo.name;\n\t                            componentModel.mergeOption(newCptOption, this);\n\t                            componentModel.optionUpdated(newCptOption, false);\n\t                        }\n\t                        else {\n\t                            // PENDING Global as parent ?\n\t                            var extraOpt = zrUtil.extend(\n\t                                {\n\t                                    dependentModels: dependentModels,\n\t                                    componentIndex: index\n\t                                },\n\t                                resultItem.keyInfo\n\t                            );\n\t                            componentModel = new ComponentModelClass(\n\t                                newCptOption, this, this, extraOpt\n\t                            );\n\t                            zrUtil.extend(componentModel, extraOpt);\n\t                            componentModel.init(newCptOption, this, this, extraOpt);\n\t                            // Call optionUpdated after init.\n\t                            // newCptOption has been used as componentModel.option\n\t                            // and may be merged with theme and default, so pass null\n\t                            // to avoid confusion.\n\t                            componentModel.optionUpdated(null, true);\n\t                        }\n\t                    }\n\t\n\t                    componentsMap[mainType][index] = componentModel;\n\t                    option[mainType][index] = componentModel.option;\n\t                }, this);\n\t\n\t                // Backup series for filtering.\n\t                if (mainType === 'series') {\n\t                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Get option for output (cloned option and inner info removed)\n\t         * @public\n\t         * @return {Object}\n\t         */\n\t        getOption: function () {\n\t            var option = zrUtil.clone(this.option);\n\t\n\t            each(option, function (opts, mainType) {\n\t                if (ComponentModel.hasClass(mainType)) {\n\t                    var opts = modelUtil.normalizeToArray(opts);\n\t                    for (var i = opts.length - 1; i >= 0; i--) {\n\t                        // Remove options with inner id.\n\t                        if (modelUtil.isIdInner(opts[i])) {\n\t                            opts.splice(i, 1);\n\t                        }\n\t                    }\n\t                    option[mainType] = opts;\n\t                }\n\t            });\n\t\n\t            delete option[OPTION_INNER_KEY];\n\t\n\t            return option;\n\t        },\n\t\n\t        /**\n\t         * @return {module:echarts/model/Model}\n\t         */\n\t        getTheme: function () {\n\t            return this._theme;\n\t        },\n\t\n\t        /**\n\t         * @param {string} mainType\n\t         * @param {number} [idx=0]\n\t         * @return {module:echarts/model/Component}\n\t         */\n\t        getComponent: function (mainType, idx) {\n\t            var list = this._componentsMap[mainType];\n\t            if (list) {\n\t                return list[idx || 0];\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {Object} condition\n\t         * @param {string} condition.mainType\n\t         * @param {string} [condition.subType] If ignore, only query by mainType\n\t         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n\t         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n\t         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n\t         * @return {Array.<module:echarts/model/Component>}\n\t         */\n\t        queryComponents: function (condition) {\n\t            var mainType = condition.mainType;\n\t            if (!mainType) {\n\t                return [];\n\t            }\n\t\n\t            var index = condition.index;\n\t            var id = condition.id;\n\t            var name = condition.name;\n\t\n\t            var cpts = this._componentsMap[mainType];\n\t\n\t            if (!cpts || !cpts.length) {\n\t                return [];\n\t            }\n\t\n\t            var result;\n\t\n\t            if (index != null) {\n\t                if (!isArray(index)) {\n\t                    index = [index];\n\t                }\n\t                result = filter(map(index, function (idx) {\n\t                    return cpts[idx];\n\t                }), function (val) {\n\t                    return !!val;\n\t                });\n\t            }\n\t            else if (id != null) {\n\t                var isIdArray = isArray(id);\n\t                result = filter(cpts, function (cpt) {\n\t                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n\t                        || (!isIdArray && cpt.id === id);\n\t                });\n\t            }\n\t            else if (name != null) {\n\t                var isNameArray = isArray(name);\n\t                result = filter(cpts, function (cpt) {\n\t                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n\t                        || (!isNameArray && cpt.name === name);\n\t                });\n\t            }\n\t            else {\n\t                // Return all components with mainType\n\t                result = cpts;\n\t            }\n\t\n\t            return filterBySubType(result, condition);\n\t        },\n\t\n\t        /**\n\t         * The interface is different from queryComponents,\n\t         * which is convenient for inner usage.\n\t         *\n\t         * @usage\n\t         * var result = findComponents(\n\t         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n\t         * );\n\t         * var result = findComponents(\n\t         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n\t         * );\n\t         * var result = findComponents(\n\t         *     {mainType: 'series'},\n\t         *     function (model, index) {...}\n\t         * );\n\t         * // result like [component0, componnet1, ...]\n\t         *\n\t         * @param {Object} condition\n\t         * @param {string} condition.mainType Mandatory.\n\t         * @param {string} [condition.subType] Optional.\n\t         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n\t         *        where xxx is mainType.\n\t         *        If query attribute is null/undefined or has no index/id/name,\n\t         *        do not filtering by query conditions, which is convenient for\n\t         *        no-payload situations or when target of action is global.\n\t         * @param {Function} [condition.filter] parameter: component, return boolean.\n\t         * @return {Array.<module:echarts/model/Component>}\n\t         */\n\t        findComponents: function (condition) {\n\t            var query = condition.query;\n\t            var mainType = condition.mainType;\n\t\n\t            var queryCond = getQueryCond(query);\n\t            var result = queryCond\n\t                ? this.queryComponents(queryCond)\n\t                : this._componentsMap[mainType];\n\t\n\t            return doFilter(filterBySubType(result, condition));\n\t\n\t            function getQueryCond(q) {\n\t                var indexAttr = mainType + 'Index';\n\t                var idAttr = mainType + 'Id';\n\t                var nameAttr = mainType + 'Name';\n\t                return q && (\n\t                        q.hasOwnProperty(indexAttr)\n\t                        || q.hasOwnProperty(idAttr)\n\t                        || q.hasOwnProperty(nameAttr)\n\t                    )\n\t                    ? {\n\t                        mainType: mainType,\n\t                        // subType will be filtered finally.\n\t                        index: q[indexAttr],\n\t                        id: q[idAttr],\n\t                        name: q[nameAttr]\n\t                    }\n\t                    : null;\n\t            }\n\t\n\t            function doFilter(res) {\n\t                return condition.filter\n\t                     ? filter(res, condition.filter)\n\t                     : res;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @usage\n\t         * eachComponent('legend', function (legendModel, index) {\n\t         *     ...\n\t         * });\n\t         * eachComponent(function (componentType, model, index) {\n\t         *     // componentType does not include subType\n\t         *     // (componentType is 'xxx' but not 'xxx.aa')\n\t         * });\n\t         * eachComponent(\n\t         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n\t         *     function (model, index) {...}\n\t         * );\n\t         * eachComponent(\n\t         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n\t         *     function (model, index) {...}\n\t         * );\n\t         *\n\t         * @param {string|Object=} mainType When mainType is object, the definition\n\t         *                                  is the same as the method 'findComponents'.\n\t         * @param {Function} cb\n\t         * @param {*} context\n\t         */\n\t        eachComponent: function (mainType, cb, context) {\n\t            var componentsMap = this._componentsMap;\n\t\n\t            if (typeof mainType === 'function') {\n\t                context = cb;\n\t                cb = mainType;\n\t                each(componentsMap, function (components, componentType) {\n\t                    each(components, function (component, index) {\n\t                        cb.call(context, componentType, component, index);\n\t                    });\n\t                });\n\t            }\n\t            else if (zrUtil.isString(mainType)) {\n\t                each(componentsMap[mainType], cb, context);\n\t            }\n\t            else if (isObject(mainType)) {\n\t                var queryResult = this.findComponents(mainType);\n\t                each(queryResult, cb, context);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {string} name\n\t         * @return {Array.<module:echarts/model/Series>}\n\t         */\n\t        getSeriesByName: function (name) {\n\t            var series = this._componentsMap.series;\n\t            return filter(series, function (oneSeries) {\n\t                return oneSeries.name === name;\n\t            });\n\t        },\n\t\n\t        /**\n\t         * @param {number} seriesIndex\n\t         * @return {module:echarts/model/Series}\n\t         */\n\t        getSeriesByIndex: function (seriesIndex) {\n\t            return this._componentsMap.series[seriesIndex];\n\t        },\n\t\n\t        /**\n\t         * @param {string} subType\n\t         * @return {Array.<module:echarts/model/Series>}\n\t         */\n\t        getSeriesByType: function (subType) {\n\t            var series = this._componentsMap.series;\n\t            return filter(series, function (oneSeries) {\n\t                return oneSeries.subType === subType;\n\t            });\n\t        },\n\t\n\t        /**\n\t         * @return {Array.<module:echarts/model/Series>}\n\t         */\n\t        getSeries: function () {\n\t            return this._componentsMap.series.slice();\n\t        },\n\t\n\t        /**\n\t         * After filtering, series may be different\n\t         * frome raw series.\n\t         *\n\t         * @param {Function} cb\n\t         * @param {*} context\n\t         */\n\t        eachSeries: function (cb, context) {\n\t            assertSeriesInitialized(this);\n\t            each(this._seriesIndices, function (rawSeriesIndex) {\n\t                var series = this._componentsMap.series[rawSeriesIndex];\n\t                cb.call(context, series, rawSeriesIndex);\n\t            }, this);\n\t        },\n\t\n\t        /**\n\t         * Iterate raw series before filtered.\n\t         *\n\t         * @param {Function} cb\n\t         * @param {*} context\n\t         */\n\t        eachRawSeries: function (cb, context) {\n\t            each(this._componentsMap.series, cb, context);\n\t        },\n\t\n\t        /**\n\t         * After filtering, series may be different.\n\t         * frome raw series.\n\t         *\n\t         * @parma {string} subType\n\t         * @param {Function} cb\n\t         * @param {*} context\n\t         */\n\t        eachSeriesByType: function (subType, cb, context) {\n\t            assertSeriesInitialized(this);\n\t            each(this._seriesIndices, function (rawSeriesIndex) {\n\t                var series = this._componentsMap.series[rawSeriesIndex];\n\t                if (series.subType === subType) {\n\t                    cb.call(context, series, rawSeriesIndex);\n\t                }\n\t            }, this);\n\t        },\n\t\n\t        /**\n\t         * Iterate raw series before filtered of given type.\n\t         *\n\t         * @parma {string} subType\n\t         * @param {Function} cb\n\t         * @param {*} context\n\t         */\n\t        eachRawSeriesByType: function (subType, cb, context) {\n\t            return each(this.getSeriesByType(subType), cb, context);\n\t        },\n\t\n\t        /**\n\t         * @param {module:echarts/model/Series} seriesModel\n\t         */\n\t        isSeriesFiltered: function (seriesModel) {\n\t            assertSeriesInitialized(this);\n\t            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n\t        },\n\t\n\t        /**\n\t         * @param {Function} cb\n\t         * @param {*} context\n\t         */\n\t        filterSeries: function (cb, context) {\n\t            assertSeriesInitialized(this);\n\t            var filteredSeries = filter(\n\t                this._componentsMap.series, cb, context\n\t            );\n\t            this._seriesIndices = createSeriesIndices(filteredSeries);\n\t        },\n\t\n\t        restoreData: function () {\n\t            var componentsMap = this._componentsMap;\n\t\n\t            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\t\n\t            var componentTypes = [];\n\t            each(componentsMap, function (components, componentType) {\n\t                componentTypes.push(componentType);\n\t            });\n\t\n\t            ComponentModel.topologicalTravel(\n\t                componentTypes,\n\t                ComponentModel.getAllClassMainTypes(),\n\t                function (componentType, dependencies) {\n\t                    each(componentsMap[componentType], function (component) {\n\t                        component.restoreData();\n\t                    });\n\t                }\n\t            );\n\t        }\n\t\n\t    });\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function mergeTheme(option, theme) {\n\t        zrUtil.each(theme, function (themeItem, name) {\n\t            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\t            if (!ComponentModel.hasClass(name)) {\n\t                if (typeof themeItem === 'object') {\n\t                    option[name] = !option[name]\n\t                        ? zrUtil.clone(themeItem)\n\t                        : zrUtil.merge(option[name], themeItem, false);\n\t                }\n\t                else {\n\t                    if (option[name] == null) {\n\t                        option[name] = themeItem;\n\t                    }\n\t                }\n\t            }\n\t        });\n\t    }\n\t\n\t    function initBase(baseOption) {\n\t        baseOption = baseOption;\n\t\n\t        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n\t        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\t        this.option = {};\n\t        this.option[OPTION_INNER_KEY] = 1;\n\t\n\t        /**\n\t         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n\t         * @private\n\t         */\n\t        this._componentsMap = {};\n\t\n\t        /**\n\t         * Mapping between filtered series list and raw series list.\n\t         * key: filtered series indices, value: raw series indices.\n\t         * @type {Array.<nubmer>}\n\t         * @private\n\t         */\n\t        this._seriesIndices = null;\n\t\n\t        mergeTheme(baseOption, this._theme.option);\n\t\n\t        // TODO Needs clone when merging to the unexisted property\n\t        zrUtil.merge(baseOption, globalDefault, false);\n\t\n\t        this.mergeOption(baseOption);\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     * @param {Array.<string>|string} types model types\n\t     * @return {Object} key: {string} type, value: {Array.<Object>} models\n\t     */\n\t    function getComponentsByTypes(componentsMap, types) {\n\t        if (!zrUtil.isArray(types)) {\n\t            types = types ? [types] : [];\n\t        }\n\t\n\t        var ret = {};\n\t        each(types, function (type) {\n\t            ret[type] = (componentsMap[type] || []).slice();\n\t        });\n\t\n\t        return ret;\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function determineSubType(mainType, newCptOption, existComponent) {\n\t        var subType = newCptOption.type\n\t            ? newCptOption.type\n\t            : existComponent\n\t            ? existComponent.subType\n\t            // Use determineSubType only when there is no existComponent.\n\t            : ComponentModel.determineSubType(mainType, newCptOption);\n\t\n\t        // tooltip, markline, markpoint may always has no subType\n\t        return subType;\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function createSeriesIndices(seriesModels) {\n\t        return map(seriesModels, function (series) {\n\t            return series.componentIndex;\n\t        }) || [];\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function filterBySubType(components, condition) {\n\t        // Using hasOwnProperty for restrict. Consider\n\t        // subType is undefined in user payload.\n\t        return condition.hasOwnProperty('subType')\n\t            ? filter(components, function (cpt) {\n\t                return cpt.subType === condition.subType;\n\t            })\n\t            : components;\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function assertSeriesInitialized(ecModel) {\n\t        // Components that use _seriesIndices should depends on series component,\n\t        // which make sure that their initialization is after series.\n\t        if (__DEV__) {\n\t            if (!ecModel._seriesIndices) {\n\t                throw new Error('Series has not been initialized yet.');\n\t            }\n\t        }\n\t    }\n\t\n\t    zrUtil.mixin(GlobalModel, __webpack_require__(506));\n\t\n\t    module.exports = GlobalModel;\n\n\n/***/ },\n/* 487 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var formatUtil = __webpack_require__(488);\n\t    var nubmerUtil = __webpack_require__(489);\n\t    var Model = __webpack_require__(494);\n\t    var zrUtil = __webpack_require__(483);\n\t    var each = zrUtil.each;\n\t    var isObject = zrUtil.isObject;\n\t\n\t    var modelUtil = {};\n\t\n\t    /**\n\t     * If value is not array, then translate it to array.\n\t     * @param  {*} value\n\t     * @return {Array} [value] or value\n\t     */\n\t    modelUtil.normalizeToArray = function (value) {\n\t        return value instanceof Array\n\t            ? value\n\t            : value == null\n\t            ? []\n\t            : [value];\n\t    };\n\t\n\t    /**\n\t     * Sync default option between normal and emphasis like `position` and `show`\n\t     * In case some one will write code like\n\t     *     label: {\n\t     *         normal: {\n\t     *             show: false,\n\t     *             position: 'outside',\n\t     *             textStyle: {\n\t     *                 fontSize: 18\n\t     *             }\n\t     *         },\n\t     *         emphasis: {\n\t     *             show: true\n\t     *         }\n\t     *     }\n\t     * @param {Object} opt\n\t     * @param {Array.<string>} subOpts\n\t     */\n\t     modelUtil.defaultEmphasis = function (opt, subOpts) {\n\t        if (opt) {\n\t            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n\t            var normalOpt = opt.normal = opt.normal || {};\n\t\n\t            // Default emphasis option from normal\n\t            each(subOpts, function (subOptName) {\n\t                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n\t                if (val != null) {\n\t                    emphasisOpt[subOptName] = val;\n\t                }\n\t            });\n\t        }\n\t    };\n\t\n\t    modelUtil.LABEL_OPTIONS = ['position', 'show', 'textStyle', 'distance', 'formatter'];\n\t\n\t    /**\n\t     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n\t     * This helper method retieves value from data.\n\t     * @param {string|number|Date|Array|Object} dataItem\n\t     * @return {number|string|Date|Array.<number|string|Date>}\n\t     */\n\t    modelUtil.getDataItemValue = function (dataItem) {\n\t        // Performance sensitive.\n\t        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n\t    };\n\t\n\t    /**\n\t     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n\t     * This helper method determine if dataItem has extra option besides value\n\t     * @param {string|number|Date|Array|Object} dataItem\n\t     */\n\t    modelUtil.isDataItemOption = function (dataItem) {\n\t        return isObject(dataItem)\n\t            && !(dataItem instanceof Array);\n\t            // // markLine data can be array\n\t            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n\t    };\n\t\n\t    /**\n\t     * This helper method convert value in data.\n\t     * @param {string|number|Date} value\n\t     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n\t     */\n\t    modelUtil.converDataValue = function (value, dimInfo) {\n\t        // Performance sensitive.\n\t        var dimType = dimInfo && dimInfo.type;\n\t        if (dimType === 'ordinal') {\n\t            return value;\n\t        }\n\t\n\t        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n\t            value = +nubmerUtil.parseDate(value);\n\t        }\n\t\n\t        // dimType defaults 'number'.\n\t        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n\t        // parse to NaN.\n\t        return (value == null || value === '')\n\t            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n\t    };\n\t\n\t    /**\n\t     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n\t     * @param {module:echarts/data/List} data\n\t     * @param {Object} opt\n\t     * @param {string} [opt.seriesIndex]\n\t     * @param {Object} [opt.name]\n\t     * @param {Object} [opt.mainType]\n\t     * @param {Object} [opt.subType]\n\t     */\n\t    modelUtil.createDataFormatModel = function (data, opt) {\n\t        var model = new Model();\n\t        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n\t        model.seriesIndex = opt.seriesIndex;\n\t        model.name = opt.name || '';\n\t        model.mainType = opt.mainType;\n\t        model.subType = opt.subType;\n\t\n\t        model.getData = function () {\n\t            return data;\n\t        };\n\t        return model;\n\t    };\n\t\n\t    // PENDING A little ugly\n\t    modelUtil.dataFormatMixin = {\n\t        /**\n\t         * Get params for formatter\n\t         * @param {number} dataIndex\n\t         * @param {string} [dataType]\n\t         * @return {Object}\n\t         */\n\t        getDataParams: function (dataIndex, dataType) {\n\t            var data = this.getData(dataType);\n\t\n\t            var seriesIndex = this.seriesIndex;\n\t            var seriesName = this.name;\n\t\n\t            var rawValue = this.getRawValue(dataIndex, dataType);\n\t            var rawDataIndex = data.getRawIndex(dataIndex);\n\t            var name = data.getName(dataIndex, true);\n\t            var itemOpt = data.getRawDataItem(dataIndex);\n\t\n\t            return {\n\t                componentType: this.mainType,\n\t                componentSubType: this.subType,\n\t                seriesType: this.mainType === 'series' ? this.subType : null,\n\t                seriesIndex: seriesIndex,\n\t                seriesName: seriesName,\n\t                name: name,\n\t                dataIndex: rawDataIndex,\n\t                data: itemOpt,\n\t                dataType: dataType,\n\t                value: rawValue,\n\t                color: data.getItemVisual(dataIndex, 'color'),\n\t\n\t                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n\t                $vars: ['seriesName', 'name', 'value']\n\t            };\n\t        },\n\t\n\t        /**\n\t         * Format label\n\t         * @param {number} dataIndex\n\t         * @param {string} [status='normal'] 'normal' or 'emphasis'\n\t         * @param {string} [dataType]\n\t         * @param {number} [dimIndex]\n\t         * @return {string}\n\t         */\n\t        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n\t            status = status || 'normal';\n\t            var data = this.getData(dataType);\n\t            var itemModel = data.getItemModel(dataIndex);\n\t\n\t            var params = this.getDataParams(dataIndex, dataType);\n\t            if (dimIndex != null && (params.value instanceof Array)) {\n\t                params.value = params.value[dimIndex];\n\t            }\n\t\n\t            var formatter = itemModel.get(['label', status, 'formatter']);\n\t\n\t            if (typeof formatter === 'function') {\n\t                params.status = status;\n\t                return formatter(params);\n\t            }\n\t            else if (typeof formatter === 'string') {\n\t                return formatUtil.formatTpl(formatter, params);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Get raw value in option\n\t         * @param {number} idx\n\t         * @param {string} [dataType]\n\t         * @return {Object}\n\t         */\n\t        getRawValue: function (idx, dataType) {\n\t            var data = this.getData(dataType);\n\t            var dataItem = data.getRawDataItem(idx);\n\t            if (dataItem != null) {\n\t                return (isObject(dataItem) && !(dataItem instanceof Array))\n\t                    ? dataItem.value : dataItem;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Should be implemented.\n\t         * @param {number} dataIndex\n\t         * @param {boolean} [multipleSeries=false]\n\t         * @param {number} [dataType]\n\t         * @return {string} tooltip string\n\t         */\n\t        formatTooltip: zrUtil.noop\n\t    };\n\t\n\t    /**\n\t     * Mapping to exists for merge.\n\t     *\n\t     * @public\n\t     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n\t     * @param {Object|Array.<Object>} newCptOptions\n\t     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n\t     *                          index of which is the same as exists.\n\t     */\n\t    modelUtil.mappingToExists = function (exists, newCptOptions) {\n\t        // Mapping by the order by original option (but not order of\n\t        // new option) in merge mode. Because we should ensure\n\t        // some specified index (like xAxisIndex) is consistent with\n\t        // original option, which is easy to understand, espatially in\n\t        // media query. And in most case, merge option is used to\n\t        // update partial option but not be expected to change order.\n\t        newCptOptions = (newCptOptions || []).slice();\n\t\n\t        var result = zrUtil.map(exists || [], function (obj, index) {\n\t            return {exist: obj};\n\t        });\n\t\n\t        // Mapping by id or name if specified.\n\t        each(newCptOptions, function (cptOption, index) {\n\t            if (!isObject(cptOption)) {\n\t                return;\n\t            }\n\t\n\t            // id has highest priority.\n\t            for (var i = 0; i < result.length; i++) {\n\t                if (!result[i].option // Consider name: two map to one.\n\t                    && cptOption.id != null\n\t                    && result[i].exist.id === cptOption.id + ''\n\t                ) {\n\t                    result[i].option = cptOption;\n\t                    newCptOptions[index] = null;\n\t                    return;\n\t                }\n\t            }\n\t\n\t            for (var i = 0; i < result.length; i++) {\n\t                var exist = result[i].exist;\n\t                if (!result[i].option // Consider name: two map to one.\n\t                    // Can not match when both ids exist but different.\n\t                    && (exist.id == null || cptOption.id == null)\n\t                    && cptOption.name != null\n\t                    && !modelUtil.isIdInner(cptOption)\n\t                    && !modelUtil.isIdInner(exist)\n\t                    && exist.name === cptOption.name + ''\n\t                ) {\n\t                    result[i].option = cptOption;\n\t                    newCptOptions[index] = null;\n\t                    return;\n\t                }\n\t            }\n\t        });\n\t\n\t        // Otherwise mapping by index.\n\t        each(newCptOptions, function (cptOption, index) {\n\t            if (!isObject(cptOption)) {\n\t                return;\n\t            }\n\t\n\t            var i = 0;\n\t            for (; i < result.length; i++) {\n\t                var exist = result[i].exist;\n\t                if (!result[i].option\n\t                    // Existing model that already has id should be able to\n\t                    // mapped to (because after mapping performed model may\n\t                    // be assigned with a id, whish should not affect next\n\t                    // mapping), except those has inner id.\n\t                    && !modelUtil.isIdInner(exist)\n\t                    // Caution:\n\t                    // Do not overwrite id. But name can be overwritten,\n\t                    // because axis use name as 'show label text'.\n\t                    // 'exist' always has id and name and we dont\n\t                    // need to check it.\n\t                    && cptOption.id == null\n\t                ) {\n\t                    result[i].option = cptOption;\n\t                    break;\n\t                }\n\t            }\n\t\n\t            if (i >= result.length) {\n\t                result.push({option: cptOption});\n\t            }\n\t        });\n\t\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * Make id and name for mapping result (result of mappingToExists)\n\t     * into `keyInfo` field.\n\t     *\n\t     * @public\n\t     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n\t     *                          which order is the same as exists.\n\t     * @return {Array.<Object>} The input.\n\t     */\n\t    modelUtil.makeIdAndName = function (mapResult) {\n\t        // We use this id to hash component models and view instances\n\t        // in echarts. id can be specified by user, or auto generated.\n\t\n\t        // The id generation rule ensures new view instance are able\n\t        // to mapped to old instance when setOption are called in\n\t        // no-merge mode. So we generate model id by name and plus\n\t        // type in view id.\n\t\n\t        // name can be duplicated among components, which is convenient\n\t        // to specify multi components (like series) by one name.\n\t\n\t        // Ensure that each id is distinct.\n\t        var idMap = {};\n\t\n\t        each(mapResult, function (item, index) {\n\t            var existCpt = item.exist;\n\t            existCpt && (idMap[existCpt.id] = item);\n\t        });\n\t\n\t        each(mapResult, function (item, index) {\n\t            var opt = item.option;\n\t\n\t            zrUtil.assert(\n\t                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n\t                'id duplicates: ' + (opt && opt.id)\n\t            );\n\t\n\t            opt && opt.id != null && (idMap[opt.id] = item);\n\t            !item.keyInfo && (item.keyInfo = {});\n\t        });\n\t\n\t        // Make name and id.\n\t        each(mapResult, function (item, index) {\n\t            var existCpt = item.exist;\n\t            var opt = item.option;\n\t            var keyInfo = item.keyInfo;\n\t\n\t            if (!isObject(opt)) {\n\t                return;\n\t            }\n\t\n\t            // name can be overwitten. Consider case: axis.name = '20km'.\n\t            // But id generated by name will not be changed, which affect\n\t            // only in that case: setOption with 'not merge mode' and view\n\t            // instance will be recreated, which can be accepted.\n\t            keyInfo.name = opt.name != null\n\t                ? opt.name + ''\n\t                : existCpt\n\t                ? existCpt.name\n\t                : '\\0-';\n\t\n\t            if (existCpt) {\n\t                keyInfo.id = existCpt.id;\n\t            }\n\t            else if (opt.id != null) {\n\t                keyInfo.id = opt.id + '';\n\t            }\n\t            else {\n\t                // Consider this situatoin:\n\t                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n\t                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n\t                // Series with the same name between optionA and optionB\n\t                // should be mapped.\n\t                var idNum = 0;\n\t                do {\n\t                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n\t                }\n\t                while (idMap[keyInfo.id]);\n\t            }\n\t\n\t            idMap[keyInfo.id] = item;\n\t        });\n\t    };\n\t\n\t    /**\n\t     * @public\n\t     * @param {Object} cptOption\n\t     * @return {boolean}\n\t     */\n\t    modelUtil.isIdInner = function (cptOption) {\n\t        return isObject(cptOption)\n\t            && cptOption.id\n\t            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n\t    };\n\t\n\t    /**\n\t     * A helper for removing duplicate items between batchA and batchB,\n\t     * and in themselves, and categorize by series.\n\t     *\n\t     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n\t     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n\t     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n\t     */\n\t    modelUtil.compressBatches = function (batchA, batchB) {\n\t        var mapA = {};\n\t        var mapB = {};\n\t\n\t        makeMap(batchA || [], mapA);\n\t        makeMap(batchB || [], mapB, mapA);\n\t\n\t        return [mapToArray(mapA), mapToArray(mapB)];\n\t\n\t        function makeMap(sourceBatch, map, otherMap) {\n\t            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n\t                var seriesId = sourceBatch[i].seriesId;\n\t                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n\t                var otherDataIndices = otherMap && otherMap[seriesId];\n\t\n\t                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n\t                    var dataIndex = dataIndices[j];\n\t\n\t                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n\t                        otherDataIndices[dataIndex] = null;\n\t                    }\n\t                    else {\n\t                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        function mapToArray(map, isData) {\n\t            var result = [];\n\t            for (var i in map) {\n\t                if (map.hasOwnProperty(i) && map[i] != null) {\n\t                    if (isData) {\n\t                        result.push(+i);\n\t                    }\n\t                    else {\n\t                        var dataIndices = mapToArray(map[i], true);\n\t                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n\t                    }\n\t                }\n\t            }\n\t            return result;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @param {module:echarts/data/List} data\n\t     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n\t     *                         each of which can be Array or primary type.\n\t     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n\t     */\n\t    modelUtil.queryDataIndex = function (data, payload) {\n\t        if (payload.dataIndexInside != null) {\n\t            return payload.dataIndexInside;\n\t        }\n\t        else if (payload.dataIndex != null) {\n\t            return zrUtil.isArray(payload.dataIndex)\n\t                ? zrUtil.map(payload.dataIndex, function (value) {\n\t                    return data.indexOfRawIndex(value);\n\t                })\n\t                : data.indexOfRawIndex(payload.dataIndex);\n\t        }\n\t        else if (payload.name != null) {\n\t            return zrUtil.isArray(payload.name)\n\t                ? zrUtil.map(payload.name, function (value) {\n\t                    return data.indexOfName(value);\n\t                })\n\t                : data.indexOfName(payload.name);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @param {module:echarts/model/Global} ecModel\n\t     * @param {string|Object} finder\n\t     *        If string, e.g., 'geo', means {geoIndex: 0}.\n\t     *        If Object, could contain some of these properties below:\n\t     *        {\n\t     *            seriesIndex, seriesId, seriesName,\n\t     *            geoIndex, geoId, goeName,\n\t     *            bmapIndex, bmapId, bmapName,\n\t     *            xAxisIndex, xAxisId, xAxisName,\n\t     *            yAxisIndex, yAxisId, yAxisName,\n\t     *            gridIndex, gridId, gridName,\n\t     *            ... (can be extended)\n\t     *        }\n\t     *        Each properties can be number|string|Array.<number>|Array.<string>\n\t     *        For example, a finder could be\n\t     *        {\n\t     *            seriesIndex: 3,\n\t     *            geoId: ['aa', 'cc'],\n\t     *            gridName: ['xx', 'rr']\n\t     *        }\n\t     * @param {Object} [opt]\n\t     * @param {string} [opt.defaultMainType]\n\t     * @return {Object} result like:\n\t     *        {\n\t     *            seriesModels: [seriesModel1, seriesModel2],\n\t     *            seriesModel: seriesModel1, // The first model\n\t     *            geoModels: [geoModel1, geoModel2],\n\t     *            geoModel: geoModel1, // The first model\n\t     *            ...\n\t     *        }\n\t     */\n\t    modelUtil.parseFinder = function (ecModel, finder, opt) {\n\t        if (zrUtil.isString(finder)) {\n\t            var obj = {};\n\t            obj[finder + 'Index'] = 0;\n\t            finder = obj;\n\t        }\n\t\n\t        var defaultMainType = opt && opt.defaultMainType;\n\t        if (defaultMainType\n\t            && !has(finder, defaultMainType + 'Index')\n\t            && !has(finder, defaultMainType + 'Id')\n\t            && !has(finder, defaultMainType + 'Name')\n\t        ) {\n\t            finder[defaultMainType + 'Index'] = 0;\n\t        }\n\t\n\t        var result = {};\n\t\n\t        each(finder, function (value, key) {\n\t            var value = finder[key];\n\t\n\t            // Exclude 'dataIndex' and other illgal keys.\n\t            if (key === 'dataIndex' || key === 'dataIndexInside') {\n\t                result[key] = value;\n\t                return;\n\t            }\n\t\n\t            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n\t            var mainType = parsedKey[1];\n\t            var queryType = parsedKey[2];\n\t\n\t            if (!mainType || !queryType) {\n\t                return;\n\t            }\n\t\n\t            var queryParam = {mainType: mainType};\n\t            queryParam[queryType.toLowerCase()] = value;\n\t            var models = ecModel.queryComponents(queryParam);\n\t            result[mainType + 'Models'] = models;\n\t            result[mainType + 'Model'] = models[0];\n\t        });\n\t\n\t        return result;\n\t    };\n\t\n\t    function has(obj, prop) {\n\t        return obj && obj.hasOwnProperty(prop);\n\t    }\n\t\n\t    module.exports = modelUtil;\n\n\n/***/ },\n/* 488 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var numberUtil = __webpack_require__(489);\n\t    var textContain = __webpack_require__(490);\n\t\n\t    var formatUtil = {};\n\t    /**\n\t     * 每三位默认加,格式化\n\t     * @type {string|number} x\n\t     */\n\t    formatUtil.addCommas = function (x) {\n\t        if (isNaN(x)) {\n\t            return '-';\n\t        }\n\t        x = (x + '').split('.');\n\t        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n\t               + (x.length > 1 ? ('.' + x[1]) : '');\n\t    };\n\t\n\t    /**\n\t     * @param {string} str\n\t     * @param {boolean} [upperCaseFirst=false]\n\t     * @return {string} str\n\t     */\n\t    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n\t        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n\t            return group1.toUpperCase();\n\t        });\n\t\n\t        if (upperCaseFirst && str) {\n\t            str = str.charAt(0).toUpperCase() + str.slice(1);\n\t        }\n\t\n\t        return str;\n\t    };\n\t\n\t    /**\n\t     * Normalize css liked array configuration\n\t     * e.g.\n\t     *  3 => [3, 3, 3, 3]\n\t     *  [4, 2] => [4, 2, 4, 2]\n\t     *  [4, 3, 2] => [4, 3, 2, 3]\n\t     * @param {number|Array.<number>} val\n\t     */\n\t    formatUtil.normalizeCssArray = function (val) {\n\t        var len = val.length;\n\t        if (typeof (val) === 'number') {\n\t            return [val, val, val, val];\n\t        }\n\t        else if (len === 2) {\n\t            // vertical | horizontal\n\t            return [val[0], val[1], val[0], val[1]];\n\t        }\n\t        else if (len === 3) {\n\t            // top | horizontal | bottom\n\t            return [val[0], val[1], val[2], val[1]];\n\t        }\n\t        return val;\n\t    };\n\t\n\t    formatUtil.encodeHTML = function (source) {\n\t        return String(source)\n\t            .replace(/&/g, '&amp;')\n\t            .replace(/</g, '&lt;')\n\t            .replace(/>/g, '&gt;')\n\t            .replace(/\"/g, '&quot;')\n\t            .replace(/'/g, '&#39;');\n\t    };\n\t\n\t    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\t\n\t    var wrapVar = function (varName, seriesIdx) {\n\t        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n\t    };\n\t\n\t    /**\n\t     * Template formatter\n\t     * @param  {string} tpl\n\t     * @param  {Array.<Object>|Object} paramsList\n\t     * @return {string}\n\t     */\n\t    formatUtil.formatTpl = function (tpl, paramsList) {\n\t        if (!zrUtil.isArray(paramsList)) {\n\t            paramsList = [paramsList];\n\t        }\n\t        var seriesLen = paramsList.length;\n\t        if (!seriesLen) {\n\t            return '';\n\t        }\n\t\n\t        var $vars = paramsList[0].$vars || [];\n\t        for (var i = 0; i < $vars.length; i++) {\n\t            var alias = TPL_VAR_ALIAS[i];\n\t            tpl = tpl.replace(wrapVar(alias),  wrapVar(alias, 0));\n\t        }\n\t        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n\t            for (var k = 0; k < $vars.length; k++) {\n\t                tpl = tpl.replace(\n\t                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n\t                    paramsList[seriesIdx][$vars[k]]\n\t                );\n\t            }\n\t        }\n\t\n\t        return tpl;\n\t    };\n\t\n\t\n\t    /**\n\t     * @param {string} str\n\t     * @return {string}\n\t     * @inner\n\t     */\n\t    var s2d = function (str) {\n\t        return str < 10 ? ('0' + str) : str;\n\t    };\n\t\n\t    /**\n\t     * ISO Date format\n\t     * @param {string} tpl\n\t     * @param {number} value\n\t     * @inner\n\t     */\n\t    formatUtil.formatTime = function (tpl, value) {\n\t        if (tpl === 'week'\n\t            || tpl === 'month'\n\t            || tpl === 'quarter'\n\t            || tpl === 'half-year'\n\t            || tpl === 'year'\n\t        ) {\n\t            tpl = 'MM-dd\\nyyyy';\n\t        }\n\t\n\t        var date = numberUtil.parseDate(value);\n\t        var y = date.getFullYear();\n\t        var M = date.getMonth() + 1;\n\t        var d = date.getDate();\n\t        var h = date.getHours();\n\t        var m = date.getMinutes();\n\t        var s = date.getSeconds();\n\t\n\t        tpl = tpl.replace('MM', s2d(M))\n\t            .toLowerCase()\n\t            .replace('yyyy', y)\n\t            .replace('yy', y % 100)\n\t            .replace('dd', s2d(d))\n\t            .replace('d', d)\n\t            .replace('hh', s2d(h))\n\t            .replace('h', h)\n\t            .replace('mm', s2d(m))\n\t            .replace('m', m)\n\t            .replace('ss', s2d(s))\n\t            .replace('s', s);\n\t\n\t        return tpl;\n\t    };\n\t\n\t    /**\n\t     * Capital first\n\t     * @param {string} str\n\t     * @return {string}\n\t     */\n\t    formatUtil.capitalFirst = function (str) {\n\t        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n\t    };\n\t\n\t    formatUtil.truncateText = textContain.truncateText;\n\t\n\t    module.exports = formatUtil;\n\n\n/***/ },\n/* 489 */\n/***/ function(module, exports) {\n\n\t/**\n\t * 数值处理模块\n\t * @module echarts/util/number\n\t */\n\t\n\t\n\t\n\t    var number = {};\n\t\n\t    var RADIAN_EPSILON = 1e-4;\n\t\n\t    function _trim(str) {\n\t        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n\t    }\n\t\n\t    /**\n\t     * Linear mapping a value from domain to range\n\t     * @memberOf module:echarts/util/number\n\t     * @param  {(number|Array.<number>)} val\n\t     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n\t     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n\t     * @param  {boolean} clamp\n\t     * @return {(number|Array.<number>}\n\t     */\n\t    number.linearMap = function (val, domain, range, clamp) {\n\t        var subDomain = domain[1] - domain[0];\n\t        var subRange = range[1] - range[0];\n\t\n\t        if (subDomain === 0) {\n\t            return subRange === 0\n\t                ? range[0]\n\t                : (range[0] + range[1]) / 2;\n\t        }\n\t\n\t        // Avoid accuracy problem in edge, such as\n\t        // 146.39 - 62.83 === 83.55999999999999.\n\t        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n\t        // It is a little verbose for efficiency considering this method\n\t        // is a hotspot.\n\t        if (clamp) {\n\t            if (subDomain > 0) {\n\t                if (val <= domain[0]) {\n\t                    return range[0];\n\t                }\n\t                else if (val >= domain[1]) {\n\t                    return range[1];\n\t                }\n\t            }\n\t            else {\n\t                if (val >= domain[0]) {\n\t                    return range[0];\n\t                }\n\t                else if (val <= domain[1]) {\n\t                    return range[1];\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            if (val === domain[0]) {\n\t                return range[0];\n\t            }\n\t            if (val === domain[1]) {\n\t                return range[1];\n\t            }\n\t        }\n\t\n\t        return (val - domain[0]) / subDomain * subRange + range[0];\n\t    };\n\t\n\t    /**\n\t     * Convert a percent string to absolute number.\n\t     * Returns NaN if percent is not a valid string or number\n\t     * @memberOf module:echarts/util/number\n\t     * @param {string|number} percent\n\t     * @param {number} all\n\t     * @return {number}\n\t     */\n\t    number.parsePercent = function(percent, all) {\n\t        switch (percent) {\n\t            case 'center':\n\t            case 'middle':\n\t                percent = '50%';\n\t                break;\n\t            case 'left':\n\t            case 'top':\n\t                percent = '0%';\n\t                break;\n\t            case 'right':\n\t            case 'bottom':\n\t                percent = '100%';\n\t                break;\n\t        }\n\t        if (typeof percent === 'string') {\n\t            if (_trim(percent).match(/%$/)) {\n\t                return parseFloat(percent) / 100 * all;\n\t            }\n\t\n\t            return parseFloat(percent);\n\t        }\n\t\n\t        return percent == null ? NaN : +percent;\n\t    };\n\t\n\t    /**\n\t     * Fix rounding error of float numbers\n\t     * @param {number} x\n\t     * @return {number}\n\t     */\n\t    number.round = function (x, precision) {\n\t        if (precision == null) {\n\t            precision = 10;\n\t        }\n\t        // Avoid range error\n\t        precision = Math.min(Math.max(0, precision), 20);\n\t        return +(+x).toFixed(precision);\n\t    };\n\t\n\t    number.asc = function (arr) {\n\t        arr.sort(function (a, b) {\n\t            return a - b;\n\t        });\n\t        return arr;\n\t    };\n\t\n\t    /**\n\t     * Get precision\n\t     * @param {number} val\n\t     */\n\t    number.getPrecision = function (val) {\n\t        val = +val;\n\t        if (isNaN(val)) {\n\t            return 0;\n\t        }\n\t        // It is much faster than methods converting number to string as follows\n\t        //      var tmp = val.toString();\n\t        //      return tmp.length - 1 - tmp.indexOf('.');\n\t        // especially when precision is low\n\t        var e = 1;\n\t        var count = 0;\n\t        while (Math.round(val * e) / e !== val) {\n\t            e *= 10;\n\t            count++;\n\t        }\n\t        return count;\n\t    };\n\t\n\t    number.getPrecisionSafe = function (val) {\n\t        var str = val.toString();\n\t        var dotIndex = str.indexOf('.');\n\t        if (dotIndex < 0) {\n\t            return 0;\n\t        }\n\t        return str.length - 1 - dotIndex;\n\t    };\n\t\n\t    /**\n\t     * @param {Array.<number>} dataExtent\n\t     * @param {Array.<number>} pixelExtent\n\t     * @return {number}  precision\n\t     */\n\t    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n\t        var log = Math.log;\n\t        var LN10 = Math.LN10;\n\t        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n\t        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n\t        return Math.max(\n\t            -dataQuantity + sizeQuantity,\n\t            0\n\t        );\n\t    };\n\t\n\t    // Number.MAX_SAFE_INTEGER, ie do not support.\n\t    number.MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t    /**\n\t     * To 0 - 2 * PI, considering negative radian.\n\t     * @param {number} radian\n\t     * @return {number}\n\t     */\n\t    number.remRadian = function (radian) {\n\t        var pi2 = Math.PI * 2;\n\t        return (radian % pi2 + pi2) % pi2;\n\t    };\n\t\n\t    /**\n\t     * @param {type} radian\n\t     * @return {boolean}\n\t     */\n\t    number.isRadianAroundZero = function (val) {\n\t        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n\t    };\n\t\n\t    /**\n\t     * @param {string|Date|number} value\n\t     * @return {Date} date\n\t     */\n\t    number.parseDate = function (value) {\n\t        if (value instanceof Date) {\n\t            return value;\n\t        }\n\t        else if (typeof value === 'string') {\n\t            // Treat as ISO format. See issue #3623\n\t            var ret = new Date(value);\n\t            if (isNaN(+ret)) {\n\t                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n\t                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n\t            }\n\t            return ret;\n\t        }\n\t\n\t        return new Date(Math.round(value));\n\t    };\n\t\n\t    /**\n\t     * Quantity of a number. e.g. 0.1, 1, 10, 100\n\t     * @param  {number} val\n\t     * @return {number}\n\t     */\n\t    number.quantity = function (val) {\n\t        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n\t    };\n\t\n\t    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n\t    /**\n\t     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n\t     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n\t     * @param  {number} val\n\t     * @param  {boolean} round\n\t     * @return {number}\n\t     */\n\t    number.nice = function (val, round) {\n\t        var exp10 = number.quantity(val);\n\t        var f = val / exp10; // between 1 and 10\n\t        var nf;\n\t        if (round) {\n\t            if (f < 1.5) { nf = 1; }\n\t            else if (f < 2.5) { nf = 2; }\n\t            else if (f < 4) { nf = 3; }\n\t            else if (f < 7) { nf = 5; }\n\t            else { nf = 10; }\n\t        }\n\t        else {\n\t            if (f < 1) { nf = 1; }\n\t            else if (f < 2) { nf = 2; }\n\t            else if (f < 3) { nf = 3; }\n\t            else if (f < 5) { nf = 5; }\n\t            else { nf = 10; }\n\t        }\n\t        return nf * exp10;\n\t    };\n\t\n\t    /**\n\t     * Order intervals asc, and split them when overlap.\n\t     * expect(numberUtil.reformIntervals([\n\t     *     {interval: [18, 62], close: [1, 1]},\n\t     *     {interval: [-Infinity, -70], close: [0, 0]},\n\t     *     {interval: [-70, -26], close: [1, 1]},\n\t     *     {interval: [-26, 18], close: [1, 1]},\n\t     *     {interval: [62, 150], close: [1, 1]},\n\t     *     {interval: [106, 150], close: [1, 1]},\n\t     *     {interval: [150, Infinity], close: [0, 0]}\n\t     * ])).toEqual([\n\t     *     {interval: [-Infinity, -70], close: [0, 0]},\n\t     *     {interval: [-70, -26], close: [1, 1]},\n\t     *     {interval: [-26, 18], close: [0, 1]},\n\t     *     {interval: [18, 62], close: [0, 1]},\n\t     *     {interval: [62, 150], close: [0, 1]},\n\t     *     {interval: [150, Infinity], close: [0, 0]}\n\t     * ]);\n\t     * @param {Array.<Object>} list, where `close` mean open or close\n\t     *        of the interval, and Infinity can be used.\n\t     * @return {Array.<Object>} The origin list, which has been reformed.\n\t     */\n\t    number.reformIntervals = function (list) {\n\t        list.sort(function (a, b) {\n\t            return littleThan(a, b, 0) ? -1 : 1;\n\t        });\n\t\n\t        var curr = -Infinity;\n\t        var currClose = 1;\n\t        for (var i = 0; i < list.length;) {\n\t            var interval = list[i].interval;\n\t            var close = list[i].close;\n\t\n\t            for (var lg = 0; lg < 2; lg++) {\n\t                if (interval[lg] <= curr) {\n\t                    interval[lg] = curr;\n\t                    close[lg] = !lg ? 1 - currClose : 1;\n\t                }\n\t                curr = interval[lg];\n\t                currClose = close[lg];\n\t            }\n\t\n\t            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n\t                list.splice(i, 1);\n\t            }\n\t            else {\n\t                i++;\n\t            }\n\t        }\n\t\n\t        return list;\n\t\n\t        function littleThan(a, b, lg) {\n\t            return a.interval[lg] < b.interval[lg]\n\t                || (\n\t                    a.interval[lg] === b.interval[lg]\n\t                    && (\n\t                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n\t                        || (!lg && littleThan(a, b, 1))\n\t                    )\n\t                );\n\t        }\n\t    };\n\t\n\t    module.exports = number;\n\n\n/***/ },\n/* 490 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var textWidthCache = {};\n\t    var textWidthCacheCounter = 0;\n\t    var TEXT_CACHE_MAX = 5000;\n\t\n\t    var util = __webpack_require__(483);\n\t    var BoundingRect = __webpack_require__(491);\n\t    var retrieve = util.retrieve;\n\t\n\t    function getTextWidth(text, textFont) {\n\t        var key = text + ':' + textFont;\n\t        if (textWidthCache[key]) {\n\t            return textWidthCache[key];\n\t        }\n\t\n\t        var textLines = (text + '').split('\\n');\n\t        var width = 0;\n\t\n\t        for (var i = 0, l = textLines.length; i < l; i++) {\n\t            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n\t            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n\t        }\n\t\n\t        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n\t            textWidthCacheCounter = 0;\n\t            textWidthCache = {};\n\t        }\n\t        textWidthCacheCounter++;\n\t        textWidthCache[key] = width;\n\t\n\t        return width;\n\t    }\n\t\n\t    function getTextRect(text, textFont, textAlign, textBaseline) {\n\t        var textLineLen = ((text || '') + '').split('\\n').length;\n\t\n\t        var width = getTextWidth(text, textFont);\n\t        // FIXME 高度计算比较粗暴\n\t        var lineHeight = getTextWidth('国', textFont);\n\t        var height = textLineLen * lineHeight;\n\t\n\t        var rect = new BoundingRect(0, 0, width, height);\n\t        // Text has a special line height property\n\t        rect.lineHeight = lineHeight;\n\t\n\t        switch (textBaseline) {\n\t            case 'bottom':\n\t            case 'alphabetic':\n\t                rect.y -= lineHeight;\n\t                break;\n\t            case 'middle':\n\t                rect.y -= lineHeight / 2;\n\t                break;\n\t            // case 'hanging':\n\t            // case 'top':\n\t        }\n\t\n\t        // FIXME Right to left language\n\t        switch (textAlign) {\n\t            case 'end':\n\t            case 'right':\n\t                rect.x -= rect.width;\n\t                break;\n\t            case 'center':\n\t                rect.x -= rect.width / 2;\n\t                break;\n\t            // case 'start':\n\t            // case 'left':\n\t        }\n\t\n\t        return rect;\n\t    }\n\t\n\t    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\t\n\t        var x = rect.x;\n\t        var y = rect.y;\n\t\n\t        var height = rect.height;\n\t        var width = rect.width;\n\t\n\t        var textHeight = textRect.height;\n\t\n\t        var halfHeight = height / 2 - textHeight / 2;\n\t\n\t        var textAlign = 'left';\n\t\n\t        switch (textPosition) {\n\t            case 'left':\n\t                x -= distance;\n\t                y += halfHeight;\n\t                textAlign = 'right';\n\t                break;\n\t            case 'right':\n\t                x += distance + width;\n\t                y += halfHeight;\n\t                textAlign = 'left';\n\t                break;\n\t            case 'top':\n\t                x += width / 2;\n\t                y -= distance + textHeight;\n\t                textAlign = 'center';\n\t                break;\n\t            case 'bottom':\n\t                x += width / 2;\n\t                y += height + distance;\n\t                textAlign = 'center';\n\t                break;\n\t            case 'inside':\n\t                x += width / 2;\n\t                y += halfHeight;\n\t                textAlign = 'center';\n\t                break;\n\t            case 'insideLeft':\n\t                x += distance;\n\t                y += halfHeight;\n\t                textAlign = 'left';\n\t                break;\n\t            case 'insideRight':\n\t                x += width - distance;\n\t                y += halfHeight;\n\t                textAlign = 'right';\n\t                break;\n\t            case 'insideTop':\n\t                x += width / 2;\n\t                y += distance;\n\t                textAlign = 'center';\n\t                break;\n\t            case 'insideBottom':\n\t                x += width / 2;\n\t                y += height - textHeight - distance;\n\t                textAlign = 'center';\n\t                break;\n\t            case 'insideTopLeft':\n\t                x += distance;\n\t                y += distance;\n\t                textAlign = 'left';\n\t                break;\n\t            case 'insideTopRight':\n\t                x += width - distance;\n\t                y += distance;\n\t                textAlign = 'right';\n\t                break;\n\t            case 'insideBottomLeft':\n\t                x += distance;\n\t                y += height - textHeight - distance;\n\t                break;\n\t            case 'insideBottomRight':\n\t                x += width - distance;\n\t                y += height - textHeight - distance;\n\t                textAlign = 'right';\n\t                break;\n\t        }\n\t\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            textAlign: textAlign,\n\t            textBaseline: 'top'\n\t        };\n\t    }\n\t\n\t    /**\n\t     * Show ellipsis if overflow.\n\t     *\n\t     * @param  {string} text\n\t     * @param  {string} containerWidth\n\t     * @param  {string} textFont\n\t     * @param  {number} [ellipsis='...']\n\t     * @param  {Object} [options]\n\t     * @param  {number} [options.maxIterations=3]\n\t     * @param  {number} [options.minChar=0] If truncate result are less\n\t     *                  then minChar, ellipsis will not show, which is\n\t     *                  better for user hint in some cases.\n\t     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n\t     * @return {string}\n\t     */\n\t    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n\t        if (!containerWidth) {\n\t            return '';\n\t        }\n\t\n\t        options = options || {};\n\t\n\t        ellipsis = retrieve(ellipsis, '...');\n\t        var maxIterations = retrieve(options.maxIterations, 2);\n\t        var minChar = retrieve(options.minChar, 0);\n\t        // FIXME\n\t        // Other languages?\n\t        var cnCharWidth = getTextWidth('国', textFont);\n\t        // FIXME\n\t        // Consider proportional font?\n\t        var ascCharWidth = getTextWidth('a', textFont);\n\t        var placeholder = retrieve(options.placeholder, '');\n\t\n\t        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n\t        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\t        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\t        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n\t            contentWidth -= ascCharWidth;\n\t        }\n\t\n\t        var ellipsisWidth = getTextWidth(ellipsis);\n\t        if (ellipsisWidth > contentWidth) {\n\t            ellipsis = '';\n\t            ellipsisWidth = 0;\n\t        }\n\t\n\t        contentWidth = containerWidth - ellipsisWidth;\n\t\n\t        var textLines = (text + '').split('\\n');\n\t\n\t        for (var i = 0, len = textLines.length; i < len; i++) {\n\t            var textLine = textLines[i];\n\t            var lineWidth = getTextWidth(textLine, textFont);\n\t\n\t            if (lineWidth <= containerWidth) {\n\t                continue;\n\t            }\n\t\n\t            for (var j = 0;; j++) {\n\t                if (lineWidth <= contentWidth || j >= maxIterations) {\n\t                    textLine += ellipsis;\n\t                    break;\n\t                }\n\t\n\t                var subLength = j === 0\n\t                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n\t                    : lineWidth > 0\n\t                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n\t                    : 0;\n\t\n\t                textLine = textLine.substr(0, subLength);\n\t                lineWidth = getTextWidth(textLine, textFont);\n\t            }\n\t\n\t            if (textLine === '') {\n\t                textLine = placeholder;\n\t            }\n\t\n\t            textLines[i] = textLine;\n\t        }\n\t\n\t        return textLines.join('\\n');\n\t    }\n\t\n\t    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n\t        var width = 0;\n\t        var i = 0;\n\t        for (var len = text.length; i < len && width < contentWidth; i++) {\n\t            var charCode = text.charCodeAt(i);\n\t            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n\t        }\n\t        return i;\n\t    }\n\t\n\t    var textContain = {\n\t\n\t        getWidth: getTextWidth,\n\t\n\t        getBoundingRect: getTextRect,\n\t\n\t        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\t\n\t        truncateText: truncateText,\n\t\n\t        measureText: function (text, textFont) {\n\t            var ctx = util.getContext();\n\t            ctx.font = textFont || '12px sans-serif';\n\t            return ctx.measureText(text);\n\t        }\n\t    };\n\t\n\t    module.exports = textContain;\n\n\n/***/ },\n/* 491 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module echarts/core/BoundingRect\n\t */\n\t\n\t\n\t    var vec2 = __webpack_require__(492);\n\t    var matrix = __webpack_require__(493);\n\t\n\t    var v2ApplyTransform = vec2.applyTransform;\n\t    var mathMin = Math.min;\n\t    var mathMax = Math.max;\n\t    /**\n\t     * @alias module:echarts/core/BoundingRect\n\t     */\n\t    function BoundingRect(x, y, width, height) {\n\t\n\t        if (width < 0) {\n\t            x = x + width;\n\t            width = -width;\n\t        }\n\t        if (height < 0) {\n\t            y = y + height;\n\t            height = -height;\n\t        }\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        this.x = x;\n\t        /**\n\t         * @type {number}\n\t         */\n\t        this.y = y;\n\t        /**\n\t         * @type {number}\n\t         */\n\t        this.width = width;\n\t        /**\n\t         * @type {number}\n\t         */\n\t        this.height = height;\n\t    }\n\t\n\t    BoundingRect.prototype = {\n\t\n\t        constructor: BoundingRect,\n\t\n\t        /**\n\t         * @param {module:echarts/core/BoundingRect} other\n\t         */\n\t        union: function (other) {\n\t            var x = mathMin(other.x, this.x);\n\t            var y = mathMin(other.y, this.y);\n\t\n\t            this.width = mathMax(\n\t                    other.x + other.width,\n\t                    this.x + this.width\n\t                ) - x;\n\t            this.height = mathMax(\n\t                    other.y + other.height,\n\t                    this.y + this.height\n\t                ) - y;\n\t            this.x = x;\n\t            this.y = y;\n\t        },\n\t\n\t        /**\n\t         * @param {Array.<number>} m\n\t         * @methods\n\t         */\n\t        applyTransform: (function () {\n\t            var lt = [];\n\t            var rb = [];\n\t            var lb = [];\n\t            var rt = [];\n\t            return function (m) {\n\t                // In case usage like this\n\t                // el.getBoundingRect().applyTransform(el.transform)\n\t                // And element has no transform\n\t                if (!m) {\n\t                    return;\n\t                }\n\t                lt[0] = lb[0] = this.x;\n\t                lt[1] = rt[1] = this.y;\n\t                rb[0] = rt[0] = this.x + this.width;\n\t                rb[1] = lb[1] = this.y + this.height;\n\t\n\t                v2ApplyTransform(lt, lt, m);\n\t                v2ApplyTransform(rb, rb, m);\n\t                v2ApplyTransform(lb, lb, m);\n\t                v2ApplyTransform(rt, rt, m);\n\t\n\t                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n\t                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n\t                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n\t                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n\t                this.width = maxX - this.x;\n\t                this.height = maxY - this.y;\n\t            };\n\t        })(),\n\t\n\t        /**\n\t         * Calculate matrix of transforming from self to target rect\n\t         * @param  {module:zrender/core/BoundingRect} b\n\t         * @return {Array.<number>}\n\t         */\n\t        calculateTransform: function (b) {\n\t            var a = this;\n\t            var sx = b.width / a.width;\n\t            var sy = b.height / a.height;\n\t\n\t            var m = matrix.create();\n\t\n\t            // 矩阵右乘\n\t            matrix.translate(m, m, [-a.x, -a.y]);\n\t            matrix.scale(m, m, [sx, sy]);\n\t            matrix.translate(m, m, [b.x, b.y]);\n\t\n\t            return m;\n\t        },\n\t\n\t        /**\n\t         * @param {(module:echarts/core/BoundingRect|Object)} b\n\t         * @return {boolean}\n\t         */\n\t        intersect: function (b) {\n\t            if (!b) {\n\t                return false;\n\t            }\n\t\n\t            if (!(b instanceof BoundingRect)) {\n\t                // Normalize negative width/height.\n\t                b = BoundingRect.create(b);\n\t            }\n\t\n\t            var a = this;\n\t            var ax0 = a.x;\n\t            var ax1 = a.x + a.width;\n\t            var ay0 = a.y;\n\t            var ay1 = a.y + a.height;\n\t\n\t            var bx0 = b.x;\n\t            var bx1 = b.x + b.width;\n\t            var by0 = b.y;\n\t            var by1 = b.y + b.height;\n\t\n\t            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n\t        },\n\t\n\t        contain: function (x, y) {\n\t            var rect = this;\n\t            return x >= rect.x\n\t                && x <= (rect.x + rect.width)\n\t                && y >= rect.y\n\t                && y <= (rect.y + rect.height);\n\t        },\n\t\n\t        /**\n\t         * @return {module:echarts/core/BoundingRect}\n\t         */\n\t        clone: function () {\n\t            return new BoundingRect(this.x, this.y, this.width, this.height);\n\t        },\n\t\n\t        /**\n\t         * Copy from another rect\n\t         */\n\t        copy: function (other) {\n\t            this.x = other.x;\n\t            this.y = other.y;\n\t            this.width = other.width;\n\t            this.height = other.height;\n\t        },\n\t\n\t        plain: function () {\n\t            return {\n\t                x: this.x,\n\t                y: this.y,\n\t                width: this.width,\n\t                height: this.height\n\t            };\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @param {Object|module:zrender/core/BoundingRect} rect\n\t     * @param {number} rect.x\n\t     * @param {number} rect.y\n\t     * @param {number} rect.width\n\t     * @param {number} rect.height\n\t     * @return {module:zrender/core/BoundingRect}\n\t     */\n\t    BoundingRect.create = function (rect) {\n\t        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n\t    };\n\t\n\t    module.exports = BoundingRect;\n\n\n/***/ },\n/* 492 */\n/***/ function(module, exports) {\n\n\t\n\t    var ArrayCtor = typeof Float32Array === 'undefined'\n\t        ? Array\n\t        : Float32Array;\n\t\n\t    /**\n\t     * @typedef {Float32Array|Array.<number>} Vector2\n\t     */\n\t    /**\n\t     * 二维向量类\n\t     * @exports zrender/tool/vector\n\t     */\n\t    var vector = {\n\t        /**\n\t         * 创建一个向量\n\t         * @param {number} [x=0]\n\t         * @param {number} [y=0]\n\t         * @return {Vector2}\n\t         */\n\t        create: function (x, y) {\n\t            var out = new ArrayCtor(2);\n\t            if (x == null) {\n\t                x = 0;\n\t            }\n\t            if (y == null) {\n\t                y = 0;\n\t            }\n\t            out[0] = x;\n\t            out[1] = y;\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 复制向量数据\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v\n\t         * @return {Vector2}\n\t         */\n\t        copy: function (out, v) {\n\t            out[0] = v[0];\n\t            out[1] = v[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 克隆一个向量\n\t         * @param {Vector2} v\n\t         * @return {Vector2}\n\t         */\n\t        clone: function (v) {\n\t            var out = new ArrayCtor(2);\n\t            out[0] = v[0];\n\t            out[1] = v[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 设置向量的两个项\n\t         * @param {Vector2} out\n\t         * @param {number} a\n\t         * @param {number} b\n\t         * @return {Vector2} 结果\n\t         */\n\t        set: function (out, a, b) {\n\t            out[0] = a;\n\t            out[1] = b;\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量相加\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         */\n\t        add: function (out, v1, v2) {\n\t            out[0] = v1[0] + v2[0];\n\t            out[1] = v1[1] + v2[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量缩放后相加\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         * @param {number} a\n\t         */\n\t        scaleAndAdd: function (out, v1, v2, a) {\n\t            out[0] = v1[0] + v2[0] * a;\n\t            out[1] = v1[1] + v2[1] * a;\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量相减\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         */\n\t        sub: function (out, v1, v2) {\n\t            out[0] = v1[0] - v2[0];\n\t            out[1] = v1[1] - v2[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量长度\n\t         * @param {Vector2} v\n\t         * @return {number}\n\t         */\n\t        len: function (v) {\n\t            return Math.sqrt(this.lenSquare(v));\n\t        },\n\t\n\t        /**\n\t         * 向量长度平方\n\t         * @param {Vector2} v\n\t         * @return {number}\n\t         */\n\t        lenSquare: function (v) {\n\t            return v[0] * v[0] + v[1] * v[1];\n\t        },\n\t\n\t        /**\n\t         * 向量乘法\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         */\n\t        mul: function (out, v1, v2) {\n\t            out[0] = v1[0] * v2[0];\n\t            out[1] = v1[1] * v2[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量除法\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         */\n\t        div: function (out, v1, v2) {\n\t            out[0] = v1[0] / v2[0];\n\t            out[1] = v1[1] / v2[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量点乘\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         * @return {number}\n\t         */\n\t        dot: function (v1, v2) {\n\t            return v1[0] * v2[0] + v1[1] * v2[1];\n\t        },\n\t\n\t        /**\n\t         * 向量缩放\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v\n\t         * @param {number} s\n\t         */\n\t        scale: function (out, v, s) {\n\t            out[0] = v[0] * s;\n\t            out[1] = v[1] * s;\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量归一化\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v\n\t         */\n\t        normalize: function (out, v) {\n\t            var d = vector.len(v);\n\t            if (d === 0) {\n\t                out[0] = 0;\n\t                out[1] = 0;\n\t            }\n\t            else {\n\t                out[0] = v[0] / d;\n\t                out[1] = v[1] / d;\n\t            }\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 计算向量间距离\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         * @return {number}\n\t         */\n\t        distance: function (v1, v2) {\n\t            return Math.sqrt(\n\t                (v1[0] - v2[0]) * (v1[0] - v2[0])\n\t                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n\t            );\n\t        },\n\t\n\t        /**\n\t         * 向量距离平方\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         * @return {number}\n\t         */\n\t        distanceSquare: function (v1, v2) {\n\t            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n\t                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n\t        },\n\t\n\t        /**\n\t         * 求负向量\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v\n\t         */\n\t        negate: function (out, v) {\n\t            out[0] = -v[0];\n\t            out[1] = -v[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 插值两个点\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         * @param {number} t\n\t         */\n\t        lerp: function (out, v1, v2, t) {\n\t            out[0] = v1[0] + t * (v2[0] - v1[0]);\n\t            out[1] = v1[1] + t * (v2[1] - v1[1]);\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 矩阵左乘向量\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v\n\t         * @param {Vector2} m\n\t         */\n\t        applyTransform: function (out, v, m) {\n\t            var x = v[0];\n\t            var y = v[1];\n\t            out[0] = m[0] * x + m[2] * y + m[4];\n\t            out[1] = m[1] * x + m[3] * y + m[5];\n\t            return out;\n\t        },\n\t        /**\n\t         * 求两个向量最小值\n\t         * @param  {Vector2} out\n\t         * @param  {Vector2} v1\n\t         * @param  {Vector2} v2\n\t         */\n\t        min: function (out, v1, v2) {\n\t            out[0] = Math.min(v1[0], v2[0]);\n\t            out[1] = Math.min(v1[1], v2[1]);\n\t            return out;\n\t        },\n\t        /**\n\t         * 求两个向量最大值\n\t         * @param  {Vector2} out\n\t         * @param  {Vector2} v1\n\t         * @param  {Vector2} v2\n\t         */\n\t        max: function (out, v1, v2) {\n\t            out[0] = Math.max(v1[0], v2[0]);\n\t            out[1] = Math.max(v1[1], v2[1]);\n\t            return out;\n\t        }\n\t    };\n\t\n\t    vector.length = vector.len;\n\t    vector.lengthSquare = vector.lenSquare;\n\t    vector.dist = vector.distance;\n\t    vector.distSquare = vector.distanceSquare;\n\t\n\t    module.exports = vector;\n\t\n\n\n/***/ },\n/* 493 */\n/***/ function(module, exports) {\n\n\t\n\t    var ArrayCtor = typeof Float32Array === 'undefined'\n\t        ? Array\n\t        : Float32Array;\n\t    /**\n\t     * 3x2矩阵操作类\n\t     * @exports zrender/tool/matrix\n\t     */\n\t    var matrix = {\n\t        /**\n\t         * 创建一个单位矩阵\n\t         * @return {Float32Array|Array.<number>}\n\t         */\n\t        create : function() {\n\t            var out = new ArrayCtor(6);\n\t            matrix.identity(out);\n\t\n\t            return out;\n\t        },\n\t        /**\n\t         * 设置矩阵为单位矩阵\n\t         * @param {Float32Array|Array.<number>} out\n\t         */\n\t        identity : function(out) {\n\t            out[0] = 1;\n\t            out[1] = 0;\n\t            out[2] = 0;\n\t            out[3] = 1;\n\t            out[4] = 0;\n\t            out[5] = 0;\n\t            return out;\n\t        },\n\t        /**\n\t         * 复制矩阵\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} m\n\t         */\n\t        copy: function(out, m) {\n\t            out[0] = m[0];\n\t            out[1] = m[1];\n\t            out[2] = m[2];\n\t            out[3] = m[3];\n\t            out[4] = m[4];\n\t            out[5] = m[5];\n\t            return out;\n\t        },\n\t        /**\n\t         * 矩阵相乘\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} m1\n\t         * @param {Float32Array|Array.<number>} m2\n\t         */\n\t        mul : function (out, m1, m2) {\n\t            // Consider matrix.mul(m, m2, m);\n\t            // where out is the same as m2.\n\t            // So use temp variable to escape error.\n\t            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n\t            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n\t            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n\t            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n\t            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n\t            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n\t            out[0] = out0;\n\t            out[1] = out1;\n\t            out[2] = out2;\n\t            out[3] = out3;\n\t            out[4] = out4;\n\t            out[5] = out5;\n\t            return out;\n\t        },\n\t        /**\n\t         * 平移变换\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} a\n\t         * @param {Float32Array|Array.<number>} v\n\t         */\n\t        translate : function(out, a, v) {\n\t            out[0] = a[0];\n\t            out[1] = a[1];\n\t            out[2] = a[2];\n\t            out[3] = a[3];\n\t            out[4] = a[4] + v[0];\n\t            out[5] = a[5] + v[1];\n\t            return out;\n\t        },\n\t        /**\n\t         * 旋转变换\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} a\n\t         * @param {number} rad\n\t         */\n\t        rotate : function(out, a, rad) {\n\t            var aa = a[0];\n\t            var ac = a[2];\n\t            var atx = a[4];\n\t            var ab = a[1];\n\t            var ad = a[3];\n\t            var aty = a[5];\n\t            var st = Math.sin(rad);\n\t            var ct = Math.cos(rad);\n\t\n\t            out[0] = aa * ct + ab * st;\n\t            out[1] = -aa * st + ab * ct;\n\t            out[2] = ac * ct + ad * st;\n\t            out[3] = -ac * st + ct * ad;\n\t            out[4] = ct * atx + st * aty;\n\t            out[5] = ct * aty - st * atx;\n\t            return out;\n\t        },\n\t        /**\n\t         * 缩放变换\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} a\n\t         * @param {Float32Array|Array.<number>} v\n\t         */\n\t        scale : function(out, a, v) {\n\t            var vx = v[0];\n\t            var vy = v[1];\n\t            out[0] = a[0] * vx;\n\t            out[1] = a[1] * vy;\n\t            out[2] = a[2] * vx;\n\t            out[3] = a[3] * vy;\n\t            out[4] = a[4] * vx;\n\t            out[5] = a[5] * vy;\n\t            return out;\n\t        },\n\t        /**\n\t         * 求逆矩阵\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} a\n\t         */\n\t        invert : function(out, a) {\n\t\n\t            var aa = a[0];\n\t            var ac = a[2];\n\t            var atx = a[4];\n\t            var ab = a[1];\n\t            var ad = a[3];\n\t            var aty = a[5];\n\t\n\t            var det = aa * ad - ab * ac;\n\t            if (!det) {\n\t                return null;\n\t            }\n\t            det = 1.0 / det;\n\t\n\t            out[0] = ad * det;\n\t            out[1] = -ab * det;\n\t            out[2] = -ac * det;\n\t            out[3] = aa * det;\n\t            out[4] = (ac * aty - ad * atx) * det;\n\t            out[5] = (ab * atx - aa * aty) * det;\n\t            return out;\n\t        }\n\t    };\n\t\n\t    module.exports = matrix;\n\t\n\n\n/***/ },\n/* 494 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module echarts/model/Model\n\t */\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var clazzUtil = __webpack_require__(495);\n\t\n\t    /**\n\t     * @alias module:echarts/model/Model\n\t     * @constructor\n\t     * @param {Object} option\n\t     * @param {module:echarts/model/Model} [parentModel]\n\t     * @param {module:echarts/model/Global} [ecModel]\n\t     */\n\t    function Model(option, parentModel, ecModel) {\n\t        /**\n\t         * @type {module:echarts/model/Model}\n\t         * @readOnly\n\t         */\n\t        this.parentModel = parentModel;\n\t\n\t        /**\n\t         * @type {module:echarts/model/Global}\n\t         * @readOnly\n\t         */\n\t        this.ecModel = ecModel;\n\t\n\t        /**\n\t         * @type {Object}\n\t         * @protected\n\t         */\n\t        this.option = option;\n\t\n\t        // Simple optimization\n\t        // if (this.init) {\n\t        //     if (arguments.length <= 4) {\n\t        //         this.init(option, parentModel, ecModel, extraOpt);\n\t        //     }\n\t        //     else {\n\t        //         this.init.apply(this, arguments);\n\t        //     }\n\t        // }\n\t    }\n\t\n\t    Model.prototype = {\n\t\n\t        constructor: Model,\n\t\n\t        /**\n\t         * Model 的初始化函数\n\t         * @param {Object} option\n\t         */\n\t        init: null,\n\t\n\t        /**\n\t         * 从新的 Option merge\n\t         */\n\t        mergeOption: function (option) {\n\t            zrUtil.merge(this.option, option, true);\n\t        },\n\t\n\t        /**\n\t         * @param {string} path\n\t         * @param {boolean} [ignoreParent=false]\n\t         * @return {*}\n\t         */\n\t        get: function (path, ignoreParent) {\n\t            if (!path) {\n\t                return this.option;\n\t            }\n\t\n\t            if (typeof path === 'string') {\n\t                path = path.split('.');\n\t            }\n\t\n\t            var obj = this.option;\n\t            var parentModel = this.parentModel;\n\t            for (var i = 0; i < path.length; i++) {\n\t                // Ignore empty\n\t                if (!path[i]) {\n\t                    continue;\n\t                }\n\t                // obj could be number/string/... (like 0)\n\t                obj = (obj && typeof obj === 'object') ? obj[path[i]] : null;\n\t                if (obj == null) {\n\t                    break;\n\t                }\n\t            }\n\t            if (obj == null && parentModel && !ignoreParent) {\n\t                obj = parentModel.get(path);\n\t            }\n\t            return obj;\n\t        },\n\t\n\t        /**\n\t         * @param {string} key\n\t         * @param {boolean} [ignoreParent=false]\n\t         * @return {*}\n\t         */\n\t        getShallow: function (key, ignoreParent) {\n\t            var option = this.option;\n\t\n\t            var val = option == null ? option : option[key];\n\t            var parentModel = this.parentModel;\n\t            if (val == null && parentModel && !ignoreParent) {\n\t                val = parentModel.getShallow(key);\n\t            }\n\t            return val;\n\t        },\n\t\n\t        /**\n\t         * @param {string} path\n\t         * @param {module:echarts/model/Model} [parentModel]\n\t         * @return {module:echarts/model/Model}\n\t         */\n\t        getModel: function (path, parentModel) {\n\t            var obj = this.get(path, true);\n\t            var thisParentModel = this.parentModel;\n\t            var model = new Model(\n\t                obj, parentModel || (thisParentModel && thisParentModel.getModel(path)),\n\t                this.ecModel\n\t            );\n\t            return model;\n\t        },\n\t\n\t        /**\n\t         * If model has option\n\t         */\n\t        isEmpty: function () {\n\t            return this.option == null;\n\t        },\n\t\n\t        restoreData: function () {},\n\t\n\t        // Pending\n\t        clone: function () {\n\t            var Ctor = this.constructor;\n\t            return new Ctor(zrUtil.clone(this.option));\n\t        },\n\t\n\t        setReadOnly: function (properties) {\n\t            clazzUtil.setReadOnly(this, properties);\n\t        }\n\t    };\n\t\n\t    // Enable Model.extend.\n\t    clazzUtil.enableClassExtend(Model);\n\t\n\t    var mixin = zrUtil.mixin;\n\t    mixin(Model, __webpack_require__(496));\n\t    mixin(Model, __webpack_require__(498));\n\t    mixin(Model, __webpack_require__(499));\n\t    mixin(Model, __webpack_require__(500));\n\t\n\t    module.exports = Model;\n\n\n/***/ },\n/* 495 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var clazz = {};\n\t\n\t    var TYPE_DELIMITER = '.';\n\t    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n\t    /**\n\t     * @public\n\t     */\n\t    var parseClassType = clazz.parseClassType = function (componentType) {\n\t        var ret = {main: '', sub: ''};\n\t        if (componentType) {\n\t            componentType = componentType.split(TYPE_DELIMITER);\n\t            ret.main = componentType[0] || '';\n\t            ret.sub = componentType[1] || '';\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t     * @public\n\t     */\n\t    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\t\n\t        RootClass.$constructor = RootClass;\n\t        RootClass.extend = function (proto) {\n\t\n\t            if (__DEV__) {\n\t                zrUtil.each(mandatoryMethods, function (method) {\n\t                    if (!proto[method]) {\n\t                        console.warn(\n\t                            'Method `' + method + '` should be implemented'\n\t                            + (proto.type ? ' in ' + proto.type : '') + '.'\n\t                        );\n\t                    }\n\t                });\n\t            }\n\t\n\t            var superClass = this;\n\t            var ExtendedClass = function () {\n\t                if (!proto.$constructor) {\n\t                    superClass.apply(this, arguments);\n\t                }\n\t                else {\n\t                    proto.$constructor.apply(this, arguments);\n\t                }\n\t            };\n\t\n\t            zrUtil.extend(ExtendedClass.prototype, proto);\n\t\n\t            ExtendedClass.extend = this.extend;\n\t            ExtendedClass.superCall = superCall;\n\t            ExtendedClass.superApply = superApply;\n\t            zrUtil.inherits(ExtendedClass, this);\n\t            ExtendedClass.superClass = superClass;\n\t\n\t            return ExtendedClass;\n\t        };\n\t    };\n\t\n\t    // superCall should have class info, which can not be fetch from 'this'.\n\t    // Consider this case:\n\t    // class A has method f,\n\t    // class B inherits class A, overrides method f, f call superApply('f'),\n\t    // class C inherits class B, do not overrides method f,\n\t    // then when method of class C is called, dead loop occured.\n\t    function superCall(context, methodName) {\n\t        var args = zrUtil.slice(arguments, 2);\n\t        return this.superClass.prototype[methodName].apply(context, args);\n\t    }\n\t\n\t    function superApply(context, methodName, args) {\n\t        return this.superClass.prototype[methodName].apply(context, args);\n\t    }\n\t\n\t    /**\n\t     * @param {Object} entity\n\t     * @param {Object} options\n\t     * @param {boolean} [options.registerWhenExtend]\n\t     * @public\n\t     */\n\t    clazz.enableClassManagement = function (entity, options) {\n\t        options = options || {};\n\t\n\t        /**\n\t         * Component model classes\n\t         * key: componentType,\n\t         * value:\n\t         *     componentClass, when componentType is 'xxx'\n\t         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n\t         * @type {Object}\n\t         */\n\t        var storage = {};\n\t\n\t        entity.registerClass = function (Clazz, componentType) {\n\t            if (componentType) {\n\t                componentType = parseClassType(componentType);\n\t\n\t                if (!componentType.sub) {\n\t                    if (__DEV__) {\n\t                        if (storage[componentType.main]) {\n\t                            console.warn(componentType.main + ' exists.');\n\t                        }\n\t                    }\n\t                    storage[componentType.main] = Clazz;\n\t                }\n\t                else if (componentType.sub !== IS_CONTAINER) {\n\t                    var container = makeContainer(componentType);\n\t                    container[componentType.sub] = Clazz;\n\t                }\n\t            }\n\t            return Clazz;\n\t        };\n\t\n\t        entity.getClass = function (componentTypeMain, subType, throwWhenNotFound) {\n\t            var Clazz = storage[componentTypeMain];\n\t\n\t            if (Clazz && Clazz[IS_CONTAINER]) {\n\t                Clazz = subType ? Clazz[subType] : null;\n\t            }\n\t\n\t            if (throwWhenNotFound && !Clazz) {\n\t                throw new Error(\n\t                    'Component ' + componentTypeMain + '.' + (subType || '') + ' not exists. Load it first.'\n\t                );\n\t            }\n\t\n\t            return Clazz;\n\t        };\n\t\n\t        entity.getClassesByMainType = function (componentType) {\n\t            componentType = parseClassType(componentType);\n\t\n\t            var result = [];\n\t            var obj = storage[componentType.main];\n\t\n\t            if (obj && obj[IS_CONTAINER]) {\n\t                zrUtil.each(obj, function (o, type) {\n\t                    type !== IS_CONTAINER && result.push(o);\n\t                });\n\t            }\n\t            else {\n\t                result.push(obj);\n\t            }\n\t\n\t            return result;\n\t        };\n\t\n\t        entity.hasClass = function (componentType) {\n\t            // Just consider componentType.main.\n\t            componentType = parseClassType(componentType);\n\t            return !!storage[componentType.main];\n\t        };\n\t\n\t        /**\n\t         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n\t         */\n\t        entity.getAllClassMainTypes = function () {\n\t            var types = [];\n\t            zrUtil.each(storage, function (obj, type) {\n\t                types.push(type);\n\t            });\n\t            return types;\n\t        };\n\t\n\t        /**\n\t         * If a main type is container and has sub types\n\t         * @param  {string}  mainType\n\t         * @return {boolean}\n\t         */\n\t        entity.hasSubTypes = function (componentType) {\n\t            componentType = parseClassType(componentType);\n\t            var obj = storage[componentType.main];\n\t            return obj && obj[IS_CONTAINER];\n\t        };\n\t\n\t        entity.parseClassType = parseClassType;\n\t\n\t        function makeContainer(componentType) {\n\t            var container = storage[componentType.main];\n\t            if (!container || !container[IS_CONTAINER]) {\n\t                container = storage[componentType.main] = {};\n\t                container[IS_CONTAINER] = true;\n\t            }\n\t            return container;\n\t        }\n\t\n\t        if (options.registerWhenExtend) {\n\t            var originalExtend = entity.extend;\n\t            if (originalExtend) {\n\t                entity.extend = function (proto) {\n\t                    var ExtendedClass = originalExtend.call(this, proto);\n\t                    return entity.registerClass(ExtendedClass, proto.type);\n\t                };\n\t            }\n\t        }\n\t\n\t        return entity;\n\t    };\n\t\n\t    /**\n\t     * @param {string|Array.<string>} properties\n\t     */\n\t    clazz.setReadOnly = function (obj, properties) {\n\t        // FIXME It seems broken in IE8 simulation of IE11\n\t        // if (!zrUtil.isArray(properties)) {\n\t        //     properties = properties != null ? [properties] : [];\n\t        // }\n\t        // zrUtil.each(properties, function (prop) {\n\t        //     var value = obj[prop];\n\t\n\t        //     Object.defineProperty\n\t        //         && Object.defineProperty(obj, prop, {\n\t        //             value: value, writable: false\n\t        //         });\n\t        //     zrUtil.isArray(obj[prop])\n\t        //         && Object.freeze\n\t        //         && Object.freeze(obj[prop]);\n\t        // });\n\t    };\n\t\n\t    module.exports = clazz;\n\n\n/***/ },\n/* 496 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t    var getLineStyle = __webpack_require__(497)(\n\t        [\n\t            ['lineWidth', 'width'],\n\t            ['stroke', 'color'],\n\t            ['opacity'],\n\t            ['shadowBlur'],\n\t            ['shadowOffsetX'],\n\t            ['shadowOffsetY'],\n\t            ['shadowColor']\n\t        ]\n\t    );\n\t    module.exports = {\n\t        getLineStyle: function (excludes) {\n\t            var style = getLineStyle.call(this, excludes);\n\t            var lineDash = this.getLineDash(style.lineWidth);\n\t            lineDash && (style.lineDash = lineDash);\n\t            return style;\n\t        },\n\t\n\t        getLineDash: function (lineWidth) {\n\t            if (lineWidth == null) {\n\t                lineWidth = 1;\n\t            }\n\t            var lineType = this.get('type');\n\t            var dotSize = Math.max(lineWidth, 2);\n\t            var dashSize = lineWidth * 4;\n\t            return (lineType === 'solid' || lineType == null) ? null\n\t                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n\t        }\n\t    };\n\n\n/***/ },\n/* 497 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// TODO Parse shadow style\n\t// TODO Only shallow path support\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    module.exports = function (properties) {\n\t        // Normalize\n\t        for (var i = 0; i < properties.length; i++) {\n\t            if (!properties[i][1]) {\n\t               properties[i][1] = properties[i][0];\n\t            }\n\t        }\n\t        return function (excludes) {\n\t            var style = {};\n\t            for (var i = 0; i < properties.length; i++) {\n\t                var propName = properties[i][1];\n\t                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n\t                    continue;\n\t                }\n\t                var val = this.getShallow(propName);\n\t                if (val != null) {\n\t                    style[properties[i][0]] = val;\n\t                }\n\t            }\n\t            return style;\n\t        };\n\t    };\n\n\n/***/ },\n/* 498 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t    module.exports = {\n\t        getAreaStyle: __webpack_require__(497)(\n\t            [\n\t                ['fill', 'color'],\n\t                ['shadowBlur'],\n\t                ['shadowOffsetX'],\n\t                ['shadowOffsetY'],\n\t                ['opacity'],\n\t                ['shadowColor']\n\t            ]\n\t        )\n\t    };\n\n\n/***/ },\n/* 499 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var textContain = __webpack_require__(490);\n\t\n\t    function getShallow(model, path) {\n\t        return model && model.getShallow(path);\n\t    }\n\t\n\t    module.exports = {\n\t        /**\n\t         * Get color property or get color from option.textStyle.color\n\t         * @return {string}\n\t         */\n\t        getTextColor: function () {\n\t            var ecModel = this.ecModel;\n\t            return this.getShallow('color')\n\t                || (ecModel && ecModel.get('textStyle.color'));\n\t        },\n\t\n\t        /**\n\t         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n\t         * @return {string}\n\t         */\n\t        getFont: function () {\n\t            var ecModel = this.ecModel;\n\t            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n\t            return [\n\t                // FIXME in node-canvas fontWeight is before fontStyle\n\t                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n\t                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n\t                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n\t                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n\t            ].join(' ');\n\t        },\n\t\n\t        getTextRect: function (text) {\n\t            return textContain.getBoundingRect(\n\t                text,\n\t                this.getFont(),\n\t                this.getShallow('align'),\n\t                this.getShallow('baseline')\n\t            );\n\t        },\n\t\n\t        truncateText: function (text, containerWidth, ellipsis, options) {\n\t            return textContain.truncateText(\n\t                text, containerWidth, this.getFont(), ellipsis, options\n\t            );\n\t        }\n\t    };\n\n\n/***/ },\n/* 500 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t    var getItemStyle = __webpack_require__(497)(\n\t        [\n\t            ['fill', 'color'],\n\t            ['stroke', 'borderColor'],\n\t            ['lineWidth', 'borderWidth'],\n\t            ['opacity'],\n\t            ['shadowBlur'],\n\t            ['shadowOffsetX'],\n\t            ['shadowOffsetY'],\n\t            ['shadowColor'],\n\t            ['textPosition'],\n\t            ['textAlign']\n\t        ]\n\t    );\n\t    module.exports = {\n\t        getItemStyle: function (excludes) {\n\t            var style = getItemStyle.call(this, excludes);\n\t            var lineDash = this.getBorderLineDash();\n\t            lineDash && (style.lineDash = lineDash);\n\t            return style;\n\t        },\n\t\n\t        getBorderLineDash: function () {\n\t            var lineType = this.get('borderType');\n\t            return (lineType === 'solid' || lineType == null) ? null\n\t                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n\t        }\n\t    };\n\n\n/***/ },\n/* 501 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Component model\n\t *\n\t * @module echarts/model/Component\n\t */\n\t\n\t\n\t    var Model = __webpack_require__(494);\n\t    var zrUtil = __webpack_require__(483);\n\t    var arrayPush = Array.prototype.push;\n\t    var componentUtil = __webpack_require__(502);\n\t    var clazzUtil = __webpack_require__(495);\n\t    var layout = __webpack_require__(503);\n\t\n\t    /**\n\t     * @alias module:echarts/model/Component\n\t     * @constructor\n\t     * @param {Object} option\n\t     * @param {module:echarts/model/Model} parentModel\n\t     * @param {module:echarts/model/Model} ecModel\n\t     */\n\t    var ComponentModel = Model.extend({\n\t\n\t        type: 'component',\n\t\n\t        /**\n\t         * @readOnly\n\t         * @type {string}\n\t         */\n\t        id: '',\n\t\n\t        /**\n\t         * @readOnly\n\t         */\n\t        name: '',\n\t\n\t        /**\n\t         * @readOnly\n\t         * @type {string}\n\t         */\n\t        mainType: '',\n\t\n\t        /**\n\t         * @readOnly\n\t         * @type {string}\n\t         */\n\t        subType: '',\n\t\n\t        /**\n\t         * @readOnly\n\t         * @type {number}\n\t         */\n\t        componentIndex: 0,\n\t\n\t        /**\n\t         * @type {Object}\n\t         * @protected\n\t         */\n\t        defaultOption: null,\n\t\n\t        /**\n\t         * @type {module:echarts/model/Global}\n\t         * @readOnly\n\t         */\n\t        ecModel: null,\n\t\n\t        /**\n\t         * key: componentType\n\t         * value:  Component model list, can not be null.\n\t         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n\t         * @readOnly\n\t         */\n\t        dependentModels: [],\n\t\n\t        /**\n\t         * @type {string}\n\t         * @readOnly\n\t         */\n\t        uid: null,\n\t\n\t        /**\n\t         * Support merge layout params.\n\t         * Only support 'box' now (left/right/top/bottom/width/height).\n\t         * @type {string|Object} Object can be {ignoreSize: true}\n\t         * @readOnly\n\t         */\n\t        layoutMode: null,\n\t\n\t        $constructor: function (option, parentModel, ecModel, extraOpt) {\n\t            Model.call(this, option, parentModel, ecModel, extraOpt);\n\t\n\t            this.uid = componentUtil.getUID('componentModel');\n\t        },\n\t\n\t\n\t        init: function (option, parentModel, ecModel, extraOpt) {\n\t            this.mergeDefaultAndTheme(option, ecModel);\n\t        },\n\t\n\t        mergeDefaultAndTheme: function (option, ecModel) {\n\t            var layoutMode = this.layoutMode;\n\t            var inputPositionParams = layoutMode\n\t                ? layout.getLayoutParams(option) : {};\n\t\n\t            var themeModel = ecModel.getTheme();\n\t            zrUtil.merge(option, themeModel.get(this.mainType));\n\t            zrUtil.merge(option, this.getDefaultOption());\n\t\n\t            if (layoutMode) {\n\t                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n\t            }\n\t        },\n\t\n\t        mergeOption: function (option, extraOpt) {\n\t            zrUtil.merge(this.option, option, true);\n\t\n\t            var layoutMode = this.layoutMode;\n\t            if (layoutMode) {\n\t                layout.mergeLayoutParam(this.option, option, layoutMode);\n\t            }\n\t        },\n\t\n\t        // Hooker after init or mergeOption\n\t        optionUpdated: function (newCptOption, isInit) {},\n\t\n\t        getDefaultOption: function () {\n\t            if (!this.hasOwnProperty('__defaultOption')) {\n\t                var optList = [];\n\t                var Class = this.constructor;\n\t                while (Class) {\n\t                    var opt = Class.prototype.defaultOption;\n\t                    opt && optList.push(opt);\n\t                    Class = Class.superClass;\n\t                }\n\t\n\t                var defaultOption = {};\n\t                for (var i = optList.length - 1; i >= 0; i--) {\n\t                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n\t                }\n\t                this.__defaultOption = defaultOption;\n\t            }\n\t            return this.__defaultOption;\n\t        },\n\t\n\t        getReferringComponents: function (mainType) {\n\t            return this.ecModel.queryComponents({\n\t                mainType: mainType,\n\t                index: this.get(mainType + 'Index', true),\n\t                id: this.get(mainType + 'Id', true)\n\t            });\n\t        }\n\t\n\t    });\n\t\n\t    // Reset ComponentModel.extend, add preConstruct.\n\t    // clazzUtil.enableClassExtend(\n\t    //     ComponentModel,\n\t    //     function (option, parentModel, ecModel, extraOpt) {\n\t    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n\t    //         zrUtil.extend(this, extraOpt);\n\t\n\t    //         this.uid = componentUtil.getUID('componentModel');\n\t\n\t    //         // this.setReadOnly([\n\t    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n\t    //         //     'dependentModels', 'componentIndex'\n\t    //         // ]);\n\t    //     }\n\t    // );\n\t\n\t    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\t    clazzUtil.enableClassManagement(\n\t        ComponentModel, {registerWhenExtend: true}\n\t    );\n\t    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\t\n\t    // Add capability of ComponentModel.topologicalTravel.\n\t    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\t\n\t    function getDependencies(componentType) {\n\t        var deps = [];\n\t        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n\t            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n\t        });\n\t        // Ensure main type\n\t        return zrUtil.map(deps, function (type) {\n\t            return clazzUtil.parseClassType(type).main;\n\t        });\n\t    }\n\t\n\t    zrUtil.mixin(ComponentModel, __webpack_require__(504));\n\t\n\t    module.exports = ComponentModel;\n\n\n/***/ },\n/* 502 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var clazz = __webpack_require__(495);\n\t\n\t    var parseClassType = clazz.parseClassType;\n\t\n\t    var base = 0;\n\t\n\t    var componentUtil = {};\n\t\n\t    var DELIMITER = '_';\n\t\n\t    /**\n\t     * @public\n\t     * @param {string} type\n\t     * @return {string}\n\t     */\n\t    componentUtil.getUID = function (type) {\n\t        // Considering the case of crossing js context,\n\t        // use Math.random to make id as unique as possible.\n\t        return [(type || ''), base++, Math.random()].join(DELIMITER);\n\t    };\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    componentUtil.enableSubTypeDefaulter = function (entity) {\n\t\n\t        var subTypeDefaulters = {};\n\t\n\t        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n\t            componentType = parseClassType(componentType);\n\t            subTypeDefaulters[componentType.main] = defaulter;\n\t        };\n\t\n\t        entity.determineSubType = function (componentType, option) {\n\t            var type = option.type;\n\t            if (!type) {\n\t                var componentTypeMain = parseClassType(componentType).main;\n\t                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n\t                    type = subTypeDefaulters[componentTypeMain](option);\n\t                }\n\t            }\n\t            return type;\n\t        };\n\t\n\t        return entity;\n\t    };\n\t\n\t    /**\n\t     * Topological travel on Activity Network (Activity On Vertices).\n\t     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n\t     *\n\t     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n\t     *\n\t     * If there is circle dependencey, Error will be thrown.\n\t     *\n\t     */\n\t    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\t\n\t        /**\n\t         * @public\n\t         * @param {Array.<string>} targetNameList Target Component type list.\n\t         *                                           Can be ['aa', 'bb', 'aa.xx']\n\t         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n\t         * @param {Function} callback Params: componentType, dependencies.\n\t         * @param {Object} context Scope of callback.\n\t         */\n\t        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n\t            if (!targetNameList.length) {\n\t                return;\n\t            }\n\t\n\t            var result = makeDepndencyGraph(fullNameList);\n\t            var graph = result.graph;\n\t            var stack = result.noEntryList;\n\t\n\t            var targetNameSet = {};\n\t            zrUtil.each(targetNameList, function (name) {\n\t                targetNameSet[name] = true;\n\t            });\n\t\n\t            while (stack.length) {\n\t                var currComponentType = stack.pop();\n\t                var currVertex = graph[currComponentType];\n\t                var isInTargetNameSet = !!targetNameSet[currComponentType];\n\t                if (isInTargetNameSet) {\n\t                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n\t                    delete targetNameSet[currComponentType];\n\t                }\n\t                zrUtil.each(\n\t                    currVertex.successor,\n\t                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n\t                );\n\t            }\n\t\n\t            zrUtil.each(targetNameSet, function () {\n\t                throw new Error('Circle dependency may exists');\n\t            });\n\t\n\t            function removeEdge(succComponentType) {\n\t                graph[succComponentType].entryCount--;\n\t                if (graph[succComponentType].entryCount === 0) {\n\t                    stack.push(succComponentType);\n\t                }\n\t            }\n\t\n\t            // Consider this case: legend depends on series, and we call\n\t            // chart.setOption({series: [...]}), where only series is in option.\n\t            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n\t            // not be called, but only sereis.mergeOption is called. Thus legend\n\t            // have no chance to update its local record about series (like which\n\t            // name of series is available in legend).\n\t            function removeEdgeAndAdd(succComponentType) {\n\t                targetNameSet[succComponentType] = true;\n\t                removeEdge(succComponentType);\n\t            }\n\t        };\n\t\n\t        /**\n\t         * DepndencyGraph: {Object}\n\t         * key: conponentType,\n\t         * value: {\n\t         *     successor: [conponentTypes...],\n\t         *     originalDeps: [conponentTypes...],\n\t         *     entryCount: {number}\n\t         * }\n\t         */\n\t        function makeDepndencyGraph(fullNameList) {\n\t            var graph = {};\n\t            var noEntryList = [];\n\t\n\t            zrUtil.each(fullNameList, function (name) {\n\t\n\t                var thisItem = createDependencyGraphItem(graph, name);\n\t                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\t\n\t                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n\t                thisItem.entryCount = availableDeps.length;\n\t                if (thisItem.entryCount === 0) {\n\t                    noEntryList.push(name);\n\t                }\n\t\n\t                zrUtil.each(availableDeps, function (dependentName) {\n\t                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n\t                        thisItem.predecessor.push(dependentName);\n\t                    }\n\t                    var thatItem = createDependencyGraphItem(graph, dependentName);\n\t                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n\t                        thatItem.successor.push(name);\n\t                    }\n\t                });\n\t            });\n\t\n\t            return {graph: graph, noEntryList: noEntryList};\n\t        }\n\t\n\t        function createDependencyGraphItem(graph, name) {\n\t            if (!graph[name]) {\n\t                graph[name] = {predecessor: [], successor: []};\n\t            }\n\t            return graph[name];\n\t        }\n\t\n\t        function getAvailableDependencies(originalDeps, fullNameList) {\n\t            var availableDeps = [];\n\t            zrUtil.each(originalDeps, function (dep) {\n\t                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n\t            });\n\t            return availableDeps;\n\t        }\n\t    };\n\t\n\t    module.exports = componentUtil;\n\n\n/***/ },\n/* 503 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// Layout helpers for each component positioning\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var BoundingRect = __webpack_require__(491);\n\t    var numberUtil = __webpack_require__(489);\n\t    var formatUtil = __webpack_require__(488);\n\t    var parsePercent = numberUtil.parsePercent;\n\t    var each = zrUtil.each;\n\t\n\t    var layout = {};\n\t\n\t    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n\t        'left', 'right', 'top', 'bottom', 'width', 'height'\n\t    ];\n\t\n\t    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n\t        var x = 0;\n\t        var y = 0;\n\t        if (maxWidth == null) {\n\t            maxWidth = Infinity;\n\t        }\n\t        if (maxHeight == null) {\n\t            maxHeight = Infinity;\n\t        }\n\t        var currentLineMaxSize = 0;\n\t        group.eachChild(function (child, idx) {\n\t            var position = child.position;\n\t            var rect = child.getBoundingRect();\n\t            var nextChild = group.childAt(idx + 1);\n\t            var nextChildRect = nextChild && nextChild.getBoundingRect();\n\t            var nextX;\n\t            var nextY;\n\t            if (orient === 'horizontal') {\n\t                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n\t                nextX = x + moveX;\n\t                // Wrap when width exceeds maxWidth or meet a `newline` group\n\t                if (nextX > maxWidth || child.newline) {\n\t                    x = 0;\n\t                    nextX = moveX;\n\t                    y += currentLineMaxSize + gap;\n\t                    currentLineMaxSize = rect.height;\n\t                }\n\t                else {\n\t                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n\t                }\n\t            }\n\t            else {\n\t                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n\t                nextY = y + moveY;\n\t                // Wrap when width exceeds maxHeight or meet a `newline` group\n\t                if (nextY > maxHeight || child.newline) {\n\t                    x += currentLineMaxSize + gap;\n\t                    y = 0;\n\t                    nextY = moveY;\n\t                    currentLineMaxSize = rect.width;\n\t                }\n\t                else {\n\t                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n\t                }\n\t            }\n\t\n\t            if (child.newline) {\n\t                return;\n\t            }\n\t\n\t            position[0] = x;\n\t            position[1] = y;\n\t\n\t            orient === 'horizontal'\n\t                ? (x = nextX + gap)\n\t                : (y = nextY + gap);\n\t        });\n\t    }\n\t\n\t    /**\n\t     * VBox or HBox layouting\n\t     * @param {string} orient\n\t     * @param {module:zrender/container/Group} group\n\t     * @param {number} gap\n\t     * @param {number} [width=Infinity]\n\t     * @param {number} [height=Infinity]\n\t     */\n\t    layout.box = boxLayout;\n\t\n\t    /**\n\t     * VBox layouting\n\t     * @param {module:zrender/container/Group} group\n\t     * @param {number} gap\n\t     * @param {number} [width=Infinity]\n\t     * @param {number} [height=Infinity]\n\t     */\n\t    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\t\n\t    /**\n\t     * HBox layouting\n\t     * @param {module:zrender/container/Group} group\n\t     * @param {number} gap\n\t     * @param {number} [width=Infinity]\n\t     * @param {number} [height=Infinity]\n\t     */\n\t    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\t\n\t    /**\n\t     * If x or x2 is not specified or 'center' 'left' 'right',\n\t     * the width would be as long as possible.\n\t     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n\t     * the height would be as long as possible.\n\t     *\n\t     * @param {Object} positionInfo\n\t     * @param {number|string} [positionInfo.x]\n\t     * @param {number|string} [positionInfo.y]\n\t     * @param {number|string} [positionInfo.x2]\n\t     * @param {number|string} [positionInfo.y2]\n\t     * @param {Object} containerRect\n\t     * @param {string|number} margin\n\t     * @return {Object} {width, height}\n\t     */\n\t    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n\t        var containerWidth = containerRect.width;\n\t        var containerHeight = containerRect.height;\n\t\n\t        var x = parsePercent(positionInfo.x, containerWidth);\n\t        var y = parsePercent(positionInfo.y, containerHeight);\n\t        var x2 = parsePercent(positionInfo.x2, containerWidth);\n\t        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\t\n\t        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n\t        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n\t        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n\t        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\t\n\t        margin = formatUtil.normalizeCssArray(margin || 0);\n\t\n\t        return {\n\t            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n\t            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Parse position info.\n\t     *\n\t     * @param {Object} positionInfo\n\t     * @param {number|string} [positionInfo.left]\n\t     * @param {number|string} [positionInfo.top]\n\t     * @param {number|string} [positionInfo.right]\n\t     * @param {number|string} [positionInfo.bottom]\n\t     * @param {number|string} [positionInfo.width]\n\t     * @param {number|string} [positionInfo.height]\n\t     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n\t     * @param {Object} containerRect\n\t     * @param {string|number} [margin]\n\t     *\n\t     * @return {module:zrender/core/BoundingRect}\n\t     */\n\t    layout.getLayoutRect = function (\n\t        positionInfo, containerRect, margin\n\t    ) {\n\t        margin = formatUtil.normalizeCssArray(margin || 0);\n\t\n\t        var containerWidth = containerRect.width;\n\t        var containerHeight = containerRect.height;\n\t\n\t        var left = parsePercent(positionInfo.left, containerWidth);\n\t        var top = parsePercent(positionInfo.top, containerHeight);\n\t        var right = parsePercent(positionInfo.right, containerWidth);\n\t        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n\t        var width = parsePercent(positionInfo.width, containerWidth);\n\t        var height = parsePercent(positionInfo.height, containerHeight);\n\t\n\t        var verticalMargin = margin[2] + margin[0];\n\t        var horizontalMargin = margin[1] + margin[3];\n\t        var aspect = positionInfo.aspect;\n\t\n\t        // If width is not specified, calculate width from left and right\n\t        if (isNaN(width)) {\n\t            width = containerWidth - right - horizontalMargin - left;\n\t        }\n\t        if (isNaN(height)) {\n\t            height = containerHeight - bottom - verticalMargin - top;\n\t        }\n\t\n\t        // If width and height are not given\n\t        // 1. Graph should not exceeds the container\n\t        // 2. Aspect must be keeped\n\t        // 3. Graph should take the space as more as possible\n\t        if (isNaN(width) && isNaN(height)) {\n\t            if (aspect > containerWidth / containerHeight) {\n\t                width = containerWidth * 0.8;\n\t            }\n\t            else {\n\t                height = containerHeight * 0.8;\n\t            }\n\t        }\n\t\n\t        if (aspect != null) {\n\t            // Calculate width or height with given aspect\n\t            if (isNaN(width)) {\n\t                width = aspect * height;\n\t            }\n\t            if (isNaN(height)) {\n\t                height = width / aspect;\n\t            }\n\t        }\n\t\n\t        // If left is not specified, calculate left from right and width\n\t        if (isNaN(left)) {\n\t            left = containerWidth - right - width - horizontalMargin;\n\t        }\n\t        if (isNaN(top)) {\n\t            top = containerHeight - bottom - height - verticalMargin;\n\t        }\n\t\n\t        // Align left and top\n\t        switch (positionInfo.left || positionInfo.right) {\n\t            case 'center':\n\t                left = containerWidth / 2 - width / 2 - margin[3];\n\t                break;\n\t            case 'right':\n\t                left = containerWidth - width - horizontalMargin;\n\t                break;\n\t        }\n\t        switch (positionInfo.top || positionInfo.bottom) {\n\t            case 'middle':\n\t            case 'center':\n\t                top = containerHeight / 2 - height / 2 - margin[0];\n\t                break;\n\t            case 'bottom':\n\t                top = containerHeight - height - verticalMargin;\n\t                break;\n\t        }\n\t        // If something is wrong and left, top, width, height are calculated as NaN\n\t        left = left || 0;\n\t        top = top || 0;\n\t        if (isNaN(width)) {\n\t            // Width may be NaN if only one value is given except width\n\t            width = containerWidth - left - (right || 0);\n\t        }\n\t        if (isNaN(height)) {\n\t            // Height may be NaN if only one value is given except height\n\t            height = containerHeight - top - (bottom || 0);\n\t        }\n\t\n\t        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n\t        rect.margin = margin;\n\t        return rect;\n\t    };\n\t\n\t\n\t    /**\n\t     * Position a zr element in viewport\n\t     *  Group position is specified by either\n\t     *  {left, top}, {right, bottom}\n\t     *  If all properties exists, right and bottom will be igonred.\n\t     *\n\t     * Logic:\n\t     *     1. Scale (against origin point in parent coord)\n\t     *     2. Rotate (against origin point in parent coord)\n\t     *     3. Traslate (with el.position by this method)\n\t     * So this method only fixes the last step 'Traslate', which does not affect\n\t     * scaling and rotating.\n\t     *\n\t     * If be called repeatly with the same input el, the same result will be gotten.\n\t     *\n\t     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n\t     * @param {Object} positionInfo\n\t     * @param {number|string} [positionInfo.left]\n\t     * @param {number|string} [positionInfo.top]\n\t     * @param {number|string} [positionInfo.right]\n\t     * @param {number|string} [positionInfo.bottom]\n\t     * @param {Object} containerRect\n\t     * @param {string|number} margin\n\t     * @param {Object} [opt]\n\t     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n\t     * @param {Array.<number>} [opt.boundingMode='all']\n\t     *        Specify how to calculate boundingRect when locating.\n\t     *        'all': Position the boundingRect that is transformed and uioned\n\t     *               both itself and its descendants.\n\t     *               This mode simplies confine the elements in the bounding\n\t     *               of their container (e.g., using 'right: 0').\n\t     *        'raw': Position the boundingRect that is not transformed and only itself.\n\t     *               This mode is useful when you want a element can overflow its\n\t     *               container. (Consider a rotated circle needs to be located in a corner.)\n\t     *               In this mode positionInfo.width/height can only be number.\n\t     */\n\t    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n\t        var h = !opt || !opt.hv || opt.hv[0];\n\t        var v = !opt || !opt.hv || opt.hv[1];\n\t        var boundingMode = opt && opt.boundingMode || 'all';\n\t\n\t        if (!h && !v) {\n\t            return;\n\t        }\n\t\n\t        var rect;\n\t        if (boundingMode === 'raw') {\n\t            rect = el.type === 'group'\n\t                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n\t                : el.getBoundingRect();\n\t        }\n\t        else {\n\t            rect = el.getBoundingRect();\n\t            if (el.needLocalTransform()) {\n\t                var transform = el.getLocalTransform();\n\t                // Notice: raw rect may be inner object of el,\n\t                // which should not be modified.\n\t                rect = rect.clone();\n\t                rect.applyTransform(transform);\n\t            }\n\t        }\n\t\n\t        positionInfo = layout.getLayoutRect(\n\t            zrUtil.defaults(\n\t                {width: rect.width, height: rect.height},\n\t                positionInfo\n\t            ),\n\t            containerRect,\n\t            margin\n\t        );\n\t\n\t        // Because 'tranlate' is the last step in transform\n\t        // (see zrender/core/Transformable#getLocalTransfrom),\n\t        // we can just only modify el.position to get final result.\n\t        var elPos = el.position;\n\t        var dx = h ? positionInfo.x - rect.x : 0;\n\t        var dy = v ? positionInfo.y - rect.y : 0;\n\t\n\t        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n\t    };\n\t\n\t    /**\n\t     * Consider Case:\n\t     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n\t     * through setOption or media query, using normal zrUtil.merge will cause\n\t     * {right: 0} does not take effect.\n\t     *\n\t     * @example\n\t     * ComponentModel.extend({\n\t     *     init: function () {\n\t     *         ...\n\t     *         var inputPositionParams = layout.getLayoutParams(option);\n\t     *         this.mergeOption(inputPositionParams);\n\t     *     },\n\t     *     mergeOption: function (newOption) {\n\t     *         newOption && zrUtil.merge(thisOption, newOption, true);\n\t     *         layout.mergeLayoutParam(thisOption, newOption);\n\t     *     }\n\t     * });\n\t     *\n\t     * @param {Object} targetOption\n\t     * @param {Object} newOption\n\t     * @param {Object|string} [opt]\n\t     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n\t     */\n\t    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n\t        !zrUtil.isObject(opt) && (opt = {});\n\t        var hNames = ['width', 'left', 'right']; // Order by priority.\n\t        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n\t        var hResult = merge(hNames);\n\t        var vResult = merge(vNames);\n\t\n\t        copy(hNames, targetOption, hResult);\n\t        copy(vNames, targetOption, vResult);\n\t\n\t        function merge(names) {\n\t            var newParams = {};\n\t            var newValueCount = 0;\n\t            var merged = {};\n\t            var mergedValueCount = 0;\n\t            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\t\n\t            each(names, function (name) {\n\t                merged[name] = targetOption[name];\n\t            });\n\t            each(names, function (name) {\n\t                // Consider case: newOption.width is null, which is\n\t                // set by user for removing width setting.\n\t                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n\t                hasValue(newParams, name) && newValueCount++;\n\t                hasValue(merged, name) && mergedValueCount++;\n\t            });\n\t\n\t            // Case: newOption: {width: ..., right: ...},\n\t            // or targetOption: {right: ...} and newOption: {width: ...},\n\t            // There is no conflict when merged only has params count\n\t            // little than enoughParamNumber.\n\t            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n\t                return merged;\n\t            }\n\t            // Case: newOption: {width: ..., right: ...},\n\t            // Than we can make sure user only want those two, and ignore\n\t            // all origin params in targetOption.\n\t            else if (newValueCount >= enoughParamNumber) {\n\t                return newParams;\n\t            }\n\t            else {\n\t                // Chose another param from targetOption by priority.\n\t                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n\t                for (var i = 0; i < names.length; i++) {\n\t                    var name = names[i];\n\t                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n\t                        newParams[name] = targetOption[name];\n\t                        break;\n\t                    }\n\t                }\n\t                return newParams;\n\t            }\n\t        }\n\t\n\t        function hasProp(obj, name) {\n\t            return obj.hasOwnProperty(name);\n\t        }\n\t\n\t        function hasValue(obj, name) {\n\t            return obj[name] != null && obj[name] !== 'auto';\n\t        }\n\t\n\t        function copy(names, target, source) {\n\t            each(names, function (name) {\n\t                target[name] = source[name];\n\t            });\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n\t     * @param {Object} source\n\t     * @return {Object} Result contains those props.\n\t     */\n\t    layout.getLayoutParams = function (source) {\n\t        return layout.copyLayoutParams({}, source);\n\t    };\n\t\n\t    /**\n\t     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n\t     * @param {Object} source\n\t     * @return {Object} Result contains those props.\n\t     */\n\t    layout.copyLayoutParams = function (target, source) {\n\t        source && target && each(LOCATION_PARAMS, function (name) {\n\t            source.hasOwnProperty(name) && (target[name] = source[name]);\n\t        });\n\t        return target;\n\t    };\n\t\n\t    module.exports = layout;\n\n\n/***/ },\n/* 504 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    module.exports = {\n\t        getBoxLayoutParams: function () {\n\t            return {\n\t                left: this.get('left'),\n\t                top: this.get('top'),\n\t                right: this.get('right'),\n\t                bottom: this.get('bottom'),\n\t                width: this.get('width'),\n\t                height: this.get('height')\n\t            };\n\t        }\n\t    };\n\n\n/***/ },\n/* 505 */\n/***/ function(module, exports) {\n\n\t\n\t    var platform = '';\n\t    // Navigator not exists in node\n\t    if (typeof navigator !== 'undefined') {\n\t        platform = navigator.platform || '';\n\t    }\n\t    module.exports = {\n\t        // 全图默认背景\n\t        // backgroundColor: 'rgba(0,0,0,0)',\n\t\n\t        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n\t        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n\t        // 浅色\n\t        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n\t        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n\t        // 深色\n\t        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\t\n\t        // 默认需要 Grid 配置项\n\t        // grid: {},\n\t        // 主题，主题\n\t        textStyle: {\n\t            // color: '#000',\n\t            // decoration: 'none',\n\t            // PENDING\n\t            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n\t            // fontFamily: 'Arial, Verdana, sans-serif',\n\t            fontSize: 12,\n\t            fontStyle: 'normal',\n\t            fontWeight: 'normal'\n\t        },\n\t\n\t        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n\t        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n\t        // Default is source-over\n\t        blendMode: null,\n\t\n\t        animation: true,\n\t        animationDuration: 1000,\n\t        animationDurationUpdate: 300,\n\t        animationEasing: 'exponentialOut',\n\t        animationEasingUpdate: 'cubicOut',\n\t\n\t        animationThreshold: 2000,\n\t        // Configuration for progressive/incremental rendering\n\t        progressiveThreshold: 3000,\n\t        progressive: 400,\n\t\n\t        // Threshold of if use single hover layer to optimize.\n\t        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n\t        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n\t        // which is unexpected.\n\t        // see example <echarts/test/heatmap-large.html>.\n\t        hoverLayerThreshold: 3000\n\t    };\n\n\n/***/ },\n/* 506 */\n/***/ function(module, exports) {\n\n\t\n\t    module.exports = {\n\t        clearColorPalette: function () {\n\t            this._colorIdx = 0;\n\t            this._colorNameMap = {};\n\t        },\n\t\n\t        getColorFromPalette: function (name, scope) {\n\t            scope = scope || this;\n\t            var colorIdx = scope._colorIdx || 0;\n\t            var colorNameMap = scope._colorNameMap || (scope._colorNameMap = {});\n\t            if (colorNameMap[name]) {\n\t                return colorNameMap[name];\n\t            }\n\t            var colorPalette = this.get('color', true) || [];\n\t            if (!colorPalette.length) {\n\t                return;\n\t            }\n\t\n\t            var color = colorPalette[colorIdx];\n\t            if (name) {\n\t                colorNameMap[name] = color;\n\t            }\n\t            scope._colorIdx = (colorIdx + 1) % colorPalette.length;\n\t\n\t            return color;\n\t        }\n\t    };\n\n\n/***/ },\n/* 507 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var echartsAPIList = [\n\t        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n\t        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n\t    ];\n\t\n\t    function ExtensionAPI(chartInstance) {\n\t        zrUtil.each(echartsAPIList, function (name) {\n\t            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n\t        }, this);\n\t    }\n\t\n\t    module.exports = ExtensionAPI;\n\n\n/***/ },\n/* 508 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    /**\n\t     * Interface of Coordinate System Class\n\t     *\n\t     * create:\n\t     *     @param {module:echarts/model/Global} ecModel\n\t     *     @param {module:echarts/ExtensionAPI} api\n\t     *     @return {Object} coordinate system instance\n\t     *\n\t     * update:\n\t     *     @param {module:echarts/model/Global} ecModel\n\t     *     @param {module:echarts/ExtensionAPI} api\n\t     *\n\t     * convertToPixel:\n\t     * convertFromPixel:\n\t     *     These two methods is also responsible for determine whether this\n\t     *     coodinate system is applicable to the given `finder`.\n\t     *     Each coordinate system will be tried, util one returns none\n\t     *     null/undefined value.\n\t     *     @param {module:echarts/model/Global} ecModel\n\t     *     @param {Object} finder\n\t     *     @param {Array|number} value\n\t     *     @return {Array|number} convert result.\n\t     *\n\t     * containPoint:\n\t     *     @param {Array.<number>} point In pixel coordinate system.\n\t     *     @return {boolean}\n\t     */\n\t\n\t    var coordinateSystemCreators = {};\n\t\n\t    function CoordinateSystemManager() {\n\t\n\t        this._coordinateSystems = [];\n\t    }\n\t\n\t    CoordinateSystemManager.prototype = {\n\t\n\t        constructor: CoordinateSystemManager,\n\t\n\t        create: function (ecModel, api) {\n\t            var coordinateSystems = [];\n\t            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n\t                var list = creater.create(ecModel, api);\n\t                coordinateSystems = coordinateSystems.concat(list || []);\n\t            });\n\t\n\t            this._coordinateSystems = coordinateSystems;\n\t        },\n\t\n\t        update: function (ecModel, api) {\n\t            zrUtil.each(this._coordinateSystems, function (coordSys) {\n\t                // FIXME MUST have\n\t                coordSys.update && coordSys.update(ecModel, api);\n\t            });\n\t        },\n\t\n\t        getCoordinateSystems: function () {\n\t            return this._coordinateSystems.slice();\n\t        }\n\t    };\n\t\n\t    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n\t        coordinateSystemCreators[type] = coordinateSystemCreator;\n\t    };\n\t\n\t    CoordinateSystemManager.get = function (type) {\n\t        return coordinateSystemCreators[type];\n\t    };\n\t\n\t    module.exports = CoordinateSystemManager;\n\n\n/***/ },\n/* 509 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * ECharts option manager\n\t *\n\t * @module {echarts/model/OptionManager}\n\t */\n\t\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var modelUtil = __webpack_require__(487);\n\t    var ComponentModel = __webpack_require__(501);\n\t    var each = zrUtil.each;\n\t    var clone = zrUtil.clone;\n\t    var map = zrUtil.map;\n\t    var merge = zrUtil.merge;\n\t\n\t    var QUERY_REG = /^(min|max)?(.+)$/;\n\t\n\t    /**\n\t     * TERM EXPLANATIONS:\n\t     *\n\t     * [option]:\n\t     *\n\t     *     An object that contains definitions of components. For example:\n\t     *     var option = {\n\t     *         title: {...},\n\t     *         legend: {...},\n\t     *         visualMap: {...},\n\t     *         series: [\n\t     *             {data: [...]},\n\t     *             {data: [...]},\n\t     *             ...\n\t     *         ]\n\t     *     };\n\t     *\n\t     * [rawOption]:\n\t     *\n\t     *     An object input to echarts.setOption. 'rawOption' may be an\n\t     *     'option', or may be an object contains multi-options. For example:\n\t     *     var option = {\n\t     *         baseOption: {\n\t     *             title: {...},\n\t     *             legend: {...},\n\t     *             series: [\n\t     *                 {data: [...]},\n\t     *                 {data: [...]},\n\t     *                 ...\n\t     *             ]\n\t     *         },\n\t     *         timeline: {...},\n\t     *         options: [\n\t     *             {title: {...}, series: {data: [...]}},\n\t     *             {title: {...}, series: {data: [...]}},\n\t     *             ...\n\t     *         ],\n\t     *         media: [\n\t     *             {\n\t     *                 query: {maxWidth: 320},\n\t     *                 option: {series: {x: 20}, visualMap: {show: false}}\n\t     *             },\n\t     *             {\n\t     *                 query: {minWidth: 320, maxWidth: 720},\n\t     *                 option: {series: {x: 500}, visualMap: {show: true}}\n\t     *             },\n\t     *             {\n\t     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n\t     *             }\n\t     *         ]\n\t     *     };\n\t     *\n\t     * @alias module:echarts/model/OptionManager\n\t     * @param {module:echarts/ExtensionAPI} api\n\t     */\n\t    function OptionManager(api) {\n\t\n\t        /**\n\t         * @private\n\t         * @type {module:echarts/ExtensionAPI}\n\t         */\n\t        this._api = api;\n\t\n\t        /**\n\t         * @private\n\t         * @type {Array.<number>}\n\t         */\n\t        this._timelineOptions = [];\n\t\n\t        /**\n\t         * @private\n\t         * @type {Array.<Object>}\n\t         */\n\t        this._mediaList = [];\n\t\n\t        /**\n\t         * @private\n\t         * @type {Object}\n\t         */\n\t        this._mediaDefault;\n\t\n\t        /**\n\t         * -1, means default.\n\t         * empty means no media.\n\t         * @private\n\t         * @type {Array.<number>}\n\t         */\n\t        this._currentMediaIndices = [];\n\t\n\t        /**\n\t         * @private\n\t         * @type {Object}\n\t         */\n\t        this._optionBackup;\n\t\n\t        /**\n\t         * @private\n\t         * @type {Object}\n\t         */\n\t        this._newBaseOption;\n\t    }\n\t\n\t    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n\t    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n\t    // rawOption cloned and backuped when timeline changed, which does no\n\t    // good to performance. What's more, that both timeline and setOption\n\t    // method supply 'notMerge' brings complex and some problems.\n\t    // Consider this case:\n\t    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n\t    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\t\n\t    OptionManager.prototype = {\n\t\n\t        constructor: OptionManager,\n\t\n\t        /**\n\t         * @public\n\t         * @param {Object} rawOption Raw option.\n\t         * @param {module:echarts/model/Global} ecModel\n\t         * @param {Array.<Function>} optionPreprocessorFuncs\n\t         * @return {Object} Init option\n\t         */\n\t        setOption: function (rawOption, optionPreprocessorFuncs) {\n\t            rawOption = clone(rawOption, true);\n\t\n\t            // FIXME\n\t            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\t\n\t            var oldOptionBackup = this._optionBackup;\n\t            var newParsedOption = parseRawOption.call(\n\t                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n\t            );\n\t            this._newBaseOption = newParsedOption.baseOption;\n\t\n\t            // For setOption at second time (using merge mode);\n\t            if (oldOptionBackup) {\n\t                // Only baseOption can be merged.\n\t                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\t\n\t                // For simplicity, timeline options and media options do not support merge,\n\t                // that is, if you `setOption` twice and both has timeline options, the latter\n\t                // timeline opitons will not be merged to the formers, but just substitude them.\n\t                if (newParsedOption.timelineOptions.length) {\n\t                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n\t                }\n\t                if (newParsedOption.mediaList.length) {\n\t                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n\t                }\n\t                if (newParsedOption.mediaDefault) {\n\t                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n\t                }\n\t            }\n\t            else {\n\t                this._optionBackup = newParsedOption;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {boolean} isRecreate\n\t         * @return {Object}\n\t         */\n\t        mountOption: function (isRecreate) {\n\t            var optionBackup = this._optionBackup;\n\t\n\t            // TODO\n\t            // 如果没有reset功能则不clone。\n\t\n\t            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n\t            this._mediaList = map(optionBackup.mediaList, clone);\n\t            this._mediaDefault = clone(optionBackup.mediaDefault);\n\t            this._currentMediaIndices = [];\n\t\n\t            return clone(isRecreate\n\t                // this._optionBackup.baseOption, which is created at the first `setOption`\n\t                // called, and is merged into every new option by inner method `mergeOption`\n\t                // each time `setOption` called, can be only used in `isRecreate`, because\n\t                // its reliability is under suspicion. In other cases option merge is\n\t                // performed by `model.mergeOption`.\n\t                ? optionBackup.baseOption : this._newBaseOption\n\t            );\n\t        },\n\t\n\t        /**\n\t         * @param {module:echarts/model/Global} ecModel\n\t         * @return {Object}\n\t         */\n\t        getTimelineOption: function (ecModel) {\n\t            var option;\n\t            var timelineOptions = this._timelineOptions;\n\t\n\t            if (timelineOptions.length) {\n\t                // getTimelineOption can only be called after ecModel inited,\n\t                // so we can get currentIndex from timelineModel.\n\t                var timelineModel = ecModel.getComponent('timeline');\n\t                if (timelineModel) {\n\t                    option = clone(\n\t                        timelineOptions[timelineModel.getCurrentIndex()],\n\t                        true\n\t                    );\n\t                }\n\t            }\n\t\n\t            return option;\n\t        },\n\t\n\t        /**\n\t         * @param {module:echarts/model/Global} ecModel\n\t         * @return {Array.<Object>}\n\t         */\n\t        getMediaOption: function (ecModel) {\n\t            var ecWidth = this._api.getWidth();\n\t            var ecHeight = this._api.getHeight();\n\t            var mediaList = this._mediaList;\n\t            var mediaDefault = this._mediaDefault;\n\t            var indices = [];\n\t            var result = [];\n\t\n\t            // No media defined.\n\t            if (!mediaList.length && !mediaDefault) {\n\t                return result;\n\t            }\n\t\n\t            // Multi media may be applied, the latter defined media has higher priority.\n\t            for (var i = 0, len = mediaList.length; i < len; i++) {\n\t                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n\t                    indices.push(i);\n\t                }\n\t            }\n\t\n\t            // FIXME\n\t            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\t            if (!indices.length && mediaDefault) {\n\t                indices = [-1];\n\t            }\n\t\n\t            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n\t                result = map(indices, function (index) {\n\t                    return clone(\n\t                        index === -1 ? mediaDefault.option : mediaList[index].option\n\t                    );\n\t                });\n\t            }\n\t            // Otherwise return nothing.\n\t\n\t            this._currentMediaIndices = indices;\n\t\n\t            return result;\n\t        }\n\t    };\n\t\n\t    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n\t        var timelineOptions = [];\n\t        var mediaList = [];\n\t        var mediaDefault;\n\t        var baseOption;\n\t\n\t        // Compatible with ec2.\n\t        var timelineOpt = rawOption.timeline;\n\t\n\t        if (rawOption.baseOption) {\n\t            baseOption = rawOption.baseOption;\n\t        }\n\t\n\t        // For timeline\n\t        if (timelineOpt || rawOption.options) {\n\t            baseOption = baseOption || {};\n\t            timelineOptions = (rawOption.options || []).slice();\n\t        }\n\t\n\t        // For media query\n\t        if (rawOption.media) {\n\t            baseOption = baseOption || {};\n\t            var media = rawOption.media;\n\t            each(media, function (singleMedia) {\n\t                if (singleMedia && singleMedia.option) {\n\t                    if (singleMedia.query) {\n\t                        mediaList.push(singleMedia);\n\t                    }\n\t                    else if (!mediaDefault) {\n\t                        // Use the first media default.\n\t                        mediaDefault = singleMedia;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        // For normal option\n\t        if (!baseOption) {\n\t            baseOption = rawOption;\n\t        }\n\t\n\t        // Set timelineOpt to baseOption in ec3,\n\t        // which is convenient for merge option.\n\t        if (!baseOption.timeline) {\n\t            baseOption.timeline = timelineOpt;\n\t        }\n\t\n\t        // Preprocess.\n\t        each([baseOption].concat(timelineOptions)\n\t            .concat(zrUtil.map(mediaList, function (media) {\n\t                return media.option;\n\t            })),\n\t            function (option) {\n\t                each(optionPreprocessorFuncs, function (preProcess) {\n\t                    preProcess(option, isNew);\n\t                });\n\t            }\n\t        );\n\t\n\t        return {\n\t            baseOption: baseOption,\n\t            timelineOptions: timelineOptions,\n\t            mediaDefault: mediaDefault,\n\t            mediaList: mediaList\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n\t     * Support: width, height, aspectRatio\n\t     * Can use max or min as prefix.\n\t     */\n\t    function applyMediaQuery(query, ecWidth, ecHeight) {\n\t        var realMap = {\n\t            width: ecWidth,\n\t            height: ecHeight,\n\t            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\t        };\n\t\n\t        var applicatable = true;\n\t\n\t        zrUtil.each(query, function (value, attr) {\n\t            var matched = attr.match(QUERY_REG);\n\t\n\t            if (!matched || !matched[1] || !matched[2]) {\n\t                return;\n\t            }\n\t\n\t            var operator = matched[1];\n\t            var realAttr = matched[2].toLowerCase();\n\t\n\t            if (!compare(realMap[realAttr], value, operator)) {\n\t                applicatable = false;\n\t            }\n\t        });\n\t\n\t        return applicatable;\n\t    }\n\t\n\t    function compare(real, expect, operator) {\n\t        if (operator === 'min') {\n\t            return real >= expect;\n\t        }\n\t        else if (operator === 'max') {\n\t            return real <= expect;\n\t        }\n\t        else { // Equals\n\t            return real === expect;\n\t        }\n\t    }\n\t\n\t    function indicesEquals(indices1, indices2) {\n\t        // indices is always order by asc and has only finite number.\n\t        return indices1.join(',') === indices2.join(',');\n\t    }\n\t\n\t    /**\n\t     * Consider case:\n\t     * `chart.setOption(opt1);`\n\t     * Then user do some interaction like dataZoom, dataView changing.\n\t     * `chart.setOption(opt2);`\n\t     * Then user press 'reset button' in toolbox.\n\t     *\n\t     * After doing that all of the interaction effects should be reset, the\n\t     * chart should be the same as the result of invoke\n\t     * `chart.setOption(opt1); chart.setOption(opt2);`.\n\t     *\n\t     * Although it is not able ensure that\n\t     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n\t     * `chart.setOption(merge(opt1, opt2));` exactly,\n\t     * this might be the only simple way to implement that feature.\n\t     *\n\t     * MEMO: We've considered some other approaches:\n\t     * 1. Each model handle its self restoration but not uniform treatment.\n\t     *     (Too complex in logic and error-prone)\n\t     * 2. Use a shadow ecModel. (Performace expensive)\n\t     */\n\t    function mergeOption(oldOption, newOption) {\n\t        newOption = newOption || {};\n\t\n\t        each(newOption, function (newCptOpt, mainType) {\n\t            if (newCptOpt == null) {\n\t                return;\n\t            }\n\t\n\t            var oldCptOpt = oldOption[mainType];\n\t\n\t            if (!ComponentModel.hasClass(mainType)) {\n\t                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n\t            }\n\t            else {\n\t                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n\t                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\t\n\t                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\t\n\t                oldOption[mainType] = map(mapResult, function (item) {\n\t                    return (item.option && item.exist)\n\t                        ? merge(item.exist, item.option, true)\n\t                        : (item.exist || item.option);\n\t                });\n\t            }\n\t        });\n\t    }\n\t\n\t    module.exports = OptionManager;\n\n\n/***/ },\n/* 510 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var formatUtil = __webpack_require__(488);\n\t    var modelUtil = __webpack_require__(487);\n\t    var ComponentModel = __webpack_require__(501);\n\t    var colorPaletteMixin = __webpack_require__(506);\n\t    var env = __webpack_require__(485);\n\t    var layout = __webpack_require__(503);\n\t\n\t    var encodeHTML = formatUtil.encodeHTML;\n\t    var addCommas = formatUtil.addCommas;\n\t\n\t    var SeriesModel = ComponentModel.extend({\n\t\n\t        type: 'series.__base__',\n\t\n\t        /**\n\t         * @readOnly\n\t         */\n\t        seriesIndex: 0,\n\t\n\t        // coodinateSystem will be injected in the echarts/CoordinateSystem\n\t        coordinateSystem: null,\n\t\n\t        /**\n\t         * @type {Object}\n\t         * @protected\n\t         */\n\t        defaultOption: null,\n\t\n\t        /**\n\t         * Data provided for legend\n\t         * @type {Function}\n\t         */\n\t        // PENDING\n\t        legendDataProvider: null,\n\t\n\t        /**\n\t         * Access path of color for visual\n\t         */\n\t        visualColorAccessPath: 'itemStyle.normal.color',\n\t\n\t        /**\n\t         * Support merge layout params.\n\t         * Only support 'box' now (left/right/top/bottom/width/height).\n\t         * @type {string|Object} Object can be {ignoreSize: true}\n\t         * @readOnly\n\t         */\n\t        layoutMode: null,\n\t\n\t        init: function (option, parentModel, ecModel, extraOpt) {\n\t\n\t            /**\n\t             * @type {number}\n\t             * @readOnly\n\t             */\n\t            this.seriesIndex = this.componentIndex;\n\t\n\t            this.mergeDefaultAndTheme(option, ecModel);\n\t\n\t            /**\n\t             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n\t             * @private\n\t             */\n\t            this._dataBeforeProcessed = this.getInitialData(option, ecModel);\n\t\n\t            // If we reverse the order (make this._data firstly, and then make\n\t            // this._dataBeforeProcessed by cloneShallow), cloneShallow will\n\t            // cause this._data.graph.data !== this._data when using\n\t            // module:echarts/data/Graph or module:echarts/data/Tree.\n\t            // See module:echarts/data/helper/linkList\n\t            this._data = this._dataBeforeProcessed.cloneShallow();\n\t        },\n\t\n\t        /**\n\t         * Util for merge default and theme to option\n\t         * @param  {Object} option\n\t         * @param  {module:echarts/model/Global} ecModel\n\t         */\n\t        mergeDefaultAndTheme: function (option, ecModel) {\n\t            var layoutMode = this.layoutMode;\n\t            var inputPositionParams = layoutMode\n\t                ? layout.getLayoutParams(option) : {};\n\t\n\t            zrUtil.merge(\n\t                option,\n\t                ecModel.getTheme().get(this.subType)\n\t            );\n\t            zrUtil.merge(option, this.getDefaultOption());\n\t\n\t            // Default label emphasis `position` and `show`\n\t            // FIXME Set label in mergeOption\n\t            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\t\n\t            this.fillDataTextStyle(option.data);\n\t\n\t            if (layoutMode) {\n\t                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n\t            }\n\t        },\n\t\n\t        mergeOption: function (newSeriesOption, ecModel) {\n\t            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n\t            this.fillDataTextStyle(newSeriesOption.data);\n\t\n\t            var layoutMode = this.layoutMode;\n\t            if (layoutMode) {\n\t                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n\t            }\n\t\n\t            var data = this.getInitialData(newSeriesOption, ecModel);\n\t            // TODO Merge data?\n\t            if (data) {\n\t                this._data = data;\n\t                this._dataBeforeProcessed = data.cloneShallow();\n\t            }\n\t        },\n\t\n\t        fillDataTextStyle: function (data) {\n\t            // Default data label emphasis `position` and `show`\n\t            // FIXME Tree structure data ?\n\t            // FIXME Performance ?\n\t            if (data) {\n\t                for (var i = 0; i < data.length; i++) {\n\t                    if (data[i] && data[i].label) {\n\t                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Init a data structure from data related option in series\n\t         * Must be overwritten\n\t         */\n\t        getInitialData: function () {},\n\t\n\t        /**\n\t         * @param {string} [dataType]\n\t         * @return {module:echarts/data/List}\n\t         */\n\t        getData: function (dataType) {\n\t            return dataType == null ? this._data : this._data.getLinkedData(dataType);\n\t        },\n\t\n\t        /**\n\t         * @param {module:echarts/data/List} data\n\t         */\n\t        setData: function (data) {\n\t            this._data = data;\n\t        },\n\t\n\t        /**\n\t         * Get data before processed\n\t         * @return {module:echarts/data/List}\n\t         */\n\t        getRawData: function () {\n\t            return this._dataBeforeProcessed;\n\t        },\n\t\n\t        /**\n\t         * Coord dimension to data dimension.\n\t         *\n\t         * By default the result is the same as dimensions of series data.\n\t         * But in some series data dimensions are different from coord dimensions (i.e.\n\t         * candlestick and boxplot). Override this method to handle those cases.\n\t         *\n\t         * Coord dimension to data dimension can be one-to-many\n\t         *\n\t         * @param {string} coordDim\n\t         * @return {Array.<string>} dimensions on the axis.\n\t         */\n\t        coordDimToDataDim: function (coordDim) {\n\t            return [coordDim];\n\t        },\n\t\n\t        /**\n\t         * Convert data dimension to coord dimension.\n\t         *\n\t         * @param {string|number} dataDim\n\t         * @return {string}\n\t         */\n\t        dataDimToCoordDim: function (dataDim) {\n\t            return dataDim;\n\t        },\n\t\n\t        /**\n\t         * Get base axis if has coordinate system and has axis.\n\t         * By default use coordSys.getBaseAxis();\n\t         * Can be overrided for some chart.\n\t         * @return {type} description\n\t         */\n\t        getBaseAxis: function () {\n\t            var coordSys = this.coordinateSystem;\n\t            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n\t        },\n\t\n\t        // FIXME\n\t        /**\n\t         * Default tooltip formatter\n\t         *\n\t         * @param {number} dataIndex\n\t         * @param {boolean} [multipleSeries=false]\n\t         * @param {number} [dataType]\n\t         */\n\t        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n\t            function formatArrayValue(value) {\n\t                var result = [];\n\t\n\t                zrUtil.each(value, function (val, idx) {\n\t                    var dimInfo = data.getDimensionInfo(idx);\n\t                    var dimType = dimInfo && dimInfo.type;\n\t                    var valStr;\n\t\n\t                    if (dimType === 'ordinal') {\n\t                        valStr = val + '';\n\t                    }\n\t                    else if (dimType === 'time') {\n\t                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n\t                    }\n\t                    else {\n\t                        valStr = addCommas(val);\n\t                    }\n\t\n\t                    valStr && result.push(valStr);\n\t                });\n\t\n\t                return result.join(', ');\n\t            }\n\t\n\t            var data = this._data;\n\t\n\t            var value = this.getRawValue(dataIndex);\n\t            var formattedValue = zrUtil.isArray(value)\n\t                ? formatArrayValue(value) : addCommas(value);\n\t            var name = data.getName(dataIndex);\n\t\n\t            var color = data.getItemVisual(dataIndex, 'color');\n\t            if (zrUtil.isObject(color) && color.colorStops) {\n\t                color = (color.colorStops[0] || {}).color;\n\t            }\n\t            color = color || 'transparent';\n\t\n\t            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n\t                + 'border-radius:10px;width:9px;height:9px;background-color:' + color + '\"></span>';\n\t\n\t            var seriesName = this.name;\n\t            // FIXME\n\t            if (seriesName === '\\0-') {\n\t                // Not show '-'\n\t                seriesName = '';\n\t            }\n\t            return !multipleSeries\n\t                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n\t                    + (name\n\t                        ? encodeHTML(name) + ' : ' + formattedValue\n\t                        : formattedValue)\n\t                  )\n\t                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n\t        },\n\t\n\t        /**\n\t         * @return {boolean}\n\t         */\n\t        ifEnableAnimation: function () {\n\t            if (env.node) {\n\t                return false;\n\t            }\n\t\n\t            var animationEnabled = this.getShallow('animation');\n\t            if (animationEnabled) {\n\t                if (this.getData().count() > this.getShallow('animationThreshold')) {\n\t                    animationEnabled = false;\n\t                }\n\t            }\n\t            return animationEnabled;\n\t        },\n\t\n\t        restoreData: function () {\n\t            this._data = this._dataBeforeProcessed.cloneShallow();\n\t        },\n\t\n\t        getColorFromPalette: function (name, scope) {\n\t            var ecModel = this.ecModel;\n\t            // PENDING\n\t            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\t            if (!color) {\n\t                color = ecModel.getColorFromPalette(name, scope);\n\t            }\n\t            return color;\n\t        },\n\t\n\t        /**\n\t         * Get data indices for show tooltip content. See tooltip.\n\t         * @abstract\n\t         * @param {Array.<string>|string} dim\n\t         * @param {Array.<number>} value\n\t         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n\t         * @return {Array.<number>} data indices.\n\t         */\n\t        getAxisTooltipDataIndex: null,\n\t\n\t        /**\n\t         * See tooltip.\n\t         * @abstract\n\t         * @param {number} dataIndex\n\t         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n\t         */\n\t        getTooltipPosition: null\n\t    });\n\t\n\t    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n\t    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\t\n\t    module.exports = SeriesModel;\n\n\n/***/ },\n/* 511 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var Group = __webpack_require__(512);\n\t    var componentUtil = __webpack_require__(502);\n\t    var clazzUtil = __webpack_require__(495);\n\t\n\t    var Component = function () {\n\t        /**\n\t         * @type {module:zrender/container/Group}\n\t         * @readOnly\n\t         */\n\t        this.group = new Group();\n\t\n\t        /**\n\t         * @type {string}\n\t         * @readOnly\n\t         */\n\t        this.uid = componentUtil.getUID('viewComponent');\n\t    };\n\t\n\t    Component.prototype = {\n\t\n\t        constructor: Component,\n\t\n\t        init: function (ecModel, api) {},\n\t\n\t        render: function (componentModel, ecModel, api, payload) {},\n\t\n\t        dispose: function () {}\n\t\n\t    };\n\t\n\t    var componentProto = Component.prototype;\n\t    componentProto.updateView\n\t        = componentProto.updateLayout\n\t        = componentProto.updateVisual\n\t        = function (seriesModel, ecModel, api, payload) {\n\t            // Do nothing;\n\t        };\n\t    // Enable Component.extend.\n\t    clazzUtil.enableClassExtend(Component);\n\t\n\t    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\t    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\t\n\t    module.exports = Component;\n\n\n/***/ },\n/* 512 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n\t * @module zrender/graphic/Group\n\t * @example\n\t *     var Group = require('zrender/lib/container/Group');\n\t *     var Circle = require('zrender/lib/graphic/shape/Circle');\n\t *     var g = new Group();\n\t *     g.position[0] = 100;\n\t *     g.position[1] = 100;\n\t *     g.add(new Circle({\n\t *         style: {\n\t *             x: 100,\n\t *             y: 100,\n\t *             r: 20,\n\t *         }\n\t *     }));\n\t *     zr.add(g);\n\t */\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var Element = __webpack_require__(513);\n\t    var BoundingRect = __webpack_require__(491);\n\t\n\t    /**\n\t     * @alias module:zrender/graphic/Group\n\t     * @constructor\n\t     * @extends module:zrender/mixin/Transformable\n\t     * @extends module:zrender/mixin/Eventful\n\t     */\n\t    var Group = function (opts) {\n\t\n\t        opts = opts || {};\n\t\n\t        Element.call(this, opts);\n\t\n\t        for (var key in opts) {\n\t            if (opts.hasOwnProperty(key)) {\n\t                this[key] = opts[key];\n\t            }\n\t        }\n\t\n\t        this._children = [];\n\t\n\t        this.__storage = null;\n\t\n\t        this.__dirty = true;\n\t    };\n\t\n\t    Group.prototype = {\n\t\n\t        constructor: Group,\n\t\n\t        isGroup: true,\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        type: 'group',\n\t\n\t        /**\n\t         * 所有子孙元素是否响应鼠标事件\n\t         * @name module:/zrender/container/Group#silent\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        silent: false,\n\t\n\t        /**\n\t         * @return {Array.<module:zrender/Element>}\n\t         */\n\t        children: function () {\n\t            return this._children.slice();\n\t        },\n\t\n\t        /**\n\t         * 获取指定 index 的儿子节点\n\t         * @param  {number} idx\n\t         * @return {module:zrender/Element}\n\t         */\n\t        childAt: function (idx) {\n\t            return this._children[idx];\n\t        },\n\t\n\t        /**\n\t         * 获取指定名字的儿子节点\n\t         * @param  {string} name\n\t         * @return {module:zrender/Element}\n\t         */\n\t        childOfName: function (name) {\n\t            var children = this._children;\n\t            for (var i = 0; i < children.length; i++) {\n\t                if (children[i].name === name) {\n\t                    return children[i];\n\t                }\n\t             }\n\t        },\n\t\n\t        /**\n\t         * @return {number}\n\t         */\n\t        childCount: function () {\n\t            return this._children.length;\n\t        },\n\t\n\t        /**\n\t         * 添加子节点到最后\n\t         * @param {module:zrender/Element} child\n\t         */\n\t        add: function (child) {\n\t            if (child && child !== this && child.parent !== this) {\n\t\n\t                this._children.push(child);\n\t\n\t                this._doAdd(child);\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 添加子节点在 nextSibling 之前\n\t         * @param {module:zrender/Element} child\n\t         * @param {module:zrender/Element} nextSibling\n\t         */\n\t        addBefore: function (child, nextSibling) {\n\t            if (child && child !== this && child.parent !== this\n\t                && nextSibling && nextSibling.parent === this) {\n\t\n\t                var children = this._children;\n\t                var idx = children.indexOf(nextSibling);\n\t\n\t                if (idx >= 0) {\n\t                    children.splice(idx, 0, child);\n\t                    this._doAdd(child);\n\t                }\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        _doAdd: function (child) {\n\t            if (child.parent) {\n\t                child.parent.remove(child);\n\t            }\n\t\n\t            child.parent = this;\n\t\n\t            var storage = this.__storage;\n\t            var zr = this.__zr;\n\t            if (storage && storage !== child.__storage) {\n\t\n\t                storage.addToMap(child);\n\t\n\t                if (child instanceof Group) {\n\t                    child.addChildrenToStorage(storage);\n\t                }\n\t            }\n\t\n\t            zr && zr.refresh();\n\t        },\n\t\n\t        /**\n\t         * 移除子节点\n\t         * @param {module:zrender/Element} child\n\t         */\n\t        remove: function (child) {\n\t            var zr = this.__zr;\n\t            var storage = this.__storage;\n\t            var children = this._children;\n\t\n\t            var idx = zrUtil.indexOf(children, child);\n\t            if (idx < 0) {\n\t                return this;\n\t            }\n\t            children.splice(idx, 1);\n\t\n\t            child.parent = null;\n\t\n\t            if (storage) {\n\t\n\t                storage.delFromMap(child.id);\n\t\n\t                if (child instanceof Group) {\n\t                    child.delChildrenFromStorage(storage);\n\t                }\n\t            }\n\t\n\t            zr && zr.refresh();\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 移除所有子节点\n\t         */\n\t        removeAll: function () {\n\t            var children = this._children;\n\t            var storage = this.__storage;\n\t            var child;\n\t            var i;\n\t            for (i = 0; i < children.length; i++) {\n\t                child = children[i];\n\t                if (storage) {\n\t                    storage.delFromMap(child.id);\n\t                    if (child instanceof Group) {\n\t                        child.delChildrenFromStorage(storage);\n\t                    }\n\t                }\n\t                child.parent = null;\n\t            }\n\t            children.length = 0;\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 遍历所有子节点\n\t         * @param  {Function} cb\n\t         * @param  {}   context\n\t         */\n\t        eachChild: function (cb, context) {\n\t            var children = this._children;\n\t            for (var i = 0; i < children.length; i++) {\n\t                var child = children[i];\n\t                cb.call(context, child, i);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 深度优先遍历所有子孙节点\n\t         * @param  {Function} cb\n\t         * @param  {}   context\n\t         */\n\t        traverse: function (cb, context) {\n\t            for (var i = 0; i < this._children.length; i++) {\n\t                var child = this._children[i];\n\t                cb.call(context, child);\n\t\n\t                if (child.type === 'group') {\n\t                    child.traverse(cb, context);\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t\n\t        addChildrenToStorage: function (storage) {\n\t            for (var i = 0; i < this._children.length; i++) {\n\t                var child = this._children[i];\n\t                storage.addToMap(child);\n\t                if (child instanceof Group) {\n\t                    child.addChildrenToStorage(storage);\n\t                }\n\t            }\n\t        },\n\t\n\t        delChildrenFromStorage: function (storage) {\n\t            for (var i = 0; i < this._children.length; i++) {\n\t                var child = this._children[i];\n\t                storage.delFromMap(child.id);\n\t                if (child instanceof Group) {\n\t                    child.delChildrenFromStorage(storage);\n\t                }\n\t            }\n\t        },\n\t\n\t        dirty: function () {\n\t            this.__dirty = true;\n\t            this.__zr && this.__zr.refresh();\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @return {module:zrender/core/BoundingRect}\n\t         */\n\t        getBoundingRect: function (includeChildren) {\n\t            // TODO Caching\n\t            var rect = null;\n\t            var tmpRect = new BoundingRect(0, 0, 0, 0);\n\t            var children = includeChildren || this._children;\n\t            var tmpMat = [];\n\t\n\t            for (var i = 0; i < children.length; i++) {\n\t                var child = children[i];\n\t                if (child.ignore || child.invisible) {\n\t                    continue;\n\t                }\n\t\n\t                var childRect = child.getBoundingRect();\n\t                var transform = child.getLocalTransform(tmpMat);\n\t                // TODO\n\t                // The boundingRect cacluated by transforming original\n\t                // rect may be bigger than the actual bundingRect when rotation\n\t                // is used. (Consider a circle rotated aginst its center, where\n\t                // the actual boundingRect should be the same as that not be\n\t                // rotated.) But we can not find better approach to calculate\n\t                // actual boundingRect yet, considering performance.\n\t                if (transform) {\n\t                    tmpRect.copy(childRect);\n\t                    tmpRect.applyTransform(transform);\n\t                    rect = rect || tmpRect.clone();\n\t                    rect.union(tmpRect);\n\t                }\n\t                else {\n\t                    rect = rect || childRect.clone();\n\t                    rect.union(childRect);\n\t                }\n\t            }\n\t            return rect || tmpRect;\n\t        }\n\t    };\n\t\n\t    zrUtil.inherits(Group, Element);\n\t\n\t    module.exports = Group;\n\n\n/***/ },\n/* 513 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module zrender/Element\n\t */\n\t\n\t\n\t    var guid = __webpack_require__(514);\n\t    var Eventful = __webpack_require__(515);\n\t    var Transformable = __webpack_require__(516);\n\t    var Animatable = __webpack_require__(517);\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    /**\n\t     * @alias module:zrender/Element\n\t     * @constructor\n\t     * @extends {module:zrender/mixin/Animatable}\n\t     * @extends {module:zrender/mixin/Transformable}\n\t     * @extends {module:zrender/mixin/Eventful}\n\t     */\n\t    var Element = function (opts) {\n\t\n\t        Transformable.call(this, opts);\n\t        Eventful.call(this, opts);\n\t        Animatable.call(this, opts);\n\t\n\t        /**\n\t         * 画布元素ID\n\t         * @type {string}\n\t         */\n\t        this.id = opts.id || guid();\n\t    };\n\t\n\t    Element.prototype = {\n\t\n\t        /**\n\t         * 元素类型\n\t         * Element type\n\t         * @type {string}\n\t         */\n\t        type: 'element',\n\t\n\t        /**\n\t         * 元素名字\n\t         * Element name\n\t         * @type {string}\n\t         */\n\t        name: '',\n\t\n\t        /**\n\t         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n\t         * ZRender instance will be assigned when element is associated with zrender\n\t         * @name module:/zrender/Element#__zr\n\t         * @type {module:zrender/ZRender}\n\t         */\n\t        __zr: null,\n\t\n\t        /**\n\t         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n\t         * If ignore drawing and events of the element object\n\t         * @name module:/zrender/Element#ignore\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        ignore: false,\n\t\n\t        /**\n\t         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n\t         * 该路径会继承被裁减对象的变换\n\t         * @type {module:zrender/graphic/Path}\n\t         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n\t         * @readOnly\n\t         */\n\t        clipPath: null,\n\t\n\t        /**\n\t         * Drift element\n\t         * @param  {number} dx dx on the global space\n\t         * @param  {number} dy dy on the global space\n\t         */\n\t        drift: function (dx, dy) {\n\t            switch (this.draggable) {\n\t                case 'horizontal':\n\t                    dy = 0;\n\t                    break;\n\t                case 'vertical':\n\t                    dx = 0;\n\t                    break;\n\t            }\n\t\n\t            var m = this.transform;\n\t            if (!m) {\n\t                m = this.transform = [1, 0, 0, 1, 0, 0];\n\t            }\n\t            m[4] += dx;\n\t            m[5] += dy;\n\t\n\t            this.decomposeTransform();\n\t            this.dirty(false);\n\t        },\n\t\n\t        /**\n\t         * Hook before update\n\t         */\n\t        beforeUpdate: function () {},\n\t        /**\n\t         * Hook after update\n\t         */\n\t        afterUpdate: function () {},\n\t        /**\n\t         * Update each frame\n\t         */\n\t        update: function () {\n\t            this.updateTransform();\n\t        },\n\t\n\t        /**\n\t         * @param  {Function} cb\n\t         * @param  {}   context\n\t         */\n\t        traverse: function (cb, context) {},\n\t\n\t        /**\n\t         * @protected\n\t         */\n\t        attrKV: function (key, value) {\n\t            if (key === 'position' || key === 'scale' || key === 'origin') {\n\t                // Copy the array\n\t                if (value) {\n\t                    var target = this[key];\n\t                    if (!target) {\n\t                        target = this[key] = [];\n\t                    }\n\t                    target[0] = value[0];\n\t                    target[1] = value[1];\n\t                }\n\t            }\n\t            else {\n\t                this[key] = value;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Hide the element\n\t         */\n\t        hide: function () {\n\t            this.ignore = true;\n\t            this.__zr && this.__zr.refresh();\n\t        },\n\t\n\t        /**\n\t         * Show the element\n\t         */\n\t        show: function () {\n\t            this.ignore = false;\n\t            this.__zr && this.__zr.refresh();\n\t        },\n\t\n\t        /**\n\t         * @param {string|Object} key\n\t         * @param {*} value\n\t         */\n\t        attr: function (key, value) {\n\t            if (typeof key === 'string') {\n\t                this.attrKV(key, value);\n\t            }\n\t            else if (zrUtil.isObject(key)) {\n\t                for (var name in key) {\n\t                    if (key.hasOwnProperty(name)) {\n\t                        this.attrKV(name, key[name]);\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.dirty(false);\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param {module:zrender/graphic/Path} clipPath\n\t         */\n\t        setClipPath: function (clipPath) {\n\t            var zr = this.__zr;\n\t            if (zr) {\n\t                clipPath.addSelfToZr(zr);\n\t            }\n\t\n\t            // Remove previous clip path\n\t            if (this.clipPath && this.clipPath !== clipPath) {\n\t                this.removeClipPath();\n\t            }\n\t\n\t            this.clipPath = clipPath;\n\t            clipPath.__zr = zr;\n\t            clipPath.__clipTarget = this;\n\t\n\t            this.dirty(false);\n\t        },\n\t\n\t        /**\n\t         */\n\t        removeClipPath: function () {\n\t            var clipPath = this.clipPath;\n\t            if (clipPath) {\n\t                if (clipPath.__zr) {\n\t                    clipPath.removeSelfFromZr(clipPath.__zr);\n\t                }\n\t\n\t                clipPath.__zr = null;\n\t                clipPath.__clipTarget = null;\n\t                this.clipPath = null;\n\t\n\t                this.dirty(false);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Add self from zrender instance.\n\t         * Not recursively because it will be invoked when element added to storage.\n\t         * @param {module:zrender/ZRender} zr\n\t         */\n\t        addSelfToZr: function (zr) {\n\t            this.__zr = zr;\n\t            // 添加动画\n\t            var animators = this.animators;\n\t            if (animators) {\n\t                for (var i = 0; i < animators.length; i++) {\n\t                    zr.animation.addAnimator(animators[i]);\n\t                }\n\t            }\n\t\n\t            if (this.clipPath) {\n\t                this.clipPath.addSelfToZr(zr);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Remove self from zrender instance.\n\t         * Not recursively because it will be invoked when element added to storage.\n\t         * @param {module:zrender/ZRender} zr\n\t         */\n\t        removeSelfFromZr: function (zr) {\n\t            this.__zr = null;\n\t            // 移除动画\n\t            var animators = this.animators;\n\t            if (animators) {\n\t                for (var i = 0; i < animators.length; i++) {\n\t                    zr.animation.removeAnimator(animators[i]);\n\t                }\n\t            }\n\t\n\t            if (this.clipPath) {\n\t                this.clipPath.removeSelfFromZr(zr);\n\t            }\n\t        }\n\t    };\n\t\n\t    zrUtil.mixin(Element, Animatable);\n\t    zrUtil.mixin(Element, Transformable);\n\t    zrUtil.mixin(Element, Eventful);\n\t\n\t    module.exports = Element;\n\n\n/***/ },\n/* 514 */\n/***/ function(module, exports) {\n\n\t/**\n\t * zrender: 生成唯一id\n\t *\n\t * @author errorrik (errorrik@gmail.com)\n\t */\n\t\n\t\n\t    var idStart = 0x0907;\n\t\n\t    module.exports = function () {\n\t        return idStart++;\n\t    };\n\t\n\n\n/***/ },\n/* 515 */\n/***/ function(module, exports) {\n\n\t/**\n\t * 事件扩展\n\t * @module zrender/mixin/Eventful\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         pissang (https://www.github.com/pissang)\n\t */\n\t\n\t\n\t    var arrySlice = Array.prototype.slice;\n\t\n\t    /**\n\t     * 事件分发器\n\t     * @alias module:zrender/mixin/Eventful\n\t     * @constructor\n\t     */\n\t    var Eventful = function () {\n\t        this._$handlers = {};\n\t    };\n\t\n\t    Eventful.prototype = {\n\t\n\t        constructor: Eventful,\n\t\n\t        /**\n\t         * 单次触发绑定，trigger后销毁\n\t         *\n\t         * @param {string} event 事件名\n\t         * @param {Function} handler 响应函数\n\t         * @param {Object} context\n\t         */\n\t        one: function (event, handler, context) {\n\t            var _h = this._$handlers;\n\t\n\t            if (!handler || !event) {\n\t                return this;\n\t            }\n\t\n\t            if (!_h[event]) {\n\t                _h[event] = [];\n\t            }\n\t\n\t            for (var i = 0; i < _h[event].length; i++) {\n\t                if (_h[event][i].h === handler) {\n\t                    return this;\n\t                }\n\t            }\n\t\n\t            _h[event].push({\n\t                h: handler,\n\t                one: true,\n\t                ctx: context || this\n\t            });\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 绑定事件\n\t         * @param {string} event 事件名\n\t         * @param {Function} handler 事件处理函数\n\t         * @param {Object} [context]\n\t         */\n\t        on: function (event, handler, context) {\n\t            var _h = this._$handlers;\n\t\n\t            if (!handler || !event) {\n\t                return this;\n\t            }\n\t\n\t            if (!_h[event]) {\n\t                _h[event] = [];\n\t            }\n\t\n\t            for (var i = 0; i < _h[event].length; i++) {\n\t                if (_h[event][i].h === handler) {\n\t                    return this;\n\t                }\n\t            }\n\t\n\t            _h[event].push({\n\t                h: handler,\n\t                one: false,\n\t                ctx: context || this\n\t            });\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 是否绑定了事件\n\t         * @param  {string}  event\n\t         * @return {boolean}\n\t         */\n\t        isSilent: function (event) {\n\t            var _h = this._$handlers;\n\t            return _h[event] && _h[event].length;\n\t        },\n\t\n\t        /**\n\t         * 解绑事件\n\t         * @param {string} event 事件名\n\t         * @param {Function} [handler] 事件处理函数\n\t         */\n\t        off: function (event, handler) {\n\t            var _h = this._$handlers;\n\t\n\t            if (!event) {\n\t                this._$handlers = {};\n\t                return this;\n\t            }\n\t\n\t            if (handler) {\n\t                if (_h[event]) {\n\t                    var newList = [];\n\t                    for (var i = 0, l = _h[event].length; i < l; i++) {\n\t                        if (_h[event][i]['h'] != handler) {\n\t                            newList.push(_h[event][i]);\n\t                        }\n\t                    }\n\t                    _h[event] = newList;\n\t                }\n\t\n\t                if (_h[event] && _h[event].length === 0) {\n\t                    delete _h[event];\n\t                }\n\t            }\n\t            else {\n\t                delete _h[event];\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 事件分发\n\t         *\n\t         * @param {string} type 事件类型\n\t         */\n\t        trigger: function (type) {\n\t            if (this._$handlers[type]) {\n\t                var args = arguments;\n\t                var argLen = args.length;\n\t\n\t                if (argLen > 3) {\n\t                    args = arrySlice.call(args, 1);\n\t                }\n\t\n\t                var _h = this._$handlers[type];\n\t                var len = _h.length;\n\t                for (var i = 0; i < len;) {\n\t                    // Optimize advise from backbone\n\t                    switch (argLen) {\n\t                        case 1:\n\t                            _h[i]['h'].call(_h[i]['ctx']);\n\t                            break;\n\t                        case 2:\n\t                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\t                            break;\n\t                        case 3:\n\t                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\t                            break;\n\t                        default:\n\t                            // have more than 2 given arguments\n\t                            _h[i]['h'].apply(_h[i]['ctx'], args);\n\t                            break;\n\t                    }\n\t\n\t                    if (_h[i]['one']) {\n\t                        _h.splice(i, 1);\n\t                        len--;\n\t                    }\n\t                    else {\n\t                        i++;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 带有context的事件分发, 最后一个参数是事件回调的context\n\t         * @param {string} type 事件类型\n\t         */\n\t        triggerWithContext: function (type) {\n\t            if (this._$handlers[type]) {\n\t                var args = arguments;\n\t                var argLen = args.length;\n\t\n\t                if (argLen > 4) {\n\t                    args = arrySlice.call(args, 1, args.length - 1);\n\t                }\n\t                var ctx = args[args.length - 1];\n\t\n\t                var _h = this._$handlers[type];\n\t                var len = _h.length;\n\t                for (var i = 0; i < len;) {\n\t                    // Optimize advise from backbone\n\t                    switch (argLen) {\n\t                        case 1:\n\t                            _h[i]['h'].call(ctx);\n\t                            break;\n\t                        case 2:\n\t                            _h[i]['h'].call(ctx, args[1]);\n\t                            break;\n\t                        case 3:\n\t                            _h[i]['h'].call(ctx, args[1], args[2]);\n\t                            break;\n\t                        default:\n\t                            // have more than 2 given arguments\n\t                            _h[i]['h'].apply(ctx, args);\n\t                            break;\n\t                    }\n\t\n\t                    if (_h[i]['one']) {\n\t                        _h.splice(i, 1);\n\t                        len--;\n\t                    }\n\t                    else {\n\t                        i++;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return this;\n\t        }\n\t    };\n\t\n\t    // 对象可以通过 onxxxx 绑定事件\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onclick\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmouseover\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmouseout\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmousemove\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmousewheel\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmousedown\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmouseup\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondrag\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondragstart\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondragend\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondragenter\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondragleave\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondragover\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondrop\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t\n\t    module.exports = Eventful;\n\t\n\n\n/***/ },\n/* 516 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 提供变换扩展\n\t * @module zrender/mixin/Transformable\n\t * @author pissang (https://www.github.com/pissang)\n\t */\n\t\n\t\n\t    var matrix = __webpack_require__(493);\n\t    var vector = __webpack_require__(492);\n\t    var mIdentity = matrix.identity;\n\t\n\t    var EPSILON = 5e-5;\n\t\n\t    function isNotAroundZero(val) {\n\t        return val > EPSILON || val < -EPSILON;\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/mixin/Transformable\n\t     * @constructor\n\t     */\n\t    var Transformable = function (opts) {\n\t        opts = opts || {};\n\t        // If there are no given position, rotation, scale\n\t        if (!opts.position) {\n\t            /**\n\t             * 平移\n\t             * @type {Array.<number>}\n\t             * @default [0, 0]\n\t             */\n\t            this.position = [0, 0];\n\t        }\n\t        if (opts.rotation == null) {\n\t            /**\n\t             * 旋转\n\t             * @type {Array.<number>}\n\t             * @default 0\n\t             */\n\t            this.rotation = 0;\n\t        }\n\t        if (!opts.scale) {\n\t            /**\n\t             * 缩放\n\t             * @type {Array.<number>}\n\t             * @default [1, 1]\n\t             */\n\t            this.scale = [1, 1];\n\t        }\n\t        /**\n\t         * 旋转和缩放的原点\n\t         * @type {Array.<number>}\n\t         * @default null\n\t         */\n\t        this.origin = this.origin || null;\n\t    };\n\t\n\t    var transformableProto = Transformable.prototype;\n\t    transformableProto.transform = null;\n\t\n\t    /**\n\t     * 判断是否需要有坐标变换\n\t     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n\t     */\n\t    transformableProto.needLocalTransform = function () {\n\t        return isNotAroundZero(this.rotation)\n\t            || isNotAroundZero(this.position[0])\n\t            || isNotAroundZero(this.position[1])\n\t            || isNotAroundZero(this.scale[0] - 1)\n\t            || isNotAroundZero(this.scale[1] - 1);\n\t    };\n\t\n\t    transformableProto.updateTransform = function () {\n\t        var parent = this.parent;\n\t        var parentHasTransform = parent && parent.transform;\n\t        var needLocalTransform = this.needLocalTransform();\n\t\n\t        var m = this.transform;\n\t        if (!(needLocalTransform || parentHasTransform)) {\n\t            m && mIdentity(m);\n\t            return;\n\t        }\n\t\n\t        m = m || matrix.create();\n\t\n\t        if (needLocalTransform) {\n\t            this.getLocalTransform(m);\n\t        }\n\t        else {\n\t            mIdentity(m);\n\t        }\n\t\n\t        // 应用父节点变换\n\t        if (parentHasTransform) {\n\t            if (needLocalTransform) {\n\t                matrix.mul(m, parent.transform, m);\n\t            }\n\t            else {\n\t                matrix.copy(m, parent.transform);\n\t            }\n\t        }\n\t        // 保存这个变换矩阵\n\t        this.transform = m;\n\t\n\t        this.invTransform = this.invTransform || matrix.create();\n\t        matrix.invert(this.invTransform, m);\n\t    };\n\t\n\t    transformableProto.getLocalTransform = function (m) {\n\t        m = m || [];\n\t        mIdentity(m);\n\t\n\t        var origin = this.origin;\n\t\n\t        var scale = this.scale;\n\t        var rotation = this.rotation;\n\t        var position = this.position;\n\t        if (origin) {\n\t            // Translate to origin\n\t            m[4] -= origin[0];\n\t            m[5] -= origin[1];\n\t        }\n\t        matrix.scale(m, m, scale);\n\t        if (rotation) {\n\t            matrix.rotate(m, m, rotation);\n\t        }\n\t        if (origin) {\n\t            // Translate back from origin\n\t            m[4] += origin[0];\n\t            m[5] += origin[1];\n\t        }\n\t\n\t        m[4] += position[0];\n\t        m[5] += position[1];\n\t\n\t        return m;\n\t    };\n\t    /**\n\t     * 将自己的transform应用到context上\n\t     * @param {Context2D} ctx\n\t     */\n\t    transformableProto.setTransform = function (ctx) {\n\t        var m = this.transform;\n\t        var dpr = ctx.dpr || 1;\n\t        if (m) {\n\t            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n\t        }\n\t        else {\n\t            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n\t        }\n\t    };\n\t\n\t    transformableProto.restoreTransform = function (ctx) {\n\t        var m = this.transform;\n\t        var dpr = ctx.dpr || 1;\n\t        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n\t    }\n\t\n\t    var tmpTransform = [];\n\t\n\t    /**\n\t     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n\t     */\n\t    transformableProto.decomposeTransform = function () {\n\t        if (!this.transform) {\n\t            return;\n\t        }\n\t        var parent = this.parent;\n\t        var m = this.transform;\n\t        if (parent && parent.transform) {\n\t            // Get local transform and decompose them to position, scale, rotation\n\t            matrix.mul(tmpTransform, parent.invTransform, m);\n\t            m = tmpTransform;\n\t        }\n\t        var sx = m[0] * m[0] + m[1] * m[1];\n\t        var sy = m[2] * m[2] + m[3] * m[3];\n\t        var position = this.position;\n\t        var scale = this.scale;\n\t        if (isNotAroundZero(sx - 1)) {\n\t            sx = Math.sqrt(sx);\n\t        }\n\t        if (isNotAroundZero(sy - 1)) {\n\t            sy = Math.sqrt(sy);\n\t        }\n\t        if (m[0] < 0) {\n\t            sx = -sx;\n\t        }\n\t        if (m[3] < 0) {\n\t            sy = -sy;\n\t        }\n\t        position[0] = m[4];\n\t        position[1] = m[5];\n\t        scale[0] = sx;\n\t        scale[1] = sy;\n\t        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n\t    };\n\t\n\t    /**\n\t     * Get global scale\n\t     * @return {Array.<number>}\n\t     */\n\t    transformableProto.getGlobalScale = function () {\n\t        var m = this.transform;\n\t        if (!m) {\n\t            return [1, 1];\n\t        }\n\t        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n\t        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\t        if (m[0] < 0) {\n\t            sx = -sx;\n\t        }\n\t        if (m[3] < 0) {\n\t            sy = -sy;\n\t        }\n\t        return [sx, sy];\n\t    };\n\t    /**\n\t     * 变换坐标位置到 shape 的局部坐标空间\n\t     * @method\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @return {Array.<number>}\n\t     */\n\t    transformableProto.transformCoordToLocal = function (x, y) {\n\t        var v2 = [x, y];\n\t        var invTransform = this.invTransform;\n\t        if (invTransform) {\n\t            vector.applyTransform(v2, v2, invTransform);\n\t        }\n\t        return v2;\n\t    };\n\t\n\t    /**\n\t     * 变换局部坐标位置到全局坐标空间\n\t     * @method\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @return {Array.<number>}\n\t     */\n\t    transformableProto.transformCoordToGlobal = function (x, y) {\n\t        var v2 = [x, y];\n\t        var transform = this.transform;\n\t        if (transform) {\n\t            vector.applyTransform(v2, v2, transform);\n\t        }\n\t        return v2;\n\t    };\n\t\n\t    module.exports = Transformable;\n\t\n\n\n/***/ },\n/* 517 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module zrender/mixin/Animatable\n\t */\n\t\n\t\n\t    var Animator = __webpack_require__(518);\n\t    var util = __webpack_require__(483);\n\t    var isString = util.isString;\n\t    var isFunction = util.isFunction;\n\t    var isObject = util.isObject;\n\t    var log = __webpack_require__(522);\n\t\n\t    /**\n\t     * @alias modue:zrender/mixin/Animatable\n\t     * @constructor\n\t     */\n\t    var Animatable = function () {\n\t\n\t        /**\n\t         * @type {Array.<module:zrender/animation/Animator>}\n\t         * @readOnly\n\t         */\n\t        this.animators = [];\n\t    };\n\t\n\t    Animatable.prototype = {\n\t\n\t        constructor: Animatable,\n\t\n\t        /**\n\t         * 动画\n\t         *\n\t         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n\t         * @param {boolean} [loop] 动画是否循环\n\t         * @return {module:zrender/animation/Animator}\n\t         * @example:\n\t         *     el.animate('style', false)\n\t         *         .when(1000, {x: 10} )\n\t         *         .done(function(){ // Animation done })\n\t         *         .start()\n\t         */\n\t        animate: function (path, loop) {\n\t            var target;\n\t            var animatingShape = false;\n\t            var el = this;\n\t            var zr = this.__zr;\n\t            if (path) {\n\t                var pathSplitted = path.split('.');\n\t                var prop = el;\n\t                // If animating shape\n\t                animatingShape = pathSplitted[0] === 'shape';\n\t                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n\t                    if (!prop) {\n\t                        continue;\n\t                    }\n\t                    prop = prop[pathSplitted[i]];\n\t                }\n\t                if (prop) {\n\t                    target = prop;\n\t                }\n\t            }\n\t            else {\n\t                target = el;\n\t            }\n\t\n\t            if (!target) {\n\t                log(\n\t                    'Property \"'\n\t                    + path\n\t                    + '\" is not existed in element '\n\t                    + el.id\n\t                );\n\t                return;\n\t            }\n\t\n\t            var animators = el.animators;\n\t\n\t            var animator = new Animator(target, loop);\n\t\n\t            animator.during(function (target) {\n\t                el.dirty(animatingShape);\n\t            })\n\t            .done(function () {\n\t                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n\t                animators.splice(util.indexOf(animators, animator), 1);\n\t            });\n\t\n\t            animators.push(animator);\n\t\n\t            // If animate after added to the zrender\n\t            if (zr) {\n\t                zr.animation.addAnimator(animator);\n\t            }\n\t\n\t            return animator;\n\t        },\n\t\n\t        /**\n\t         * 停止动画\n\t         * @param {boolean} forwardToLast If move to last frame before stop\n\t         */\n\t        stopAnimation: function (forwardToLast) {\n\t            var animators = this.animators;\n\t            var len = animators.length;\n\t            for (var i = 0; i < len; i++) {\n\t                animators[i].stop(forwardToLast);\n\t            }\n\t            animators.length = 0;\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param {Object} target\n\t         * @param {number} [time=500] Time in ms\n\t         * @param {string} [easing='linear']\n\t         * @param {number} [delay=0]\n\t         * @param {Function} [callback]\n\t         *\n\t         * @example\n\t         *  // Animate position\n\t         *  el.animateTo({\n\t         *      position: [10, 10]\n\t         *  }, function () { // done })\n\t         *\n\t         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n\t         *  el.animateTo({\n\t         *      shape: {\n\t         *          width: 500\n\t         *      },\n\t         *      style: {\n\t         *          fill: 'red'\n\t         *      }\n\t         *      position: [10, 10]\n\t         *  }, 100, 100, 'cubicOut', function () { // done })\n\t         */\n\t         // TODO Return animation key\n\t        animateTo: function (target, time, delay, easing, callback) {\n\t            // animateTo(target, time, easing, callback);\n\t            if (isString(delay)) {\n\t                callback = easing;\n\t                easing = delay;\n\t                delay = 0;\n\t            }\n\t            // animateTo(target, time, delay, callback);\n\t            else if (isFunction(easing)) {\n\t                callback = easing;\n\t                easing = 'linear';\n\t                delay = 0;\n\t            }\n\t            // animateTo(target, time, callback);\n\t            else if (isFunction(delay)) {\n\t                callback = delay;\n\t                delay = 0;\n\t            }\n\t            // animateTo(target, callback)\n\t            else if (isFunction(time)) {\n\t                callback = time;\n\t                time = 500;\n\t            }\n\t            // animateTo(target)\n\t            else if (!time) {\n\t                time = 500;\n\t            }\n\t            // Stop all previous animations\n\t            this.stopAnimation();\n\t            this._animateToShallow('', this, target, time, delay, easing, callback);\n\t\n\t            // Animators may be removed immediately after start\n\t            // if there is nothing to animate\n\t            var animators = this.animators.slice();\n\t            var count = animators.length;\n\t            function done() {\n\t                count--;\n\t                if (!count) {\n\t                    callback && callback();\n\t                }\n\t            }\n\t\n\t            // No animators. This should be checked before animators[i].start(),\n\t            // because 'done' may be executed immediately if no need to animate.\n\t            if (!count) {\n\t                callback && callback();\n\t            }\n\t            // Start after all animators created\n\t            // Incase any animator is done immediately when all animation properties are not changed\n\t            for (var i = 0; i < animators.length; i++) {\n\t                animators[i]\n\t                    .done(done)\n\t                    .start(easing);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param {string} path=''\n\t         * @param {Object} source=this\n\t         * @param {Object} target\n\t         * @param {number} [time=500]\n\t         * @param {number} [delay=0]\n\t         *\n\t         * @example\n\t         *  // Animate position\n\t         *  el._animateToShallow({\n\t         *      position: [10, 10]\n\t         *  })\n\t         *\n\t         *  // Animate shape, style and position in 100ms, delayed 100ms\n\t         *  el._animateToShallow({\n\t         *      shape: {\n\t         *          width: 500\n\t         *      },\n\t         *      style: {\n\t         *          fill: 'red'\n\t         *      }\n\t         *      position: [10, 10]\n\t         *  }, 100, 100)\n\t         */\n\t        _animateToShallow: function (path, source, target, time, delay) {\n\t            var objShallow = {};\n\t            var propertyCount = 0;\n\t            for (var name in target) {\n\t                if (!target.hasOwnProperty(name)) {\n\t                    continue;\n\t                }\n\t\n\t                if (source[name] != null) {\n\t                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n\t                        this._animateToShallow(\n\t                            path ? path + '.' + name : name,\n\t                            source[name],\n\t                            target[name],\n\t                            time,\n\t                            delay\n\t                        );\n\t                    }\n\t                    else {\n\t                        objShallow[name] = target[name];\n\t                        propertyCount++;\n\t                    }\n\t                }\n\t                else if (target[name] != null) {\n\t                    // Attr directly if not has property\n\t                    // FIXME, if some property not needed for element ?\n\t                    if (!path) {\n\t                        this.attr(name, target[name]);\n\t                    }\n\t                    else {  // Shape or style\n\t                        var props = {};\n\t                        props[path] = {};\n\t                        props[path][name] = target[name];\n\t                        this.attr(props);\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (propertyCount > 0) {\n\t                this.animate(path, false)\n\t                    .when(time == null ? 500 : time, objShallow)\n\t                    .delay(delay || 0);\n\t            }\n\t\n\t            return this;\n\t        }\n\t    };\n\t\n\t    module.exports = Animatable;\n\n\n/***/ },\n/* 518 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module echarts/animation/Animator\n\t */\n\t\n\t\n\t    var Clip = __webpack_require__(519);\n\t    var color = __webpack_require__(521);\n\t    var util = __webpack_require__(483);\n\t    var isArrayLike = util.isArrayLike;\n\t\n\t    var arraySlice = Array.prototype.slice;\n\t\n\t    function defaultGetter(target, key) {\n\t        return target[key];\n\t    }\n\t\n\t    function defaultSetter(target, key, value) {\n\t        target[key] = value;\n\t    }\n\t\n\t    /**\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} percent\n\t     * @return {number}\n\t     */\n\t    function interpolateNumber(p0, p1, percent) {\n\t        return (p1 - p0) * percent + p0;\n\t    }\n\t\n\t    /**\n\t     * @param  {string} p0\n\t     * @param  {string} p1\n\t     * @param  {number} percent\n\t     * @return {string}\n\t     */\n\t    function interpolateString(p0, p1, percent) {\n\t        return percent > 0.5 ? p1 : p0;\n\t    }\n\t\n\t    /**\n\t     * @param  {Array} p0\n\t     * @param  {Array} p1\n\t     * @param  {number} percent\n\t     * @param  {Array} out\n\t     * @param  {number} arrDim\n\t     */\n\t    function interpolateArray(p0, p1, percent, out, arrDim) {\n\t        var len = p0.length;\n\t        if (arrDim == 1) {\n\t            for (var i = 0; i < len; i++) {\n\t                out[i] = interpolateNumber(p0[i], p1[i], percent);\n\t            }\n\t        }\n\t        else {\n\t            var len2 = p0[0].length;\n\t            for (var i = 0; i < len; i++) {\n\t                for (var j = 0; j < len2; j++) {\n\t                    out[i][j] = interpolateNumber(\n\t                        p0[i][j], p1[i][j], percent\n\t                    );\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    // arr0 is source array, arr1 is target array.\n\t    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\t    function fillArr(arr0, arr1, arrDim) {\n\t        var arr0Len = arr0.length;\n\t        var arr1Len = arr1.length;\n\t        if (arr0Len !== arr1Len) {\n\t            // FIXME Not work for TypedArray\n\t            var isPreviousLarger = arr0Len > arr1Len;\n\t            if (isPreviousLarger) {\n\t                // Cut the previous\n\t                arr0.length = arr1Len;\n\t            }\n\t            else {\n\t                // Fill the previous\n\t                for (var i = arr0Len; i < arr1Len; i++) {\n\t                    arr0.push(\n\t                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n\t                    );\n\t                }\n\t            }\n\t        }\n\t        // Handling NaN value\n\t        var len2 = arr0[0] && arr0[0].length;\n\t        for (var i = 0; i < arr0.length; i++) {\n\t            if (arrDim === 1) {\n\t                if (isNaN(arr0[i])) {\n\t                    arr0[i] = arr1[i];\n\t                }\n\t            }\n\t            else {\n\t                for (var j = 0; j < len2; j++) {\n\t                    if (isNaN(arr0[i][j])) {\n\t                        arr0[i][j] = arr1[i][j];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param  {Array} arr0\n\t     * @param  {Array} arr1\n\t     * @param  {number} arrDim\n\t     * @return {boolean}\n\t     */\n\t    function isArraySame(arr0, arr1, arrDim) {\n\t        if (arr0 === arr1) {\n\t            return true;\n\t        }\n\t        var len = arr0.length;\n\t        if (len !== arr1.length) {\n\t            return false;\n\t        }\n\t        if (arrDim === 1) {\n\t            for (var i = 0; i < len; i++) {\n\t                if (arr0[i] !== arr1[i]) {\n\t                    return false;\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            var len2 = arr0[0].length;\n\t            for (var i = 0; i < len; i++) {\n\t                for (var j = 0; j < len2; j++) {\n\t                    if (arr0[i][j] !== arr1[i][j]) {\n\t                        return false;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return true;\n\t    }\n\t\n\t    /**\n\t     * Catmull Rom interpolate array\n\t     * @param  {Array} p0\n\t     * @param  {Array} p1\n\t     * @param  {Array} p2\n\t     * @param  {Array} p3\n\t     * @param  {number} t\n\t     * @param  {number} t2\n\t     * @param  {number} t3\n\t     * @param  {Array} out\n\t     * @param  {number} arrDim\n\t     */\n\t    function catmullRomInterpolateArray(\n\t        p0, p1, p2, p3, t, t2, t3, out, arrDim\n\t    ) {\n\t        var len = p0.length;\n\t        if (arrDim == 1) {\n\t            for (var i = 0; i < len; i++) {\n\t                out[i] = catmullRomInterpolate(\n\t                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n\t                );\n\t            }\n\t        }\n\t        else {\n\t            var len2 = p0[0].length;\n\t            for (var i = 0; i < len; i++) {\n\t                for (var j = 0; j < len2; j++) {\n\t                    out[i][j] = catmullRomInterpolate(\n\t                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n\t                        t, t2, t3\n\t                    );\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Catmull Rom interpolate number\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {number} t\n\t     * @param  {number} t2\n\t     * @param  {number} t3\n\t     * @return {number}\n\t     */\n\t    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n\t        var v0 = (p2 - p0) * 0.5;\n\t        var v1 = (p3 - p1) * 0.5;\n\t        return (2 * (p1 - p2) + v0 + v1) * t3\n\t                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n\t                + v0 * t + p1;\n\t    }\n\t\n\t    function cloneValue(value) {\n\t        if (isArrayLike(value)) {\n\t            var len = value.length;\n\t            if (isArrayLike(value[0])) {\n\t                var ret = [];\n\t                for (var i = 0; i < len; i++) {\n\t                    ret.push(arraySlice.call(value[i]));\n\t                }\n\t                return ret;\n\t            }\n\t\n\t            return arraySlice.call(value);\n\t        }\n\t\n\t        return value;\n\t    }\n\t\n\t    function rgba2String(rgba) {\n\t        rgba[0] = Math.floor(rgba[0]);\n\t        rgba[1] = Math.floor(rgba[1]);\n\t        rgba[2] = Math.floor(rgba[2]);\n\t\n\t        return 'rgba(' + rgba.join(',') + ')';\n\t    }\n\t\n\t    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n\t        var getter = animator._getter;\n\t        var setter = animator._setter;\n\t        var useSpline = easing === 'spline';\n\t\n\t        var trackLen = keyframes.length;\n\t        if (!trackLen) {\n\t            return;\n\t        }\n\t        // Guess data type\n\t        var firstVal = keyframes[0].value;\n\t        var isValueArray = isArrayLike(firstVal);\n\t        var isValueColor = false;\n\t        var isValueString = false;\n\t\n\t        // For vertices morphing\n\t        var arrDim = (\n\t                isValueArray\n\t                && isArrayLike(firstVal[0])\n\t            )\n\t            ? 2 : 1;\n\t        var trackMaxTime;\n\t        // Sort keyframe as ascending\n\t        keyframes.sort(function(a, b) {\n\t            return a.time - b.time;\n\t        });\n\t\n\t        trackMaxTime = keyframes[trackLen - 1].time;\n\t        // Percents of each keyframe\n\t        var kfPercents = [];\n\t        // Value of each keyframe\n\t        var kfValues = [];\n\t        var prevValue = keyframes[0].value;\n\t        var isAllValueEqual = true;\n\t        for (var i = 0; i < trackLen; i++) {\n\t            kfPercents.push(keyframes[i].time / trackMaxTime);\n\t            // Assume value is a color when it is a string\n\t            var value = keyframes[i].value;\n\t\n\t            // Check if value is equal, deep check if value is array\n\t            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n\t                || (!isValueArray && value === prevValue))) {\n\t                isAllValueEqual = false;\n\t            }\n\t            prevValue = value;\n\t\n\t            // Try converting a string to a color array\n\t            if (typeof value == 'string') {\n\t                var colorArray = color.parse(value);\n\t                if (colorArray) {\n\t                    value = colorArray;\n\t                    isValueColor = true;\n\t                }\n\t                else {\n\t                    isValueString = true;\n\t                }\n\t            }\n\t            kfValues.push(value);\n\t        }\n\t        if (isAllValueEqual) {\n\t            return;\n\t        }\n\t\n\t        var lastValue = kfValues[trackLen - 1];\n\t        // Polyfill array and NaN value\n\t        for (var i = 0; i < trackLen - 1; i++) {\n\t            if (isValueArray) {\n\t                fillArr(kfValues[i], lastValue, arrDim);\n\t            }\n\t            else {\n\t                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n\t                    kfValues[i] = lastValue;\n\t                }\n\t            }\n\t        }\n\t        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\t\n\t        // Cache the key of last frame to speed up when\n\t        // animation playback is sequency\n\t        var lastFrame = 0;\n\t        var lastFramePercent = 0;\n\t        var start;\n\t        var w;\n\t        var p0;\n\t        var p1;\n\t        var p2;\n\t        var p3;\n\t\n\t        if (isValueColor) {\n\t            var rgba = [0, 0, 0, 0];\n\t        }\n\t\n\t        var onframe = function (target, percent) {\n\t            // Find the range keyframes\n\t            // kf1-----kf2---------current--------kf3\n\t            // find kf2 and kf3 and do interpolation\n\t            var frame;\n\t            // In the easing function like elasticOut, percent may less than 0\n\t            if (percent < 0) {\n\t                frame = 0;\n\t            }\n\t            else if (percent < lastFramePercent) {\n\t                // Start from next key\n\t                // PENDING start from lastFrame ?\n\t                start = Math.min(lastFrame + 1, trackLen - 1);\n\t                for (frame = start; frame >= 0; frame--) {\n\t                    if (kfPercents[frame] <= percent) {\n\t                        break;\n\t                    }\n\t                }\n\t                // PENDING really need to do this ?\n\t                frame = Math.min(frame, trackLen - 2);\n\t            }\n\t            else {\n\t                for (frame = lastFrame; frame < trackLen; frame++) {\n\t                    if (kfPercents[frame] > percent) {\n\t                        break;\n\t                    }\n\t                }\n\t                frame = Math.min(frame - 1, trackLen - 2);\n\t            }\n\t            lastFrame = frame;\n\t            lastFramePercent = percent;\n\t\n\t            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n\t            if (range === 0) {\n\t                return;\n\t            }\n\t            else {\n\t                w = (percent - kfPercents[frame]) / range;\n\t            }\n\t            if (useSpline) {\n\t                p1 = kfValues[frame];\n\t                p0 = kfValues[frame === 0 ? frame : frame - 1];\n\t                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n\t                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\t                if (isValueArray) {\n\t                    catmullRomInterpolateArray(\n\t                        p0, p1, p2, p3, w, w * w, w * w * w,\n\t                        getter(target, propName),\n\t                        arrDim\n\t                    );\n\t                }\n\t                else {\n\t                    var value;\n\t                    if (isValueColor) {\n\t                        value = catmullRomInterpolateArray(\n\t                            p0, p1, p2, p3, w, w * w, w * w * w,\n\t                            rgba, 1\n\t                        );\n\t                        value = rgba2String(rgba);\n\t                    }\n\t                    else if (isValueString) {\n\t                        // String is step(0.5)\n\t                        return interpolateString(p1, p2, w);\n\t                    }\n\t                    else {\n\t                        value = catmullRomInterpolate(\n\t                            p0, p1, p2, p3, w, w * w, w * w * w\n\t                        );\n\t                    }\n\t                    setter(\n\t                        target,\n\t                        propName,\n\t                        value\n\t                    );\n\t                }\n\t            }\n\t            else {\n\t                if (isValueArray) {\n\t                    interpolateArray(\n\t                        kfValues[frame], kfValues[frame + 1], w,\n\t                        getter(target, propName),\n\t                        arrDim\n\t                    );\n\t                }\n\t                else {\n\t                    var value;\n\t                    if (isValueColor) {\n\t                        interpolateArray(\n\t                            kfValues[frame], kfValues[frame + 1], w,\n\t                            rgba, 1\n\t                        );\n\t                        value = rgba2String(rgba);\n\t                    }\n\t                    else if (isValueString) {\n\t                        // String is step(0.5)\n\t                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n\t                    }\n\t                    else {\n\t                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n\t                    }\n\t                    setter(\n\t                        target,\n\t                        propName,\n\t                        value\n\t                    );\n\t                }\n\t            }\n\t        };\n\t\n\t        var clip = new Clip({\n\t            target: animator._target,\n\t            life: trackMaxTime,\n\t            loop: animator._loop,\n\t            delay: animator._delay,\n\t            onframe: onframe,\n\t            ondestroy: oneTrackDone\n\t        });\n\t\n\t        if (easing && easing !== 'spline') {\n\t            clip.easing = easing;\n\t        }\n\t\n\t        return clip;\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/animation/Animator\n\t     * @constructor\n\t     * @param {Object} target\n\t     * @param {boolean} loop\n\t     * @param {Function} getter\n\t     * @param {Function} setter\n\t     */\n\t    var Animator = function(target, loop, getter, setter) {\n\t        this._tracks = {};\n\t        this._target = target;\n\t\n\t        this._loop = loop || false;\n\t\n\t        this._getter = getter || defaultGetter;\n\t        this._setter = setter || defaultSetter;\n\t\n\t        this._clipCount = 0;\n\t\n\t        this._delay = 0;\n\t\n\t        this._doneList = [];\n\t\n\t        this._onframeList = [];\n\t\n\t        this._clipList = [];\n\t    };\n\t\n\t    Animator.prototype = {\n\t        /**\n\t         * 设置动画关键帧\n\t         * @param  {number} time 关键帧时间，单位是ms\n\t         * @param  {Object} props 关键帧的属性值，key-value表示\n\t         * @return {module:zrender/animation/Animator}\n\t         */\n\t        when: function(time /* ms */, props) {\n\t            var tracks = this._tracks;\n\t            for (var propName in props) {\n\t                if (!props.hasOwnProperty(propName)) {\n\t                    continue;\n\t                }\n\t\n\t                if (!tracks[propName]) {\n\t                    tracks[propName] = [];\n\t                    // Invalid value\n\t                    var value = this._getter(this._target, propName);\n\t                    if (value == null) {\n\t                        // zrLog('Invalid property ' + propName);\n\t                        continue;\n\t                    }\n\t                    // If time is 0\n\t                    //  Then props is given initialize value\n\t                    // Else\n\t                    //  Initialize value from current prop value\n\t                    if (time !== 0) {\n\t                        tracks[propName].push({\n\t                            time: 0,\n\t                            value: cloneValue(value)\n\t                        });\n\t                    }\n\t                }\n\t                tracks[propName].push({\n\t                    time: time,\n\t                    value: props[propName]\n\t                });\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * 添加动画每一帧的回调函数\n\t         * @param  {Function} callback\n\t         * @return {module:zrender/animation/Animator}\n\t         */\n\t        during: function (callback) {\n\t            this._onframeList.push(callback);\n\t            return this;\n\t        },\n\t\n\t        _doneCallback: function () {\n\t            // Clear all tracks\n\t            this._tracks = {};\n\t            // Clear all clips\n\t            this._clipList.length = 0;\n\t\n\t            var doneList = this._doneList;\n\t            var len = doneList.length;\n\t            for (var i = 0; i < len; i++) {\n\t                doneList[i].call(this);\n\t            }\n\t        },\n\t        /**\n\t         * 开始执行动画\n\t         * @param  {string|Function} easing\n\t         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n\t         * @return {module:zrender/animation/Animator}\n\t         */\n\t        start: function (easing) {\n\t\n\t            var self = this;\n\t            var clipCount = 0;\n\t\n\t            var oneTrackDone = function() {\n\t                clipCount--;\n\t                if (!clipCount) {\n\t                    self._doneCallback();\n\t                }\n\t            };\n\t\n\t            var lastClip;\n\t            for (var propName in this._tracks) {\n\t                if (!this._tracks.hasOwnProperty(propName)) {\n\t                    continue;\n\t                }\n\t                var clip = createTrackClip(\n\t                    this, easing, oneTrackDone,\n\t                    this._tracks[propName], propName\n\t                );\n\t                if (clip) {\n\t                    this._clipList.push(clip);\n\t                    clipCount++;\n\t\n\t                    // If start after added to animation\n\t                    if (this.animation) {\n\t                        this.animation.addClip(clip);\n\t                    }\n\t\n\t                    lastClip = clip;\n\t                }\n\t            }\n\t\n\t            // Add during callback on the last clip\n\t            if (lastClip) {\n\t                var oldOnFrame = lastClip.onframe;\n\t                lastClip.onframe = function (target, percent) {\n\t                    oldOnFrame(target, percent);\n\t\n\t                    for (var i = 0; i < self._onframeList.length; i++) {\n\t                        self._onframeList[i](target, percent);\n\t                    }\n\t                };\n\t            }\n\t\n\t            if (!clipCount) {\n\t                this._doneCallback();\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * 停止动画\n\t         * @param {boolean} forwardToLast If move to last frame before stop\n\t         */\n\t        stop: function (forwardToLast) {\n\t            var clipList = this._clipList;\n\t            var animation = this.animation;\n\t            for (var i = 0; i < clipList.length; i++) {\n\t                var clip = clipList[i];\n\t                if (forwardToLast) {\n\t                    // Move to last frame before stop\n\t                    clip.onframe(this._target, 1);\n\t                }\n\t                animation && animation.removeClip(clip);\n\t            }\n\t            clipList.length = 0;\n\t        },\n\t        /**\n\t         * 设置动画延迟开始的时间\n\t         * @param  {number} time 单位ms\n\t         * @return {module:zrender/animation/Animator}\n\t         */\n\t        delay: function (time) {\n\t            this._delay = time;\n\t            return this;\n\t        },\n\t        /**\n\t         * 添加动画结束的回调\n\t         * @param  {Function} cb\n\t         * @return {module:zrender/animation/Animator}\n\t         */\n\t        done: function(cb) {\n\t            if (cb) {\n\t                this._doneList.push(cb);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @return {Array.<module:zrender/animation/Clip>}\n\t         */\n\t        getClips: function () {\n\t            return this._clipList;\n\t        }\n\t    };\n\t\n\t    module.exports = Animator;\n\n\n/***/ },\n/* 519 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 动画主控制器\n\t * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n\t * @config life(1000) 动画时长\n\t * @config delay(0) 动画延迟时间\n\t * @config loop(true)\n\t * @config gap(0) 循环的间隔时间\n\t * @config onframe\n\t * @config easing(optional)\n\t * @config ondestroy(optional)\n\t * @config onrestart(optional)\n\t *\n\t * TODO pause\n\t */\n\t\n\t\n\t    var easingFuncs = __webpack_require__(520);\n\t\n\t    function Clip(options) {\n\t\n\t        this._target = options.target;\n\t\n\t        // 生命周期\n\t        this._life = options.life || 1000;\n\t        // 延时\n\t        this._delay = options.delay || 0;\n\t        // 开始时间\n\t        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\t        this._initialized = false;\n\t\n\t        // 是否循环\n\t        this.loop = options.loop == null ? false : options.loop;\n\t\n\t        this.gap = options.gap || 0;\n\t\n\t        this.easing = options.easing || 'Linear';\n\t\n\t        this.onframe = options.onframe;\n\t        this.ondestroy = options.ondestroy;\n\t        this.onrestart = options.onrestart;\n\t    }\n\t\n\t    Clip.prototype = {\n\t\n\t        constructor: Clip,\n\t\n\t        step: function (globalTime) {\n\t            // Set startTime on first step, or _startTime may has milleseconds different between clips\n\t            // PENDING\n\t            if (!this._initialized) {\n\t                this._startTime = globalTime + this._delay;\n\t                this._initialized = true;\n\t            }\n\t\n\t            var percent = (globalTime - this._startTime) / this._life;\n\t\n\t            // 还没开始\n\t            if (percent < 0) {\n\t                return;\n\t            }\n\t\n\t            percent = Math.min(percent, 1);\n\t\n\t            var easing = this.easing;\n\t            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n\t            var schedule = typeof easingFunc === 'function'\n\t                ? easingFunc(percent)\n\t                : percent;\n\t\n\t            this.fire('frame', schedule);\n\t\n\t            // 结束\n\t            if (percent == 1) {\n\t                if (this.loop) {\n\t                    this.restart (globalTime);\n\t                    // 重新开始周期\n\t                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\t                    return 'restart';\n\t                }\n\t\n\t                // 动画完成将这个控制器标识为待删除\n\t                // 在Animation.update中进行批量删除\n\t                this._needsRemove = true;\n\t                return 'destroy';\n\t            }\n\t\n\t            return null;\n\t        },\n\t\n\t        restart: function (globalTime) {\n\t            var remainder = (globalTime - this._startTime) % this._life;\n\t            this._startTime = globalTime - remainder + this.gap;\n\t\n\t            this._needsRemove = false;\n\t        },\n\t\n\t        fire: function(eventType, arg) {\n\t            eventType = 'on' + eventType;\n\t            if (this[eventType]) {\n\t                this[eventType](this._target, arg);\n\t            }\n\t        }\n\t    };\n\t\n\t    module.exports = Clip;\n\t\n\n\n/***/ },\n/* 520 */\n/***/ function(module, exports) {\n\n\t/**\n\t * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n\t * @see http://sole.github.io/tween.js/examples/03_graphs.html\n\t * @exports zrender/animation/easing\n\t */\n\t\n\t    var easing = {\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        linear: function (k) {\n\t            return k;\n\t        },\n\t\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quadraticIn: function (k) {\n\t            return k * k;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quadraticOut: function (k) {\n\t            return k * (2 - k);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quadraticInOut: function (k) {\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * k * k;\n\t            }\n\t            return -0.5 * (--k * (k - 2) - 1);\n\t        },\n\t\n\t        // 三次方的缓动（t^3）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        cubicIn: function (k) {\n\t            return k * k * k;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        cubicOut: function (k) {\n\t            return --k * k * k + 1;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        cubicInOut: function (k) {\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * k * k * k;\n\t            }\n\t            return 0.5 * ((k -= 2) * k * k + 2);\n\t        },\n\t\n\t        // 四次方的缓动（t^4）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quarticIn: function (k) {\n\t            return k * k * k * k;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quarticOut: function (k) {\n\t            return 1 - (--k * k * k * k);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quarticInOut: function (k) {\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * k * k * k * k;\n\t            }\n\t            return -0.5 * ((k -= 2) * k * k * k - 2);\n\t        },\n\t\n\t        // 五次方的缓动（t^5）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quinticIn: function (k) {\n\t            return k * k * k * k * k;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quinticOut: function (k) {\n\t            return --k * k * k * k * k + 1;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quinticInOut: function (k) {\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * k * k * k * k * k;\n\t            }\n\t            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n\t        },\n\t\n\t        // 正弦曲线的缓动（sin(t)）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        sinusoidalIn: function (k) {\n\t            return 1 - Math.cos(k * Math.PI / 2);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        sinusoidalOut: function (k) {\n\t            return Math.sin(k * Math.PI / 2);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        sinusoidalInOut: function (k) {\n\t            return 0.5 * (1 - Math.cos(Math.PI * k));\n\t        },\n\t\n\t        // 指数曲线的缓动（2^t）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        exponentialIn: function (k) {\n\t            return k === 0 ? 0 : Math.pow(1024, k - 1);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        exponentialOut: function (k) {\n\t            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        exponentialInOut: function (k) {\n\t            if (k === 0) {\n\t                return 0;\n\t            }\n\t            if (k === 1) {\n\t                return 1;\n\t            }\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * Math.pow(1024, k - 1);\n\t            }\n\t            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n\t        },\n\t\n\t        // 圆形曲线的缓动（sqrt(1-t^2)）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        circularIn: function (k) {\n\t            return 1 - Math.sqrt(1 - k * k);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        circularOut: function (k) {\n\t            return Math.sqrt(1 - (--k * k));\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        circularInOut: function (k) {\n\t            if ((k *= 2) < 1) {\n\t                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n\t            }\n\t            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t        },\n\t\n\t        // 创建类似于弹簧在停止前来回振荡的动画\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        elasticIn: function (k) {\n\t            var s;\n\t            var a = 0.1;\n\t            var p = 0.4;\n\t            if (k === 0) {\n\t                return 0;\n\t            }\n\t            if (k === 1) {\n\t                return 1;\n\t            }\n\t            if (!a || a < 1) {\n\t                a = 1; s = p / 4;\n\t            }\n\t            else {\n\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\n\t            }\n\t            return -(a * Math.pow(2, 10 * (k -= 1)) *\n\t                        Math.sin((k - s) * (2 * Math.PI) / p));\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        elasticOut: function (k) {\n\t            var s;\n\t            var a = 0.1;\n\t            var p = 0.4;\n\t            if (k === 0) {\n\t                return 0;\n\t            }\n\t            if (k === 1) {\n\t                return 1;\n\t            }\n\t            if (!a || a < 1) {\n\t                a = 1; s = p / 4;\n\t            }\n\t            else {\n\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\n\t            }\n\t            return (a * Math.pow(2, -10 * k) *\n\t                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        elasticInOut: function (k) {\n\t            var s;\n\t            var a = 0.1;\n\t            var p = 0.4;\n\t            if (k === 0) {\n\t                return 0;\n\t            }\n\t            if (k === 1) {\n\t                return 1;\n\t            }\n\t            if (!a || a < 1) {\n\t                a = 1; s = p / 4;\n\t            }\n\t            else {\n\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\n\t            }\n\t            if ((k *= 2) < 1) {\n\t                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n\t                    * Math.sin((k - s) * (2 * Math.PI) / p));\n\t            }\n\t            return a * Math.pow(2, -10 * (k -= 1))\n\t                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\n\t        },\n\t\n\t        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        backIn: function (k) {\n\t            var s = 1.70158;\n\t            return k * k * ((s + 1) * k - s);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        backOut: function (k) {\n\t            var s = 1.70158;\n\t            return --k * k * ((s + 1) * k + s) + 1;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        backInOut: function (k) {\n\t            var s = 1.70158 * 1.525;\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * (k * k * ((s + 1) * k - s));\n\t            }\n\t            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t        },\n\t\n\t        // 创建弹跳效果\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        bounceIn: function (k) {\n\t            return 1 - easing.bounceOut(1 - k);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        bounceOut: function (k) {\n\t            if (k < (1 / 2.75)) {\n\t                return 7.5625 * k * k;\n\t            }\n\t            else if (k < (2 / 2.75)) {\n\t                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t            }\n\t            else if (k < (2.5 / 2.75)) {\n\t                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t            }\n\t            else {\n\t                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t            }\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        bounceInOut: function (k) {\n\t            if (k < 0.5) {\n\t                return easing.bounceIn(k * 2) * 0.5;\n\t            }\n\t            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n\t        }\n\t    };\n\t\n\t    module.exports = easing;\n\t\n\t\n\n\n/***/ },\n/* 521 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @module zrender/tool/color\n\t */\n\t\n\t\n\t    var kCSSColorTable = {\n\t        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n\t        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n\t        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n\t        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n\t        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n\t        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n\t        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n\t        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n\t        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n\t        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n\t        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n\t        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n\t        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n\t        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n\t        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n\t        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n\t        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n\t        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n\t        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n\t        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n\t        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n\t        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n\t        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n\t        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n\t        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n\t        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n\t        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n\t        'gray': [128,128,128,1], 'green': [0,128,0,1],\n\t        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n\t        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n\t        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n\t        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n\t        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n\t        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n\t        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n\t        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n\t        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n\t        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n\t        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n\t        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n\t        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n\t        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n\t        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n\t        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n\t        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n\t        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n\t        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n\t        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n\t        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n\t        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n\t        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n\t        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n\t        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n\t        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n\t        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n\t        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n\t        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n\t        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n\t        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n\t        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n\t        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n\t        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n\t        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n\t        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n\t        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n\t        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n\t        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n\t        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n\t        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n\t        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n\t        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n\t        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n\t        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n\t        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n\t    };\n\t\n\t    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n\t        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n\t        return i < 0 ? 0 : i > 255 ? 255 : i;\n\t    }\n\t\n\t    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n\t        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n\t        return i < 0 ? 0 : i > 360 ? 360 : i;\n\t    }\n\t\n\t    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n\t        return f < 0 ? 0 : f > 1 ? 1 : f;\n\t    }\n\t\n\t    function parseCssInt(str) {  // int or percentage.\n\t        if (str.length && str.charAt(str.length - 1) === '%') {\n\t            return clampCssByte(parseFloat(str) / 100 * 255);\n\t        }\n\t        return clampCssByte(parseInt(str, 10));\n\t    }\n\t\n\t    function parseCssFloat(str) {  // float or percentage.\n\t        if (str.length && str.charAt(str.length - 1) === '%') {\n\t            return clampCssFloat(parseFloat(str) / 100);\n\t        }\n\t        return clampCssFloat(parseFloat(str));\n\t    }\n\t\n\t    function cssHueToRgb(m1, m2, h) {\n\t        if (h < 0) {\n\t            h += 1;\n\t        }\n\t        else if (h > 1) {\n\t            h -= 1;\n\t        }\n\t\n\t        if (h * 6 < 1) {\n\t            return m1 + (m2 - m1) * h * 6;\n\t        }\n\t        if (h * 2 < 1) {\n\t            return m2;\n\t        }\n\t        if (h * 3 < 2) {\n\t            return m1 + (m2 - m1) * (2/3 - h) * 6;\n\t        }\n\t        return m1;\n\t    }\n\t\n\t    function lerp(a, b, p) {\n\t        return a + (b - a) * p;\n\t    }\n\t\n\t    /**\n\t     * @param {string} colorStr\n\t     * @return {Array.<number>}\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function parse(colorStr) {\n\t        if (!colorStr) {\n\t            return;\n\t        }\n\t        // colorStr may be not string\n\t        colorStr = colorStr + '';\n\t        // Remove all whitespace, not compliant, but should just be more accepting.\n\t        var str = colorStr.replace(/ /g, '').toLowerCase();\n\t\n\t        // Color keywords (and transparent) lookup.\n\t        if (str in kCSSColorTable) {\n\t            return kCSSColorTable[str].slice();  // dup.\n\t        }\n\t\n\t        // #abc and #abc123 syntax.\n\t        if (str.charAt(0) === '#') {\n\t            if (str.length === 4) {\n\t                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n\t                if (!(iv >= 0 && iv <= 0xfff)) {\n\t                    return;  // Covers NaN.\n\t                }\n\t                return [\n\t                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n\t                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n\t                    (iv & 0xf) | ((iv & 0xf) << 4),\n\t                    1\n\t                ];\n\t            }\n\t            else if (str.length === 7) {\n\t                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n\t                if (!(iv >= 0 && iv <= 0xffffff)) {\n\t                    return;  // Covers NaN.\n\t                }\n\t                return [\n\t                    (iv & 0xff0000) >> 16,\n\t                    (iv & 0xff00) >> 8,\n\t                    iv & 0xff,\n\t                    1\n\t                ];\n\t            }\n\t\n\t            return;\n\t        }\n\t        var op = str.indexOf('('), ep = str.indexOf(')');\n\t        if (op !== -1 && ep + 1 === str.length) {\n\t            var fname = str.substr(0, op);\n\t            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n\t            var alpha = 1;  // To allow case fallthrough.\n\t            switch (fname) {\n\t                case 'rgba':\n\t                    if (params.length !== 4) {\n\t                        return;\n\t                    }\n\t                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n\t                // Fall through.\n\t                case 'rgb':\n\t                    if (params.length !== 3) {\n\t                        return;\n\t                    }\n\t                    return [\n\t                        parseCssInt(params[0]),\n\t                        parseCssInt(params[1]),\n\t                        parseCssInt(params[2]),\n\t                        alpha\n\t                    ];\n\t                case 'hsla':\n\t                    if (params.length !== 4) {\n\t                        return;\n\t                    }\n\t                    params[3] = parseCssFloat(params[3]);\n\t                    return hsla2rgba(params);\n\t                case 'hsl':\n\t                    if (params.length !== 3) {\n\t                        return;\n\t                    }\n\t                    return hsla2rgba(params);\n\t                default:\n\t                    return;\n\t            }\n\t        }\n\t\n\t        return;\n\t    }\n\t\n\t    /**\n\t     * @param {Array.<number>} hsla\n\t     * @return {Array.<number>} rgba\n\t     */\n\t    function hsla2rgba(hsla) {\n\t        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n\t        // NOTE(deanm): According to the CSS spec s/l should only be\n\t        // percentages, but we don't bother and let float or percentage.\n\t        var s = parseCssFloat(hsla[1]);\n\t        var l = parseCssFloat(hsla[2]);\n\t        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n\t        var m1 = l * 2 - m2;\n\t\n\t        var rgba = [\n\t            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n\t            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n\t            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)\n\t        ];\n\t\n\t        if (hsla.length === 4) {\n\t            rgba[3] = hsla[3];\n\t        }\n\t\n\t        return rgba;\n\t    }\n\t\n\t    /**\n\t     * @param {Array.<number>} rgba\n\t     * @return {Array.<number>} hsla\n\t     */\n\t    function rgba2hsla(rgba) {\n\t        if (!rgba) {\n\t            return;\n\t        }\n\t\n\t        // RGB from 0 to 255\n\t        var R = rgba[0] / 255;\n\t        var G = rgba[1] / 255;\n\t        var B = rgba[2] / 255;\n\t\n\t        var vMin = Math.min(R, G, B); // Min. value of RGB\n\t        var vMax = Math.max(R, G, B); // Max. value of RGB\n\t        var delta = vMax - vMin; // Delta RGB value\n\t\n\t        var L = (vMax + vMin) / 2;\n\t        var H;\n\t        var S;\n\t        // HSL results from 0 to 1\n\t        if (delta === 0) {\n\t            H = 0;\n\t            S = 0;\n\t        }\n\t        else {\n\t            if (L < 0.5) {\n\t                S = delta / (vMax + vMin);\n\t            }\n\t            else {\n\t                S = delta / (2 - vMax - vMin);\n\t            }\n\t\n\t            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n\t            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n\t            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\t\n\t            if (R === vMax) {\n\t                H = deltaB - deltaG;\n\t            }\n\t            else if (G === vMax) {\n\t                H = (1 / 3) + deltaR - deltaB;\n\t            }\n\t            else if (B === vMax) {\n\t                H = (2 / 3) + deltaG - deltaR;\n\t            }\n\t\n\t            if (H < 0) {\n\t                H += 1;\n\t            }\n\t\n\t            if (H > 1) {\n\t                H -= 1;\n\t            }\n\t        }\n\t\n\t        var hsla = [H * 360, S, L];\n\t\n\t        if (rgba[3] != null) {\n\t            hsla.push(rgba[3]);\n\t        }\n\t\n\t        return hsla;\n\t    }\n\t\n\t    /**\n\t     * @param {string} color\n\t     * @param {number} level\n\t     * @return {string}\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function lift(color, level) {\n\t        var colorArr = parse(color);\n\t        if (colorArr) {\n\t            for (var i = 0; i < 3; i++) {\n\t                if (level < 0) {\n\t                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n\t                }\n\t                else {\n\t                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n\t                }\n\t            }\n\t            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param {string} color\n\t     * @return {string}\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function toHex(color, level) {\n\t        var colorArr = parse(color);\n\t        if (colorArr) {\n\t            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Map value to color. Faster than mapToColor methods because color is represented by rgba array\n\t     * @param {number} normalizedValue A float between 0 and 1.\n\t     * @param {Array.<Array.<number>>} colors List of rgba color array\n\t     * @param {Array.<number>} [out] Mapped gba color array\n\t     * @return {Array.<number>}\n\t     */\n\t    function fastMapToColor(normalizedValue, colors, out) {\n\t        if (!(colors && colors.length)\n\t            || !(normalizedValue >= 0 && normalizedValue <= 1)\n\t        ) {\n\t            return;\n\t        }\n\t        out = out || [0, 0, 0, 0];\n\t        var value = normalizedValue * (colors.length - 1);\n\t        var leftIndex = Math.floor(value);\n\t        var rightIndex = Math.ceil(value);\n\t        var leftColor = colors[leftIndex];\n\t        var rightColor = colors[rightIndex];\n\t        var dv = value - leftIndex;\n\t        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n\t        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n\t        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n\t        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));\n\t        return out;\n\t    }\n\t    /**\n\t     * @param {number} normalizedValue A float between 0 and 1.\n\t     * @param {Array.<string>} colors Color list.\n\t     * @param {boolean=} fullOutput Default false.\n\t     * @return {(string|Object)} Result color. If fullOutput,\n\t     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function mapToColor(normalizedValue, colors, fullOutput) {\n\t        if (!(colors && colors.length)\n\t            || !(normalizedValue >= 0 && normalizedValue <= 1)\n\t        ) {\n\t            return;\n\t        }\n\t\n\t        var value = normalizedValue * (colors.length - 1);\n\t        var leftIndex = Math.floor(value);\n\t        var rightIndex = Math.ceil(value);\n\t        var leftColor = parse(colors[leftIndex]);\n\t        var rightColor = parse(colors[rightIndex]);\n\t        var dv = value - leftIndex;\n\t\n\t        var color = stringify(\n\t            [\n\t                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n\t                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n\t                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n\t                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n\t            ],\n\t            'rgba'\n\t        );\n\t\n\t        return fullOutput\n\t            ? {\n\t                color: color,\n\t                leftIndex: leftIndex,\n\t                rightIndex: rightIndex,\n\t                value: value\n\t            }\n\t            : color;\n\t    }\n\t\n\t    /**\n\t     * @param {string} color\n\t     * @param {number=} h 0 ~ 360, ignore when null.\n\t     * @param {number=} s 0 ~ 1, ignore when null.\n\t     * @param {number=} l 0 ~ 1, ignore when null.\n\t     * @return {string} Color string in rgba format.\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function modifyHSL(color, h, s, l) {\n\t        color = parse(color);\n\t\n\t        if (color) {\n\t            color = rgba2hsla(color);\n\t            h != null && (color[0] = clampCssAngle(h));\n\t            s != null && (color[1] = parseCssFloat(s));\n\t            l != null && (color[2] = parseCssFloat(l));\n\t\n\t            return stringify(hsla2rgba(color), 'rgba');\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param {string} color\n\t     * @param {number=} alpha 0 ~ 1\n\t     * @return {string} Color string in rgba format.\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function modifyAlpha(color, alpha) {\n\t        color = parse(color);\n\t\n\t        if (color && alpha != null) {\n\t            color[3] = clampCssFloat(alpha);\n\t            return stringify(color, 'rgba');\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param {Array.<string>} colors Color list.\n\t     * @param {string} type 'rgba', 'hsva', ...\n\t     * @return {string} Result color.\n\t     */\n\t    function stringify(arrColor, type) {\n\t        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\t        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n\t            colorStr += ',' + arrColor[3];\n\t        }\n\t        return type + '(' + colorStr + ')';\n\t    }\n\t\n\t    module.exports = {\n\t        parse: parse,\n\t        lift: lift,\n\t        toHex: toHex,\n\t        fastMapToColor: fastMapToColor,\n\t        mapToColor: mapToColor,\n\t        modifyHSL: modifyHSL,\n\t        modifyAlpha: modifyAlpha,\n\t        stringify: stringify\n\t    };\n\t\n\t\n\n\n/***/ },\n/* 522 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t        var config = __webpack_require__(523);\n\t\n\t        /**\n\t         * @exports zrender/tool/log\n\t         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t         */\n\t        module.exports = function() {\n\t            if (config.debugMode === 0) {\n\t                return;\n\t            }\n\t            else if (config.debugMode == 1) {\n\t                for (var k in arguments) {\n\t                    throw new Error(arguments[k]);\n\t                }\n\t            }\n\t            else if (config.debugMode > 1) {\n\t                for (var k in arguments) {\n\t                    console.log(arguments[k]);\n\t                }\n\t            }\n\t        };\n\t\n\t        /* for debug\n\t        return function(mes) {\n\t            document.getElementById('wrong-message').innerHTML =\n\t                mes + ' ' + (new Date() - 0)\n\t                + '<br/>'\n\t                + document.getElementById('wrong-message').innerHTML;\n\t        };\n\t        */\n\t    \n\n\n/***/ },\n/* 523 */\n/***/ function(module, exports) {\n\n\t\n\t    var dpr = 1;\n\t    // If in browser environment\n\t    if (typeof window !== 'undefined') {\n\t        dpr = Math.max(window.devicePixelRatio || 1, 1);\n\t    }\n\t    /**\n\t     * config默认配置项\n\t     * @exports zrender/config\n\t     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t     */\n\t    var config = {\n\t        /**\n\t         * debug日志选项：catchBrushException为true下有效\n\t         * 0 : 不生成debug数据，发布用\n\t         * 1 : 异常抛出，调试用\n\t         * 2 : 控制台输出，调试用\n\t         */\n\t        debugMode: 0,\n\t\n\t        // retina 屏幕优化\n\t        devicePixelRatio: dpr\n\t    };\n\t    module.exports = config;\n\t\n\t\n\n\n/***/ },\n/* 524 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var Group = __webpack_require__(512);\n\t    var componentUtil = __webpack_require__(502);\n\t    var clazzUtil = __webpack_require__(495);\n\t    var modelUtil = __webpack_require__(487);\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    function Chart() {\n\t\n\t        /**\n\t         * @type {module:zrender/container/Group}\n\t         * @readOnly\n\t         */\n\t        this.group = new Group();\n\t\n\t        /**\n\t         * @type {string}\n\t         * @readOnly\n\t         */\n\t        this.uid = componentUtil.getUID('viewChart');\n\t    }\n\t\n\t    Chart.prototype = {\n\t\n\t        type: 'chart',\n\t\n\t        /**\n\t         * Init the chart\n\t         * @param  {module:echarts/model/Global} ecModel\n\t         * @param  {module:echarts/ExtensionAPI} api\n\t         */\n\t        init: function (ecModel, api) {},\n\t\n\t        /**\n\t         * Render the chart\n\t         * @param  {module:echarts/model/Series} seriesModel\n\t         * @param  {module:echarts/model/Global} ecModel\n\t         * @param  {module:echarts/ExtensionAPI} api\n\t         * @param  {Object} payload\n\t         */\n\t        render: function (seriesModel, ecModel, api, payload) {},\n\t\n\t        /**\n\t         * Highlight series or specified data item\n\t         * @param  {module:echarts/model/Series} seriesModel\n\t         * @param  {module:echarts/model/Global} ecModel\n\t         * @param  {module:echarts/ExtensionAPI} api\n\t         * @param  {Object} payload\n\t         */\n\t        highlight: function (seriesModel, ecModel, api, payload) {\n\t            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n\t        },\n\t\n\t        /**\n\t         * Downplay series or specified data item\n\t         * @param  {module:echarts/model/Series} seriesModel\n\t         * @param  {module:echarts/model/Global} ecModel\n\t         * @param  {module:echarts/ExtensionAPI} api\n\t         * @param  {Object} payload\n\t         */\n\t        downplay: function (seriesModel, ecModel, api, payload) {\n\t            toggleHighlight(seriesModel.getData(), payload, 'normal');\n\t        },\n\t\n\t        /**\n\t         * Remove self\n\t         * @param  {module:echarts/model/Global} ecModel\n\t         * @param  {module:echarts/ExtensionAPI} api\n\t         */\n\t        remove: function (ecModel, api) {\n\t            this.group.removeAll();\n\t        },\n\t\n\t        /**\n\t         * Dispose self\n\t         * @param  {module:echarts/model/Global} ecModel\n\t         * @param  {module:echarts/ExtensionAPI} api\n\t         */\n\t        dispose: function () {}\n\t\n\t        /**\n\t         * The view contains the given point.\n\t         * @interface\n\t         * @param {Array.<number>} point\n\t         * @return {boolean}\n\t         */\n\t        // containPoint: function () {}\n\t\n\t    };\n\t\n\t    var chartProto = Chart.prototype;\n\t    chartProto.updateView\n\t        = chartProto.updateLayout\n\t        = chartProto.updateVisual\n\t        = function (seriesModel, ecModel, api, payload) {\n\t            this.render(seriesModel, ecModel, api, payload);\n\t        };\n\t\n\t    /**\n\t     * Set state of single element\n\t     * @param  {module:zrender/Element} el\n\t     * @param  {string} state\n\t     */\n\t    function elSetState(el, state) {\n\t        if (el) {\n\t            el.trigger(state);\n\t            if (el.type === 'group') {\n\t                for (var i = 0; i < el.childCount(); i++) {\n\t                    elSetState(el.childAt(i), state);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    /**\n\t     * @param  {module:echarts/data/List} data\n\t     * @param  {Object} payload\n\t     * @param  {string} state 'normal'|'emphasis'\n\t     * @inner\n\t     */\n\t    function toggleHighlight(data, payload, state) {\n\t        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\t\n\t        if (dataIndex != null) {\n\t            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n\t                elSetState(data.getItemGraphicEl(dataIdx), state);\n\t            });\n\t        }\n\t        else {\n\t            data.eachItemGraphicEl(function (el) {\n\t                elSetState(el, state);\n\t            });\n\t        }\n\t    }\n\t\n\t    // Enable Chart.extend.\n\t    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\t\n\t    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\t    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\t\n\t    module.exports = Chart;\n\n\n/***/ },\n/* 525 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var pathTool = __webpack_require__(526);\n\t    var round = Math.round;\n\t    var Path = __webpack_require__(527);\n\t    var colorTool = __webpack_require__(521);\n\t    var matrix = __webpack_require__(493);\n\t    var vector = __webpack_require__(492);\n\t\n\t    var graphic = {};\n\t\n\t    graphic.Group = __webpack_require__(512);\n\t\n\t    graphic.Image = __webpack_require__(543);\n\t\n\t    graphic.Text = __webpack_require__(545);\n\t\n\t    graphic.Circle = __webpack_require__(546);\n\t\n\t    graphic.Sector = __webpack_require__(547);\n\t\n\t    graphic.Ring = __webpack_require__(548);\n\t\n\t    graphic.Polygon = __webpack_require__(549);\n\t\n\t    graphic.Polyline = __webpack_require__(553);\n\t\n\t    graphic.Rect = __webpack_require__(554);\n\t\n\t    graphic.Line = __webpack_require__(556);\n\t\n\t    graphic.BezierCurve = __webpack_require__(557);\n\t\n\t    graphic.Arc = __webpack_require__(558);\n\t\n\t    graphic.CompoundPath = __webpack_require__(559);\n\t\n\t    graphic.LinearGradient = __webpack_require__(560);\n\t\n\t    graphic.RadialGradient = __webpack_require__(562);\n\t\n\t    graphic.BoundingRect = __webpack_require__(491);\n\t\n\t    /**\n\t     * Extend shape with parameters\n\t     */\n\t    graphic.extendShape = function (opts) {\n\t        return Path.extend(opts);\n\t    };\n\t\n\t    /**\n\t     * Extend path\n\t     */\n\t    graphic.extendPath = function (pathData, opts) {\n\t        return pathTool.extendFromString(pathData, opts);\n\t    };\n\t\n\t    /**\n\t     * Create a path element from path data string\n\t     * @param {string} pathData\n\t     * @param {Object} opts\n\t     * @param {module:zrender/core/BoundingRect} rect\n\t     * @param {string} [layout=cover] 'center' or 'cover'\n\t     */\n\t    graphic.makePath = function (pathData, opts, rect, layout) {\n\t        var path = pathTool.createFromString(pathData, opts);\n\t        var boundingRect = path.getBoundingRect();\n\t        if (rect) {\n\t            var aspect = boundingRect.width / boundingRect.height;\n\t\n\t            if (layout === 'center') {\n\t                // Set rect to center, keep width / height ratio.\n\t                var width = rect.height * aspect;\n\t                var height;\n\t                if (width <= rect.width) {\n\t                    height = rect.height;\n\t                }\n\t                else {\n\t                    width = rect.width;\n\t                    height = width / aspect;\n\t                }\n\t                var cx = rect.x + rect.width / 2;\n\t                var cy = rect.y + rect.height / 2;\n\t\n\t                rect.x = cx - width / 2;\n\t                rect.y = cy - height / 2;\n\t                rect.width = width;\n\t                rect.height = height;\n\t            }\n\t\n\t            this.resizePath(path, rect);\n\t        }\n\t        return path;\n\t    };\n\t\n\t    graphic.mergePath = pathTool.mergePath,\n\t\n\t    /**\n\t     * Resize a path to fit the rect\n\t     * @param {module:zrender/graphic/Path} path\n\t     * @param {Object} rect\n\t     */\n\t    graphic.resizePath = function (path, rect) {\n\t        if (!path.applyTransform) {\n\t            return;\n\t        }\n\t\n\t        var pathRect = path.getBoundingRect();\n\t\n\t        var m = pathRect.calculateTransform(rect);\n\t\n\t        path.applyTransform(m);\n\t    };\n\t\n\t    /**\n\t     * Sub pixel optimize line for canvas\n\t     *\n\t     * @param {Object} param\n\t     * @param {Object} [param.shape]\n\t     * @param {number} [param.shape.x1]\n\t     * @param {number} [param.shape.y1]\n\t     * @param {number} [param.shape.x2]\n\t     * @param {number} [param.shape.y2]\n\t     * @param {Object} [param.style]\n\t     * @param {number} [param.style.lineWidth]\n\t     * @return {Object} Modified param\n\t     */\n\t    graphic.subPixelOptimizeLine = function (param) {\n\t        var subPixelOptimize = graphic.subPixelOptimize;\n\t        var shape = param.shape;\n\t        var lineWidth = param.style.lineWidth;\n\t\n\t        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n\t            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n\t        }\n\t        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n\t            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n\t        }\n\t        return param;\n\t    };\n\t\n\t    /**\n\t     * Sub pixel optimize rect for canvas\n\t     *\n\t     * @param {Object} param\n\t     * @param {Object} [param.shape]\n\t     * @param {number} [param.shape.x]\n\t     * @param {number} [param.shape.y]\n\t     * @param {number} [param.shape.width]\n\t     * @param {number} [param.shape.height]\n\t     * @param {Object} [param.style]\n\t     * @param {number} [param.style.lineWidth]\n\t     * @return {Object} Modified param\n\t     */\n\t    graphic.subPixelOptimizeRect = function (param) {\n\t        var subPixelOptimize = graphic.subPixelOptimize;\n\t        var shape = param.shape;\n\t        var lineWidth = param.style.lineWidth;\n\t        var originX = shape.x;\n\t        var originY = shape.y;\n\t        var originWidth = shape.width;\n\t        var originHeight = shape.height;\n\t        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n\t        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n\t        shape.width = Math.max(\n\t            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n\t            originWidth === 0 ? 0 : 1\n\t        );\n\t        shape.height = Math.max(\n\t            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n\t            originHeight === 0 ? 0 : 1\n\t        );\n\t        return param;\n\t    };\n\t\n\t    /**\n\t     * Sub pixel optimize for canvas\n\t     *\n\t     * @param {number} position Coordinate, such as x, y\n\t     * @param {number} lineWidth Should be nonnegative integer.\n\t     * @param {boolean=} positiveOrNegative Default false (negative).\n\t     * @return {number} Optimized position.\n\t     */\n\t    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n\t        // Assure that (position + lineWidth / 2) is near integer edge,\n\t        // otherwise line will be fuzzy in canvas.\n\t        var doubledPosition = round(position * 2);\n\t        return (doubledPosition + round(lineWidth)) % 2 === 0\n\t            ? doubledPosition / 2\n\t            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n\t    };\n\t\n\t    function hasFillOrStroke(fillOrStroke) {\n\t        return fillOrStroke != null && fillOrStroke != 'none';\n\t    }\n\t\n\t    function liftColor(color) {\n\t        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    function cacheElementStl(el) {\n\t        if (el.__hoverStlDirty) {\n\t            var stroke = el.style.stroke;\n\t            var fill = el.style.fill;\n\t\n\t            // Create hoverStyle on mouseover\n\t            var hoverStyle = el.__hoverStl;\n\t            hoverStyle.fill = hoverStyle.fill\n\t                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n\t            hoverStyle.stroke = hoverStyle.stroke\n\t                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\t\n\t            var normalStyle = {};\n\t            for (var name in hoverStyle) {\n\t                if (hoverStyle.hasOwnProperty(name)) {\n\t                    normalStyle[name] = el.style[name];\n\t                }\n\t            }\n\t\n\t            el.__normalStl = normalStyle;\n\t\n\t            el.__hoverStlDirty = false;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    function doSingleEnterHover(el) {\n\t        if (el.__isHover) {\n\t            return;\n\t        }\n\t\n\t        cacheElementStl(el);\n\t\n\t        if (el.useHoverLayer) {\n\t            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n\t        }\n\t        else {\n\t            el.setStyle(el.__hoverStl);\n\t            el.z2 += 1;\n\t        }\n\t\n\t        el.__isHover = true;\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function doSingleLeaveHover(el) {\n\t        if (!el.__isHover) {\n\t            return;\n\t        }\n\t\n\t        var normalStl = el.__normalStl;\n\t        if (el.useHoverLayer) {\n\t            el.__zr && el.__zr.removeHover(el);\n\t        }\n\t        else {\n\t            normalStl && el.setStyle(normalStl);\n\t            el.z2 -= 1;\n\t        }\n\t\n\t        el.__isHover = false;\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function doEnterHover(el) {\n\t        el.type === 'group'\n\t            ? el.traverse(function (child) {\n\t                if (child.type !== 'group') {\n\t                    doSingleEnterHover(child);\n\t                }\n\t            })\n\t            : doSingleEnterHover(el);\n\t    }\n\t\n\t    function doLeaveHover(el) {\n\t        el.type === 'group'\n\t            ? el.traverse(function (child) {\n\t                if (child.type !== 'group') {\n\t                    doSingleLeaveHover(child);\n\t                }\n\t            })\n\t            : doSingleLeaveHover(el);\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function setElementHoverStl(el, hoverStl) {\n\t        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n\t        // Often used when item group has a label element and it's hoverStyle is different\n\t        el.__hoverStl = el.hoverStyle || hoverStl || {};\n\t        el.__hoverStlDirty = true;\n\t\n\t        if (el.__isHover) {\n\t            cacheElementStl(el);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function onElementMouseOver(e) {\n\t        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n\t            return;\n\t        }\n\t\n\t        // Only if element is not in emphasis status\n\t        !this.__isEmphasis && doEnterHover(this);\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function onElementMouseOut(e) {\n\t        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n\t            return;\n\t        }\n\t\n\t        // Only if element is not in emphasis status\n\t        !this.__isEmphasis && doLeaveHover(this);\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function enterEmphasis() {\n\t        this.__isEmphasis = true;\n\t        doEnterHover(this);\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function leaveEmphasis() {\n\t        this.__isEmphasis = false;\n\t        doLeaveHover(this);\n\t    }\n\t\n\t    /**\n\t     * Set hover style of element\n\t     * @param {module:zrender/Element} el\n\t     * @param {Object} [hoverStyle]\n\t     * @param {Object} [opt]\n\t     * @param {boolean} [opt.hoverSilentOnTouch=false]\n\t     *        In touch device, mouseover event will be trigger on touchstart event\n\t     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n\t     *        conviniently use hoverStyle when tap on touch screen without additional\n\t     *        code for compatibility.\n\t     *        But if the chart/component has select feature, which usually also use\n\t     *        hoverStyle, there might be conflict between 'select-highlight' and\n\t     *        'hover-highlight' especially when roam is enabled (see geo for example).\n\t     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n\t     *        on touch device.\n\t     */\n\t    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n\t        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\t\n\t        el.type === 'group'\n\t            ? el.traverse(function (child) {\n\t                if (child.type !== 'group') {\n\t                    setElementHoverStl(child, hoverStyle);\n\t                }\n\t            })\n\t            : setElementHoverStl(el, hoverStyle);\n\t\n\t        // Duplicated function will be auto-ignored, see Eventful.js.\n\t        el.on('mouseover', onElementMouseOver)\n\t          .on('mouseout', onElementMouseOut);\n\t\n\t        // Emphasis, normal can be triggered manually\n\t        el.on('emphasis', enterEmphasis)\n\t          .on('normal', leaveEmphasis);\n\t    };\n\t\n\t    /**\n\t     * Set text option in the style\n\t     * @param {Object} textStyle\n\t     * @param {module:echarts/model/Model} labelModel\n\t     * @param {string} color\n\t     */\n\t    graphic.setText = function (textStyle, labelModel, color) {\n\t        var labelPosition = labelModel.getShallow('position') || 'inside';\n\t        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n\t        var textStyleModel = labelModel.getModel('textStyle');\n\t        zrUtil.extend(textStyle, {\n\t            textDistance: labelModel.getShallow('distance') || 5,\n\t            textFont: textStyleModel.getFont(),\n\t            textPosition: labelPosition,\n\t            textFill: textStyleModel.getTextColor() || labelColor\n\t        });\n\t    };\n\t\n\t    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n\t        if (typeof dataIndex === 'function') {\n\t            cb = dataIndex;\n\t            dataIndex = null;\n\t        }\n\t        var animationEnabled = animatableModel\n\t            && (\n\t                animatableModel.ifEnableAnimation\n\t                ? animatableModel.ifEnableAnimation()\n\t                // Directly use animation property\n\t                : animatableModel.getShallow('animation')\n\t            );\n\t\n\t        if (animationEnabled) {\n\t            var postfix = isUpdate ? 'Update' : '';\n\t            var duration = animatableModel\n\t                && animatableModel.getShallow('animationDuration' + postfix);\n\t            var animationEasing = animatableModel\n\t                && animatableModel.getShallow('animationEasing' + postfix);\n\t            var animationDelay = animatableModel\n\t                && animatableModel.getShallow('animationDelay' + postfix);\n\t            if (typeof animationDelay === 'function') {\n\t                animationDelay = animationDelay(dataIndex);\n\t            }\n\t            duration > 0\n\t                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n\t                : (el.attr(props), cb && cb());\n\t        }\n\t        else {\n\t            el.attr(props);\n\t            cb && cb();\n\t        }\n\t    }\n\t    /**\n\t     * Update graphic element properties with or without animation according to the configuration in series\n\t     * @param {module:zrender/Element} el\n\t     * @param {Object} props\n\t     * @param {module:echarts/model/Model} [animatableModel]\n\t     * @param {number} [dataIndex]\n\t     * @param {Function} [cb]\n\t     * @example\n\t     *     graphic.updateProps(el, {\n\t     *         position: [100, 100]\n\t     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n\t     *     // Or\n\t     *     graphic.updateProps(el, {\n\t     *         position: [100, 100]\n\t     *     }, seriesModel, function () { console.log('Animation done!'); });\n\t     */\n\t    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n\t        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n\t    };\n\t\n\t    /**\n\t     * Init graphic element properties with or without animation according to the configuration in series\n\t     * @param {module:zrender/Element} el\n\t     * @param {Object} props\n\t     * @param {module:echarts/model/Model} [animatableModel]\n\t     * @param {number} [dataIndex]\n\t     * @param {Function} cb\n\t     */\n\t    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n\t        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n\t    };\n\t\n\t    /**\n\t     * Get transform matrix of target (param target),\n\t     * in coordinate of its ancestor (param ancestor)\n\t     *\n\t     * @param {module:zrender/mixin/Transformable} target\n\t     * @param {module:zrender/mixin/Transformable} [ancestor]\n\t     */\n\t    graphic.getTransform = function (target, ancestor) {\n\t        var mat = matrix.identity([]);\n\t\n\t        while (target && target !== ancestor) {\n\t            matrix.mul(mat, target.getLocalTransform(), mat);\n\t            target = target.parent;\n\t        }\n\t\n\t        return mat;\n\t    };\n\t\n\t    /**\n\t     * Apply transform to an vertex.\n\t     * @param {Array.<number>} vertex [x, y]\n\t     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n\t     * @param {boolean=} invert Whether use invert matrix.\n\t     * @return {Array.<number>} [x, y]\n\t     */\n\t    graphic.applyTransform = function (vertex, transform, invert) {\n\t        if (invert) {\n\t            transform = matrix.invert([], transform);\n\t        }\n\t        return vector.applyTransform([], vertex, transform);\n\t    };\n\t\n\t    /**\n\t     * @param {string} direction 'left' 'right' 'top' 'bottom'\n\t     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n\t     * @param {boolean=} invert Whether use invert matrix.\n\t     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n\t     */\n\t    graphic.transformDirection = function (direction, transform, invert) {\n\t\n\t        // Pick a base, ensure that transform result will not be (0, 0).\n\t        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n\t            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n\t        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n\t            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\t\n\t        var vertex = [\n\t            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n\t            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n\t        ];\n\t\n\t        vertex = graphic.applyTransform(vertex, transform, invert);\n\t\n\t        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n\t            ? (vertex[0] > 0 ? 'right' : 'left')\n\t            : (vertex[1] > 0 ? 'bottom' : 'top');\n\t    };\n\t\n\t    /**\n\t     * Apply group transition animation from g1 to g2\n\t     */\n\t    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n\t        if (!g1 || !g2) {\n\t            return;\n\t        }\n\t\n\t        function getElMap(g) {\n\t            var elMap = {};\n\t            g.traverse(function (el) {\n\t                if (!el.isGroup && el.anid) {\n\t                    elMap[el.anid] = el;\n\t                }\n\t            });\n\t            return elMap;\n\t        }\n\t        function getAnimatableProps(el) {\n\t            var obj = {\n\t                position: vector.clone(el.position),\n\t                rotation: el.rotation\n\t            };\n\t            if (el.shape) {\n\t                obj.shape = zrUtil.extend({}, el.shape);\n\t            }\n\t            return obj;\n\t        }\n\t        var elMap1 = getElMap(g1);\n\t\n\t        g2.traverse(function (el) {\n\t            if (!el.isGroup && el.anid) {\n\t                var oldEl = elMap1[el.anid];\n\t                if (oldEl) {\n\t                    var newProp = getAnimatableProps(el);\n\t                    el.attr(getAnimatableProps(oldEl));\n\t                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n\t                }\n\t                // else {\n\t                //     if (el.previousProps) {\n\t                //         graphic.updateProps\n\t                //     }\n\t                // }\n\t            }\n\t        });\n\t    };\n\t\n\t    module.exports = graphic;\n\n\n/***/ },\n/* 526 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var Path = __webpack_require__(527);\n\t    var PathProxy = __webpack_require__(531);\n\t    var transformPath = __webpack_require__(542);\n\t    var matrix = __webpack_require__(493);\n\t\n\t    // command chars\n\t    var cc = [\n\t        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n\t        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n\t    ];\n\t\n\t    var mathSqrt = Math.sqrt;\n\t    var mathSin = Math.sin;\n\t    var mathCos = Math.cos;\n\t    var PI = Math.PI;\n\t\n\t    var vMag = function(v) {\n\t        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n\t    };\n\t    var vRatio = function(u, v) {\n\t        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n\t    };\n\t    var vAngle = function(u, v) {\n\t        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n\t                * Math.acos(vRatio(u, v));\n\t    };\n\t\n\t    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n\t        var psi = psiDeg * (PI / 180.0);\n\t        var xp = mathCos(psi) * (x1 - x2) / 2.0\n\t                 + mathSin(psi) * (y1 - y2) / 2.0;\n\t        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n\t                 + mathCos(psi) * (y1 - y2) / 2.0;\n\t\n\t        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\t\n\t        if (lambda > 1) {\n\t            rx *= mathSqrt(lambda);\n\t            ry *= mathSqrt(lambda);\n\t        }\n\t\n\t        var f = (fa === fs ? -1 : 1)\n\t            * mathSqrt((((rx * rx) * (ry * ry))\n\t                    - ((rx * rx) * (yp * yp))\n\t                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n\t                    + (ry * ry) * (xp * xp))\n\t                ) || 0;\n\t\n\t        var cxp = f * rx * yp / ry;\n\t        var cyp = f * -ry * xp / rx;\n\t\n\t        var cx = (x1 + x2) / 2.0\n\t                 + mathCos(psi) * cxp\n\t                 - mathSin(psi) * cyp;\n\t        var cy = (y1 + y2) / 2.0\n\t                + mathSin(psi) * cxp\n\t                + mathCos(psi) * cyp;\n\t\n\t        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n\t        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n\t        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n\t        var dTheta = vAngle(u, v);\n\t\n\t        if (vRatio(u, v) <= -1) {\n\t            dTheta = PI;\n\t        }\n\t        if (vRatio(u, v) >= 1) {\n\t            dTheta = 0;\n\t        }\n\t        if (fs === 0 && dTheta > 0) {\n\t            dTheta = dTheta - 2 * PI;\n\t        }\n\t        if (fs === 1 && dTheta < 0) {\n\t            dTheta = dTheta + 2 * PI;\n\t        }\n\t\n\t        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n\t    }\n\t\n\t    function createPathProxyFromString(data) {\n\t        if (!data) {\n\t            return [];\n\t        }\n\t\n\t        // command string\n\t        var cs = data.replace(/-/g, ' -')\n\t            .replace(/  /g, ' ')\n\t            .replace(/ /g, ',')\n\t            .replace(/,,/g, ',');\n\t\n\t        var n;\n\t        // create pipes so that we can split the data\n\t        for (n = 0; n < cc.length; n++) {\n\t            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n\t        }\n\t\n\t        // create array\n\t        var arr = cs.split('|');\n\t        // init context point\n\t        var cpx = 0;\n\t        var cpy = 0;\n\t\n\t        var path = new PathProxy();\n\t        var CMD = PathProxy.CMD;\n\t\n\t        var prevCmd;\n\t        for (n = 1; n < arr.length; n++) {\n\t            var str = arr[n];\n\t            var c = str.charAt(0);\n\t            var off = 0;\n\t            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n\t            var cmd;\n\t\n\t            if (p.length > 0 && p[0] === '') {\n\t                p.shift();\n\t            }\n\t\n\t            for (var i = 0; i < p.length; i++) {\n\t                p[i] = parseFloat(p[i]);\n\t            }\n\t            while (off < p.length && !isNaN(p[off])) {\n\t                if (isNaN(p[0])) {\n\t                    break;\n\t                }\n\t                var ctlPtx;\n\t                var ctlPty;\n\t\n\t                var rx;\n\t                var ry;\n\t                var psi;\n\t                var fa;\n\t                var fs;\n\t\n\t                var x1 = cpx;\n\t                var y1 = cpy;\n\t\n\t                // convert l, H, h, V, and v to L\n\t                switch (c) {\n\t                    case 'l':\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'L':\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'm':\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        cmd = CMD.M;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        c = 'l';\n\t                        break;\n\t                    case 'M':\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        cmd = CMD.M;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        c = 'L';\n\t                        break;\n\t                    case 'h':\n\t                        cpx += p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'H':\n\t                        cpx = p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'v':\n\t                        cpy += p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'V':\n\t                        cpy = p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'C':\n\t                        cmd = CMD.C;\n\t                        path.addData(\n\t                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n\t                        );\n\t                        cpx = p[off - 2];\n\t                        cpy = p[off - 1];\n\t                        break;\n\t                    case 'c':\n\t                        cmd = CMD.C;\n\t                        path.addData(\n\t                            cmd,\n\t                            p[off++] + cpx, p[off++] + cpy,\n\t                            p[off++] + cpx, p[off++] + cpy,\n\t                            p[off++] + cpx, p[off++] + cpy\n\t                        );\n\t                        cpx += p[off - 2];\n\t                        cpy += p[off - 1];\n\t                        break;\n\t                    case 'S':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        var len = path.len();\n\t                        var pathData = path.data;\n\t                        if (prevCmd === CMD.C) {\n\t                            ctlPtx += cpx - pathData[len - 4];\n\t                            ctlPty += cpy - pathData[len - 3];\n\t                        }\n\t                        cmd = CMD.C;\n\t                        x1 = p[off++];\n\t                        y1 = p[off++];\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n\t                        break;\n\t                    case 's':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        var len = path.len();\n\t                        var pathData = path.data;\n\t                        if (prevCmd === CMD.C) {\n\t                            ctlPtx += cpx - pathData[len - 4];\n\t                            ctlPty += cpy - pathData[len - 3];\n\t                        }\n\t                        cmd = CMD.C;\n\t                        x1 = cpx + p[off++];\n\t                        y1 = cpy + p[off++];\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n\t                        break;\n\t                    case 'Q':\n\t                        x1 = p[off++];\n\t                        y1 = p[off++];\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        cmd = CMD.Q;\n\t                        path.addData(cmd, x1, y1, cpx, cpy);\n\t                        break;\n\t                    case 'q':\n\t                        x1 = p[off++] + cpx;\n\t                        y1 = p[off++] + cpy;\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        cmd = CMD.Q;\n\t                        path.addData(cmd, x1, y1, cpx, cpy);\n\t                        break;\n\t                    case 'T':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        var len = path.len();\n\t                        var pathData = path.data;\n\t                        if (prevCmd === CMD.Q) {\n\t                            ctlPtx += cpx - pathData[len - 4];\n\t                            ctlPty += cpy - pathData[len - 3];\n\t                        }\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        cmd = CMD.Q;\n\t                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n\t                        break;\n\t                    case 't':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        var len = path.len();\n\t                        var pathData = path.data;\n\t                        if (prevCmd === CMD.Q) {\n\t                            ctlPtx += cpx - pathData[len - 4];\n\t                            ctlPty += cpy - pathData[len - 3];\n\t                        }\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        cmd = CMD.Q;\n\t                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n\t                        break;\n\t                    case 'A':\n\t                        rx = p[off++];\n\t                        ry = p[off++];\n\t                        psi = p[off++];\n\t                        fa = p[off++];\n\t                        fs = p[off++];\n\t\n\t                        x1 = cpx, y1 = cpy;\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        cmd = CMD.A;\n\t                        processArc(\n\t                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n\t                        );\n\t                        break;\n\t                    case 'a':\n\t                        rx = p[off++];\n\t                        ry = p[off++];\n\t                        psi = p[off++];\n\t                        fa = p[off++];\n\t                        fs = p[off++];\n\t\n\t                        x1 = cpx, y1 = cpy;\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        cmd = CMD.A;\n\t                        processArc(\n\t                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n\t                        );\n\t                        break;\n\t                }\n\t            }\n\t\n\t            if (c === 'z' || c === 'Z') {\n\t                cmd = CMD.Z;\n\t                path.addData(cmd);\n\t            }\n\t\n\t            prevCmd = cmd;\n\t        }\n\t\n\t        path.toStatic();\n\t\n\t        return path;\n\t    }\n\t\n\t    // TODO Optimize double memory cost problem\n\t    function createPathOptions(str, opts) {\n\t        var pathProxy = createPathProxyFromString(str);\n\t        var transform;\n\t        opts = opts || {};\n\t        opts.buildPath = function (path) {\n\t            path.setData(pathProxy.data);\n\t            transform && transformPath(path, transform);\n\t            // Svg and vml renderer don't have context\n\t            var ctx = path.getContext();\n\t            if (ctx) {\n\t                path.rebuildPath(ctx);\n\t            }\n\t        };\n\t\n\t        opts.applyTransform = function (m) {\n\t            if (!transform) {\n\t                transform = matrix.create();\n\t            }\n\t            matrix.mul(transform, m, transform);\n\t            this.dirty(true);\n\t        };\n\t\n\t        return opts;\n\t    }\n\t\n\t    module.exports = {\n\t        /**\n\t         * Create a Path object from path string data\n\t         * http://www.w3.org/TR/SVG/paths.html#PathData\n\t         * @param  {Object} opts Other options\n\t         */\n\t        createFromString: function (str, opts) {\n\t            return new Path(createPathOptions(str, opts));\n\t        },\n\t\n\t        /**\n\t         * Create a Path class from path string data\n\t         * @param  {string} str\n\t         * @param  {Object} opts Other options\n\t         */\n\t        extendFromString: function (str, opts) {\n\t            return Path.extend(createPathOptions(str, opts));\n\t        },\n\t\n\t        /**\n\t         * Merge multiple paths\n\t         */\n\t        // TODO Apply transform\n\t        // TODO stroke dash\n\t        // TODO Optimize double memory cost problem\n\t        mergePath: function (pathEls, opts) {\n\t            var pathList = [];\n\t            var len = pathEls.length;\n\t            for (var i = 0; i < len; i++) {\n\t                var pathEl = pathEls[i];\n\t                if (pathEl.__dirty) {\n\t                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n\t                }\n\t                pathList.push(pathEl.path);\n\t            }\n\t\n\t            var pathBundle = new Path(opts);\n\t            pathBundle.buildPath = function (path) {\n\t                path.appendPath(pathList);\n\t                // Svg and vml renderer don't have context\n\t                var ctx = path.getContext();\n\t                if (ctx) {\n\t                    path.rebuildPath(ctx);\n\t                }\n\t            };\n\t\n\t            return pathBundle;\n\t        }\n\t    };\n\n\n/***/ },\n/* 527 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Path element\n\t * @module zrender/graphic/Path\n\t */\n\t\n\t\n\t\n\t    var Displayable = __webpack_require__(528);\n\t    var zrUtil = __webpack_require__(483);\n\t    var PathProxy = __webpack_require__(531);\n\t    var pathContain = __webpack_require__(534);\n\t\n\t    var Pattern = __webpack_require__(541);\n\t    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\t\n\t    var abs = Math.abs;\n\t\n\t    /**\n\t     * @alias module:zrender/graphic/Path\n\t     * @extends module:zrender/graphic/Displayable\n\t     * @constructor\n\t     * @param {Object} opts\n\t     */\n\t    function Path(opts) {\n\t        Displayable.call(this, opts);\n\t\n\t        /**\n\t         * @type {module:zrender/core/PathProxy}\n\t         * @readOnly\n\t         */\n\t        this.path = new PathProxy();\n\t    }\n\t\n\t    Path.prototype = {\n\t\n\t        constructor: Path,\n\t\n\t        type: 'path',\n\t\n\t        __dirtyPath: true,\n\t\n\t        strokeContainThreshold: 5,\n\t\n\t        brush: function (ctx, prevEl) {\n\t            var style = this.style;\n\t            var path = this.path;\n\t            var hasStroke = style.hasStroke();\n\t            var hasFill = style.hasFill();\n\t            var fill = style.fill;\n\t            var stroke = style.stroke;\n\t            var hasFillGradient = hasFill && !!(fill.colorStops);\n\t            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n\t            var hasFillPattern = hasFill && !!(fill.image);\n\t            var hasStrokePattern = hasStroke && !!(stroke.image);\n\t\n\t            style.bind(ctx, this, prevEl);\n\t            this.setTransform(ctx);\n\t\n\t            if (this.__dirty) {\n\t                var rect = this.getBoundingRect();\n\t                // Update gradient because bounding rect may changed\n\t                if (hasFillGradient) {\n\t                    this._fillGradient = style.getGradient(ctx, fill, rect);\n\t                }\n\t                if (hasStrokeGradient) {\n\t                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n\t                }\n\t            }\n\t            // Use the gradient or pattern\n\t            if (hasFillGradient) {\n\t                // PENDING If may have affect the state\n\t                ctx.fillStyle = this._fillGradient;\n\t            }\n\t            else if (hasFillPattern) {\n\t                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n\t            }\n\t            if (hasStrokeGradient) {\n\t                ctx.strokeStyle = this._strokeGradient;\n\t            }\n\t            else if (hasStrokePattern) {\n\t                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n\t            }\n\t\n\t            var lineDash = style.lineDash;\n\t            var lineDashOffset = style.lineDashOffset;\n\t\n\t            var ctxLineDash = !!ctx.setLineDash;\n\t\n\t            // Update path sx, sy\n\t            var scale = this.getGlobalScale();\n\t            path.setScale(scale[0], scale[1]);\n\t\n\t            // Proxy context\n\t            // Rebuild path in following 2 cases\n\t            // 1. Path is dirty\n\t            // 2. Path needs javascript implemented lineDash stroking.\n\t            //    In this case, lineDash information will not be saved in PathProxy\n\t            if (this.__dirtyPath || (\n\t                lineDash && !ctxLineDash && hasStroke\n\t            )) {\n\t                path = this.path.beginPath(ctx);\n\t\n\t                // Setting line dash before build path\n\t                if (lineDash && !ctxLineDash) {\n\t                    path.setLineDash(lineDash);\n\t                    path.setLineDashOffset(lineDashOffset);\n\t                }\n\t\n\t                this.buildPath(path, this.shape, false);\n\t\n\t                // Clear path dirty flag\n\t                this.__dirtyPath = false;\n\t            }\n\t            else {\n\t                // Replay path building\n\t                ctx.beginPath();\n\t                this.path.rebuildPath(ctx);\n\t            }\n\t\n\t            hasFill && path.fill(ctx);\n\t\n\t            if (lineDash && ctxLineDash) {\n\t                ctx.setLineDash(lineDash);\n\t                ctx.lineDashOffset = lineDashOffset;\n\t            }\n\t\n\t            hasStroke && path.stroke(ctx);\n\t\n\t            if (lineDash && ctxLineDash) {\n\t                // PENDING\n\t                // Remove lineDash\n\t                ctx.setLineDash([]);\n\t            }\n\t\n\t\n\t            this.restoreTransform(ctx);\n\t\n\t            // Draw rect text\n\t            if (style.text != null) {\n\t                // var rect = this.getBoundingRect();\n\t                this.drawRectText(ctx, this.getBoundingRect());\n\t            }\n\t        },\n\t\n\t        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n\t        // Like in circle\n\t        buildPath: function (ctx, shapeCfg, inBundle) {},\n\t\n\t        getBoundingRect: function () {\n\t            var rect = this._rect;\n\t            var style = this.style;\n\t            var needsUpdateRect = !rect;\n\t            if (needsUpdateRect) {\n\t                var path = this.path;\n\t                if (this.__dirtyPath) {\n\t                    path.beginPath();\n\t                    this.buildPath(path, this.shape, false);\n\t                }\n\t                rect = path.getBoundingRect();\n\t            }\n\t            this._rect = rect;\n\t\n\t            if (style.hasStroke()) {\n\t                // Needs update rect with stroke lineWidth when\n\t                // 1. Element changes scale or lineWidth\n\t                // 2. Shape is changed\n\t                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\t                if (this.__dirty || needsUpdateRect) {\n\t                    rectWithStroke.copy(rect);\n\t                    // FIXME Must after updateTransform\n\t                    var w = style.lineWidth;\n\t                    // PENDING, Min line width is needed when line is horizontal or vertical\n\t                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\t\n\t                    // Only add extra hover lineWidth when there are no fill\n\t                    if (!style.hasFill()) {\n\t                        w = Math.max(w, this.strokeContainThreshold || 4);\n\t                    }\n\t                    // Consider line width\n\t                    // Line scale can't be 0;\n\t                    if (lineScale > 1e-10) {\n\t                        rectWithStroke.width += w / lineScale;\n\t                        rectWithStroke.height += w / lineScale;\n\t                        rectWithStroke.x -= w / lineScale / 2;\n\t                        rectWithStroke.y -= w / lineScale / 2;\n\t                    }\n\t                }\n\t\n\t                // Return rect with stroke\n\t                return rectWithStroke;\n\t            }\n\t\n\t            return rect;\n\t        },\n\t\n\t        contain: function (x, y) {\n\t            var localPos = this.transformCoordToLocal(x, y);\n\t            var rect = this.getBoundingRect();\n\t            var style = this.style;\n\t            x = localPos[0];\n\t            y = localPos[1];\n\t\n\t            if (rect.contain(x, y)) {\n\t                var pathData = this.path.data;\n\t                if (style.hasStroke()) {\n\t                    var lineWidth = style.lineWidth;\n\t                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\t                    // Line scale can't be 0;\n\t                    if (lineScale > 1e-10) {\n\t                        // Only add extra hover lineWidth when there are no fill\n\t                        if (!style.hasFill()) {\n\t                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n\t                        }\n\t                        if (pathContain.containStroke(\n\t                            pathData, lineWidth / lineScale, x, y\n\t                        )) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                }\n\t                if (style.hasFill()) {\n\t                    return pathContain.contain(pathData, x, y);\n\t                }\n\t            }\n\t            return false;\n\t        },\n\t\n\t        /**\n\t         * @param  {boolean} dirtyPath\n\t         */\n\t        dirty: function (dirtyPath) {\n\t            if (dirtyPath == null) {\n\t                dirtyPath = true;\n\t            }\n\t            // Only mark dirty, not mark clean\n\t            if (dirtyPath) {\n\t                this.__dirtyPath = dirtyPath;\n\t                this._rect = null;\n\t            }\n\t\n\t            this.__dirty = true;\n\t\n\t            this.__zr && this.__zr.refresh();\n\t\n\t            // Used as a clipping path\n\t            if (this.__clipTarget) {\n\t                this.__clipTarget.dirty();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Alias for animate('shape')\n\t         * @param {boolean} loop\n\t         */\n\t        animateShape: function (loop) {\n\t            return this.animate('shape', loop);\n\t        },\n\t\n\t        // Overwrite attrKV\n\t        attrKV: function (key, value) {\n\t            // FIXME\n\t            if (key === 'shape') {\n\t                this.setShape(value);\n\t                this.__dirtyPath = true;\n\t                this._rect = null;\n\t            }\n\t            else {\n\t                Displayable.prototype.attrKV.call(this, key, value);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {Object|string} key\n\t         * @param {*} value\n\t         */\n\t        setShape: function (key, value) {\n\t            var shape = this.shape;\n\t            // Path from string may not have shape\n\t            if (shape) {\n\t                if (zrUtil.isObject(key)) {\n\t                    for (var name in key) {\n\t                        if (key.hasOwnProperty(name)) {\n\t                            shape[name] = key[name];\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                    shape[key] = value;\n\t                }\n\t                this.dirty(true);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        getLineScale: function () {\n\t            var m = this.transform;\n\t            // Get the line scale.\n\t            // Determinant of `m` means how much the area is enlarged by the\n\t            // transformation. So its square root can be used as a scale factor\n\t            // for width.\n\t            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n\t                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n\t                : 1;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * 扩展一个 Path element, 比如星形，圆等。\n\t     * Extend a path element\n\t     * @param {Object} props\n\t     * @param {string} props.type Path type\n\t     * @param {Function} props.init Initialize\n\t     * @param {Function} props.buildPath Overwrite buildPath method\n\t     * @param {Object} [props.style] Extended default style config\n\t     * @param {Object} [props.shape] Extended default shape config\n\t     */\n\t    Path.extend = function (defaults) {\n\t        var Sub = function (opts) {\n\t            Path.call(this, opts);\n\t\n\t            if (defaults.style) {\n\t                // Extend default style\n\t                this.style.extendFrom(defaults.style, false);\n\t            }\n\t\n\t            // Extend default shape\n\t            var defaultShape = defaults.shape;\n\t            if (defaultShape) {\n\t                this.shape = this.shape || {};\n\t                var thisShape = this.shape;\n\t                for (var name in defaultShape) {\n\t                    if (\n\t                        ! thisShape.hasOwnProperty(name)\n\t                        && defaultShape.hasOwnProperty(name)\n\t                    ) {\n\t                        thisShape[name] = defaultShape[name];\n\t                    }\n\t                }\n\t            }\n\t\n\t            defaults.init && defaults.init.call(this, opts);\n\t        };\n\t\n\t        zrUtil.inherits(Sub, Path);\n\t\n\t        // FIXME 不能 extend position, rotation 等引用对象\n\t        for (var name in defaults) {\n\t            // Extending prototype values and methods\n\t            if (name !== 'style' && name !== 'shape') {\n\t                Sub.prototype[name] = defaults[name];\n\t            }\n\t        }\n\t\n\t        return Sub;\n\t    };\n\t\n\t    zrUtil.inherits(Path, Displayable);\n\t\n\t    module.exports = Path;\n\n\n/***/ },\n/* 528 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 可绘制的图形基类\n\t * Base class of all displayable graphic objects\n\t * @module zrender/graphic/Displayable\n\t */\n\t\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var Style = __webpack_require__(529);\n\t\n\t    var Element = __webpack_require__(513);\n\t    var RectText = __webpack_require__(530);\n\t    // var Stateful = require('./mixin/Stateful');\n\t\n\t    /**\n\t     * @alias module:zrender/graphic/Displayable\n\t     * @extends module:zrender/Element\n\t     * @extends module:zrender/graphic/mixin/RectText\n\t     */\n\t    function Displayable(opts) {\n\t\n\t        opts = opts || {};\n\t\n\t        Element.call(this, opts);\n\t\n\t        // Extend properties\n\t        for (var name in opts) {\n\t            if (\n\t                opts.hasOwnProperty(name) &&\n\t                name !== 'style'\n\t            ) {\n\t                this[name] = opts[name];\n\t            }\n\t        }\n\t\n\t        /**\n\t         * @type {module:zrender/graphic/Style}\n\t         */\n\t        this.style = new Style(opts.style);\n\t\n\t        this._rect = null;\n\t        // Shapes for cascade clipping.\n\t        this.__clipPaths = [];\n\t\n\t        // FIXME Stateful must be mixined after style is setted\n\t        // Stateful.call(this, opts);\n\t    }\n\t\n\t    Displayable.prototype = {\n\t\n\t        constructor: Displayable,\n\t\n\t        type: 'displayable',\n\t\n\t        /**\n\t         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n\t         * Dirty flag. From which painter will determine if this displayable object needs brush\n\t         * @name module:zrender/graphic/Displayable#__dirty\n\t         * @type {boolean}\n\t         */\n\t        __dirty: true,\n\t\n\t        /**\n\t         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n\t         * If ignore drawing of the displayable object. Mouse event will still be triggered\n\t         * @name module:/zrender/graphic/Displayable#invisible\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        invisible: false,\n\t\n\t        /**\n\t         * @name module:/zrender/graphic/Displayable#z\n\t         * @type {number}\n\t         * @default 0\n\t         */\n\t        z: 0,\n\t\n\t        /**\n\t         * @name module:/zrender/graphic/Displayable#z\n\t         * @type {number}\n\t         * @default 0\n\t         */\n\t        z2: 0,\n\t\n\t        /**\n\t         * z层level，决定绘画在哪层canvas中\n\t         * @name module:/zrender/graphic/Displayable#zlevel\n\t         * @type {number}\n\t         * @default 0\n\t         */\n\t        zlevel: 0,\n\t\n\t        /**\n\t         * 是否可拖拽\n\t         * @name module:/zrender/graphic/Displayable#draggable\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        draggable: false,\n\t\n\t        /**\n\t         * 是否正在拖拽\n\t         * @name module:/zrender/graphic/Displayable#draggable\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        dragging: false,\n\t\n\t        /**\n\t         * 是否相应鼠标事件\n\t         * @name module:/zrender/graphic/Displayable#silent\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        silent: false,\n\t\n\t        /**\n\t         * If enable culling\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        culling: false,\n\t\n\t        /**\n\t         * Mouse cursor when hovered\n\t         * @name module:/zrender/graphic/Displayable#cursor\n\t         * @type {string}\n\t         */\n\t        cursor: 'pointer',\n\t\n\t        /**\n\t         * If hover area is bounding rect\n\t         * @name module:/zrender/graphic/Displayable#rectHover\n\t         * @type {string}\n\t         */\n\t        rectHover: false,\n\t\n\t        /**\n\t         * Render the element progressively when the value >= 0,\n\t         * usefull for large data.\n\t         * @type {number}\n\t         */\n\t        progressive: -1,\n\t\n\t        beforeBrush: function (ctx) {},\n\t\n\t        afterBrush: function (ctx) {},\n\t\n\t        /**\n\t         * 图形绘制方法\n\t         * @param {Canvas2DRenderingContext} ctx\n\t         */\n\t        // Interface\n\t        brush: function (ctx, prevEl) {},\n\t\n\t        /**\n\t         * 获取最小包围盒\n\t         * @return {module:zrender/core/BoundingRect}\n\t         */\n\t        // Interface\n\t        getBoundingRect: function () {},\n\t\n\t        /**\n\t         * 判断坐标 x, y 是否在图形上\n\t         * If displayable element contain coord x, y\n\t         * @param  {number} x\n\t         * @param  {number} y\n\t         * @return {boolean}\n\t         */\n\t        contain: function (x, y) {\n\t            return this.rectContain(x, y);\n\t        },\n\t\n\t        /**\n\t         * @param  {Function} cb\n\t         * @param  {}   context\n\t         */\n\t        traverse: function (cb, context) {\n\t            cb.call(context, this);\n\t        },\n\t\n\t        /**\n\t         * 判断坐标 x, y 是否在图形的包围盒上\n\t         * If bounding rect of element contain coord x, y\n\t         * @param  {number} x\n\t         * @param  {number} y\n\t         * @return {boolean}\n\t         */\n\t        rectContain: function (x, y) {\n\t            var coord = this.transformCoordToLocal(x, y);\n\t            var rect = this.getBoundingRect();\n\t            return rect.contain(coord[0], coord[1]);\n\t        },\n\t\n\t        /**\n\t         * 标记图形元素为脏，并且在下一帧重绘\n\t         * Mark displayable element dirty and refresh next frame\n\t         */\n\t        dirty: function () {\n\t            this.__dirty = true;\n\t\n\t            this._rect = null;\n\t\n\t            this.__zr && this.__zr.refresh();\n\t        },\n\t\n\t        /**\n\t         * 图形是否会触发事件\n\t         * If displayable object binded any event\n\t         * @return {boolean}\n\t         */\n\t        // TODO, 通过 bind 绑定的事件\n\t        // isSilent: function () {\n\t        //     return !(\n\t        //         this.hoverable || this.draggable\n\t        //         || this.onmousemove || this.onmouseover || this.onmouseout\n\t        //         || this.onmousedown || this.onmouseup || this.onclick\n\t        //         || this.ondragenter || this.ondragover || this.ondragleave\n\t        //         || this.ondrop\n\t        //     );\n\t        // },\n\t        /**\n\t         * Alias for animate('style')\n\t         * @param {boolean} loop\n\t         */\n\t        animateStyle: function (loop) {\n\t            return this.animate('style', loop);\n\t        },\n\t\n\t        attrKV: function (key, value) {\n\t            if (key !== 'style') {\n\t                Element.prototype.attrKV.call(this, key, value);\n\t            }\n\t            else {\n\t                this.style.set(value);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {Object|string} key\n\t         * @param {*} value\n\t         */\n\t        setStyle: function (key, value) {\n\t            this.style.set(key, value);\n\t            this.dirty(false);\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * Use given style object\n\t         * @param  {Object} obj\n\t         */\n\t        useStyle: function (obj) {\n\t            this.style = new Style(obj);\n\t            this.dirty(false);\n\t            return this;\n\t        }\n\t    };\n\t\n\t    zrUtil.inherits(Displayable, Element);\n\t\n\t    zrUtil.mixin(Displayable, RectText);\n\t    // zrUtil.mixin(Displayable, Stateful);\n\t\n\t    module.exports = Displayable;\n\n\n/***/ },\n/* 529 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @module zrender/graphic/Style\n\t */\n\t\n\t\n\t    var STYLE_COMMON_PROPS = [\n\t        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n\t        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n\t    ];\n\t\n\t    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n\t    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\t\n\t    var Style = function (opts) {\n\t        this.extendFrom(opts);\n\t    };\n\t\n\t    function createLinearGradient(ctx, obj, rect) {\n\t        // var size =\n\t        var x = obj.x;\n\t        var x2 = obj.x2;\n\t        var y = obj.y;\n\t        var y2 = obj.y2;\n\t\n\t        if (!obj.global) {\n\t            x = x * rect.width + rect.x;\n\t            x2 = x2 * rect.width + rect.x;\n\t            y = y * rect.height + rect.y;\n\t            y2 = y2 * rect.height + rect.y;\n\t        }\n\t\n\t        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\t\n\t        return canvasGradient;\n\t    }\n\t\n\t    function createRadialGradient(ctx, obj, rect) {\n\t        var width = rect.width;\n\t        var height = rect.height;\n\t        var min = Math.min(width, height);\n\t\n\t        var x = obj.x;\n\t        var y = obj.y;\n\t        var r = obj.r;\n\t        if (!obj.global) {\n\t            x = x * width + rect.x;\n\t            y = y * height + rect.y;\n\t            r = r * min;\n\t        }\n\t\n\t        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\t\n\t        return canvasGradient;\n\t    }\n\t\n\t\n\t    Style.prototype = {\n\t\n\t        constructor: Style,\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        fill: '#000000',\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        stroke: null,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        opacity: 1,\n\t\n\t        /**\n\t         * @type {Array.<number>}\n\t         */\n\t        lineDash: null,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        lineDashOffset: 0,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        shadowBlur: 0,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        shadowOffsetX: 0,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        shadowOffsetY: 0,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        lineWidth: 1,\n\t\n\t        /**\n\t         * If stroke ignore scale\n\t         * @type {Boolean}\n\t         */\n\t        strokeNoScale: false,\n\t\n\t        // Bounding rect text configuration\n\t        // Not affected by element transform\n\t        /**\n\t         * @type {string}\n\t         */\n\t        text: null,\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        textFill: '#000',\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        textStroke: null,\n\t\n\t        /**\n\t         * 'inside', 'left', 'right', 'top', 'bottom'\n\t         * [x, y]\n\t         * @type {string|Array.<number>}\n\t         * @default 'inside'\n\t         */\n\t        textPosition: 'inside',\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        textBaseline: null,\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        textAlign: null,\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        textVerticalAlign: null,\n\t\n\t        /**\n\t         * Only useful in Path and Image element\n\t         * @type {number}\n\t         */\n\t        textDistance: 5,\n\t\n\t        /**\n\t         * Only useful in Path and Image element\n\t         * @type {number}\n\t         */\n\t        textShadowBlur: 0,\n\t\n\t        /**\n\t         * Only useful in Path and Image element\n\t         * @type {number}\n\t         */\n\t        textShadowOffsetX: 0,\n\t\n\t        /**\n\t         * Only useful in Path and Image element\n\t         * @type {number}\n\t         */\n\t        textShadowOffsetY: 0,\n\t\n\t        /**\n\t         * If transform text\n\t         * Only useful in Path and Image element\n\t         * @type {boolean}\n\t         */\n\t        textTransform: false,\n\t\n\t        /**\n\t         * Text rotate around position of Path or Image\n\t         * Only useful in Path and Image element and textTransform is false.\n\t         */\n\t        textRotation: 0,\n\t\n\t        /**\n\t         * @type {string}\n\t         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n\t         */\n\t        blend: null,\n\t\n\t        /**\n\t         * @param {CanvasRenderingContext2D} ctx\n\t         */\n\t        bind: function (ctx, el, prevEl) {\n\t            var style = this;\n\t            var prevStyle = prevEl && prevEl.style;\n\t            var firstDraw = !prevStyle;\n\t\n\t            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n\t                var prop = STYLE_COMMON_PROPS[i];\n\t                var styleName = prop[0];\n\t\n\t                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n\t                    // FIXME Invalid property value will cause style leak from previous element.\n\t                    ctx[styleName] = style[styleName] || prop[1];\n\t                }\n\t            }\n\t\n\t            if ((firstDraw || style.fill !== prevStyle.fill)) {\n\t                ctx.fillStyle = style.fill;\n\t            }\n\t            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n\t                ctx.strokeStyle = style.stroke;\n\t            }\n\t            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n\t                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n\t            }\n\t\n\t            if ((firstDraw || style.blend !== prevStyle.blend)) {\n\t                ctx.globalCompositeOperation = style.blend || 'source-over';\n\t            }\n\t            if (this.hasStroke()) {\n\t                var lineWidth = style.lineWidth;\n\t                ctx.lineWidth = lineWidth / (\n\t                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n\t                );\n\t            }\n\t        },\n\t\n\t        hasFill: function () {\n\t            var fill = this.fill;\n\t            return fill != null && fill !== 'none';\n\t        },\n\t\n\t        hasStroke: function () {\n\t            var stroke = this.stroke;\n\t            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n\t        },\n\t\n\t        /**\n\t         * Extend from other style\n\t         * @param {zrender/graphic/Style} otherStyle\n\t         * @param {boolean} overwrite\n\t         */\n\t        extendFrom: function (otherStyle, overwrite) {\n\t            if (otherStyle) {\n\t                var target = this;\n\t                for (var name in otherStyle) {\n\t                    if (otherStyle.hasOwnProperty(name)\n\t                        && (overwrite || ! target.hasOwnProperty(name))\n\t                    ) {\n\t                        target[name] = otherStyle[name];\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Batch setting style with a given object\n\t         * @param {Object|string} obj\n\t         * @param {*} [obj]\n\t         */\n\t        set: function (obj, value) {\n\t            if (typeof obj === 'string') {\n\t                this[obj] = value;\n\t            }\n\t            else {\n\t                this.extendFrom(obj, true);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Clone\n\t         * @return {zrender/graphic/Style} [description]\n\t         */\n\t        clone: function () {\n\t            var newStyle = new this.constructor();\n\t            newStyle.extendFrom(this, true);\n\t            return newStyle;\n\t        },\n\t\n\t        getGradient: function (ctx, obj, rect) {\n\t            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n\t            var canvasGradient = method(ctx, obj, rect);\n\t            var colorStops = obj.colorStops;\n\t            for (var i = 0; i < colorStops.length; i++) {\n\t                canvasGradient.addColorStop(\n\t                    colorStops[i].offset, colorStops[i].color\n\t                );\n\t            }\n\t            return canvasGradient;\n\t        }\n\t    };\n\t\n\t    var styleProto = Style.prototype;\n\t    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n\t        var prop = STYLE_COMMON_PROPS[i];\n\t        if (!(prop[0] in styleProto)) {\n\t            styleProto[prop[0]] = prop[1];\n\t        }\n\t    }\n\t\n\t    // Provide for others\n\t    Style.getGradient = styleProto.getGradient;\n\t\n\t    module.exports = Style;\n\n\n/***/ },\n/* 530 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Mixin for drawing text in a element bounding rect\n\t * @module zrender/mixin/RectText\n\t */\n\t\n\t\n\t\n\t    var textContain = __webpack_require__(490);\n\t    var BoundingRect = __webpack_require__(491);\n\t\n\t    var tmpRect = new BoundingRect();\n\t\n\t    var RectText = function () {};\n\t\n\t    function parsePercent(value, maxValue) {\n\t        if (typeof value === 'string') {\n\t            if (value.lastIndexOf('%') >= 0) {\n\t                return parseFloat(value) / 100 * maxValue;\n\t            }\n\t            return parseFloat(value);\n\t        }\n\t        return value;\n\t    }\n\t\n\t    RectText.prototype = {\n\t\n\t        constructor: RectText,\n\t\n\t        /**\n\t         * Draw text in a rect with specified position.\n\t         * @param  {CanvasRenderingContext} ctx\n\t         * @param  {Object} rect Displayable rect\n\t         * @return {Object} textRect Alternative precalculated text bounding rect\n\t         */\n\t        drawRectText: function (ctx, rect, textRect) {\n\t            var style = this.style;\n\t            var text = style.text;\n\t            // Convert to string\n\t            text != null && (text += '');\n\t            if (!text) {\n\t                return;\n\t            }\n\t\n\t            // FIXME\n\t            ctx.save();\n\t\n\t            var x;\n\t            var y;\n\t            var textPosition = style.textPosition;\n\t            var distance = style.textDistance;\n\t            var align = style.textAlign;\n\t            var font = style.textFont || style.font;\n\t            var baseline = style.textBaseline;\n\t            var verticalAlign = style.textVerticalAlign;\n\t\n\t            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\t\n\t            // Transform rect to view space\n\t            var transform = this.transform;\n\t            if (!style.textTransform) {\n\t                if (transform) {\n\t                    tmpRect.copy(rect);\n\t                    tmpRect.applyTransform(transform);\n\t                    rect = tmpRect;\n\t                }\n\t            }\n\t            else {\n\t                this.setTransform(ctx);\n\t            }\n\t\n\t            // Text position represented by coord\n\t            if (textPosition instanceof Array) {\n\t                // Percent\n\t                x = rect.x + parsePercent(textPosition[0], rect.width);\n\t                y = rect.y + parsePercent(textPosition[1], rect.height);\n\t                align = align || 'left';\n\t                baseline = baseline || 'top';\n\t\n\t                if (verticalAlign) {\n\t                    switch (verticalAlign) {\n\t                        case 'middle':\n\t                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n\t                            break;\n\t                        case 'bottom':\n\t                            y -= textRect.height - textRect.lineHeight / 2;\n\t                            break;\n\t                        default:\n\t                            y += textRect.lineHeight / 2;\n\t                    }\n\t                    // Force bseline to be middle\n\t                    baseline = 'middle';\n\t                }\n\t            }\n\t            else {\n\t                var res = textContain.adjustTextPositionOnRect(\n\t                    textPosition, rect, textRect, distance\n\t                );\n\t                x = res.x;\n\t                y = res.y;\n\t                // Default align and baseline when has textPosition\n\t                align = align || res.textAlign;\n\t                baseline = baseline || res.textBaseline;\n\t            }\n\t\n\t            // Use canvas default left textAlign. Giving invalid value will cause state not change\n\t            ctx.textAlign = align || 'left';\n\t            // Use canvas default alphabetic baseline\n\t            ctx.textBaseline = baseline || 'alphabetic';\n\t\n\t            var textFill = style.textFill;\n\t            var textStroke = style.textStroke;\n\t            textFill && (ctx.fillStyle = textFill);\n\t            textStroke && (ctx.strokeStyle = textStroke);\n\t\n\t            // TODO Invalid font\n\t            ctx.font = font || '12px sans-serif';\n\t\n\t            // Text shadow\n\t            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n\t            ctx.shadowBlur = style.textShadowBlur;\n\t            ctx.shadowColor = style.textShadowColor || 'transparent';\n\t            ctx.shadowOffsetX = style.textShadowOffsetX;\n\t            ctx.shadowOffsetY = style.textShadowOffsetY;\n\t\n\t            var textLines = text.split('\\n');\n\t\n\t            if (style.textRotation) {\n\t                transform && ctx.translate(transform[4], transform[5]);\n\t                ctx.rotate(style.textRotation);\n\t                transform && ctx.translate(-transform[4], -transform[5]);\n\t            }\n\t\n\t            for (var i = 0; i < textLines.length; i++) {\n\t                textFill && ctx.fillText(textLines[i], x, y);\n\t                textStroke && ctx.strokeText(textLines[i], x, y);\n\t                y += textRect.lineHeight;\n\t            }\n\t\n\t            ctx.restore();\n\t        }\n\t    };\n\t\n\t    module.exports = RectText;\n\n\n/***/ },\n/* 531 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n\t * 可以用于 isInsidePath 判断以及获取boundingRect\n\t *\n\t * @module zrender/core/PathProxy\n\t * @author Yi Shen (http://www.github.com/pissang)\n\t */\n\t\n\t // TODO getTotalLength, getPointAtLength\n\t\n\t\n\t    var curve = __webpack_require__(532);\n\t    var vec2 = __webpack_require__(492);\n\t    var bbox = __webpack_require__(533);\n\t    var BoundingRect = __webpack_require__(491);\n\t    var dpr = __webpack_require__(523).devicePixelRatio;\n\t\n\t    var CMD = {\n\t        M: 1,\n\t        L: 2,\n\t        C: 3,\n\t        Q: 4,\n\t        A: 5,\n\t        Z: 6,\n\t        // Rect\n\t        R: 7\n\t    };\n\t\n\t    var min = [];\n\t    var max = [];\n\t    var min2 = [];\n\t    var max2 = [];\n\t    var mathMin = Math.min;\n\t    var mathMax = Math.max;\n\t    var mathCos = Math.cos;\n\t    var mathSin = Math.sin;\n\t    var mathSqrt = Math.sqrt;\n\t    var mathAbs = Math.abs;\n\t\n\t    var hasTypedArray = typeof Float32Array != 'undefined';\n\t\n\t    /**\n\t     * @alias module:zrender/core/PathProxy\n\t     * @constructor\n\t     */\n\t    var PathProxy = function () {\n\t\n\t        /**\n\t         * Path data. Stored as flat array\n\t         * @type {Array.<Object>}\n\t         */\n\t        this.data = [];\n\t\n\t        this._len = 0;\n\t\n\t        this._ctx = null;\n\t\n\t        this._xi = 0;\n\t        this._yi = 0;\n\t\n\t        this._x0 = 0;\n\t        this._y0 = 0;\n\t\n\t        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n\t        this._ux = 0;\n\t        this._uy = 0;\n\t    };\n\t\n\t    /**\n\t     * 快速计算Path包围盒（并不是最小包围盒）\n\t     * @return {Object}\n\t     */\n\t    PathProxy.prototype = {\n\t\n\t        constructor: PathProxy,\n\t\n\t        _lineDash: null,\n\t\n\t        _dashOffset: 0,\n\t\n\t        _dashIdx: 0,\n\t\n\t        _dashSum: 0,\n\t\n\t        /**\n\t         * @readOnly\n\t         */\n\t        setScale: function (sx, sy) {\n\t            this._ux = mathAbs(1 / dpr / sx) || 0;\n\t            this._uy = mathAbs(1 / dpr / sy) || 0;\n\t        },\n\t\n\t        getContext: function () {\n\t            return this._ctx;\n\t        },\n\t\n\t        /**\n\t         * @param  {CanvasRenderingContext2D} ctx\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        beginPath: function (ctx) {\n\t\n\t            this._ctx = ctx;\n\t\n\t            ctx && ctx.beginPath();\n\t\n\t            ctx && (this.dpr = ctx.dpr);\n\t\n\t            // Reset\n\t            this._len = 0;\n\t\n\t            if (this._lineDash) {\n\t                this._lineDash = null;\n\t\n\t                this._dashOffset = 0;\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param  {number} x\n\t         * @param  {number} y\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        moveTo: function (x, y) {\n\t            this.addData(CMD.M, x, y);\n\t            this._ctx && this._ctx.moveTo(x, y);\n\t\n\t            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n\t            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n\t            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n\t            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\t            this._x0 = x;\n\t            this._y0 = y;\n\t\n\t            this._xi = x;\n\t            this._yi = y;\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param  {number} x\n\t         * @param  {number} y\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        lineTo: function (x, y) {\n\t            var exceedUnit = mathAbs(x - this._xi) > this._ux\n\t                || mathAbs(y - this._yi) > this._uy\n\t                // Force draw the first segment\n\t                || this._len < 5;\n\t\n\t            this.addData(CMD.L, x, y);\n\t\n\t            if (this._ctx && exceedUnit) {\n\t                this._needsDash() ? this._dashedLineTo(x, y)\n\t                    : this._ctx.lineTo(x, y);\n\t            }\n\t            if (exceedUnit) {\n\t                this._xi = x;\n\t                this._yi = y;\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param  {number} x1\n\t         * @param  {number} y1\n\t         * @param  {number} x2\n\t         * @param  {number} y2\n\t         * @param  {number} x3\n\t         * @param  {number} y3\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n\t            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\t            if (this._ctx) {\n\t                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n\t                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n\t            }\n\t            this._xi = x3;\n\t            this._yi = y3;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param  {number} x1\n\t         * @param  {number} y1\n\t         * @param  {number} x2\n\t         * @param  {number} y2\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        quadraticCurveTo: function (x1, y1, x2, y2) {\n\t            this.addData(CMD.Q, x1, y1, x2, y2);\n\t            if (this._ctx) {\n\t                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n\t                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n\t            }\n\t            this._xi = x2;\n\t            this._yi = y2;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param  {number} cx\n\t         * @param  {number} cy\n\t         * @param  {number} r\n\t         * @param  {number} startAngle\n\t         * @param  {number} endAngle\n\t         * @param  {boolean} anticlockwise\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n\t            this.addData(\n\t                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n\t            );\n\t            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\t\n\t            this._xi = mathCos(endAngle) * r + cx;\n\t            this._xi = mathSin(endAngle) * r + cx;\n\t            return this;\n\t        },\n\t\n\t        // TODO\n\t        arcTo: function (x1, y1, x2, y2, radius) {\n\t            if (this._ctx) {\n\t                this._ctx.arcTo(x1, y1, x2, y2, radius);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        // TODO\n\t        rect: function (x, y, w, h) {\n\t            this._ctx && this._ctx.rect(x, y, w, h);\n\t            this.addData(CMD.R, x, y, w, h);\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        closePath: function () {\n\t            this.addData(CMD.Z);\n\t\n\t            var ctx = this._ctx;\n\t            var x0 = this._x0;\n\t            var y0 = this._y0;\n\t            if (ctx) {\n\t                this._needsDash() && this._dashedLineTo(x0, y0);\n\t                ctx.closePath();\n\t            }\n\t\n\t            this._xi = x0;\n\t            this._yi = y0;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n\t         * stroke 同样\n\t         * @param {CanvasRenderingContext2D} ctx\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        fill: function (ctx) {\n\t            ctx && ctx.fill();\n\t            this.toStatic();\n\t        },\n\t\n\t        /**\n\t         * @param {CanvasRenderingContext2D} ctx\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        stroke: function (ctx) {\n\t            ctx && ctx.stroke();\n\t            this.toStatic();\n\t        },\n\t\n\t        /**\n\t         * 必须在其它绘制命令前调用\n\t         * Must be invoked before all other path drawing methods\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        setLineDash: function (lineDash) {\n\t            if (lineDash instanceof Array) {\n\t                this._lineDash = lineDash;\n\t\n\t                this._dashIdx = 0;\n\t\n\t                var lineDashSum = 0;\n\t                for (var i = 0; i < lineDash.length; i++) {\n\t                    lineDashSum += lineDash[i];\n\t                }\n\t                this._dashSum = lineDashSum;\n\t            }\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 必须在其它绘制命令前调用\n\t         * Must be invoked before all other path drawing methods\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        setLineDashOffset: function (offset) {\n\t            this._dashOffset = offset;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         *\n\t         * @return {boolean}\n\t         */\n\t        len: function () {\n\t            return this._len;\n\t        },\n\t\n\t        /**\n\t         * 直接设置 Path 数据\n\t         */\n\t        setData: function (data) {\n\t\n\t            var len = data.length;\n\t\n\t            if (! (this.data && this.data.length == len) && hasTypedArray) {\n\t                this.data = new Float32Array(len);\n\t            }\n\t\n\t            for (var i = 0; i < len; i++) {\n\t                this.data[i] = data[i];\n\t            }\n\t\n\t            this._len = len;\n\t        },\n\t\n\t        /**\n\t         * 添加子路径\n\t         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n\t         */\n\t        appendPath: function (path) {\n\t            if (!(path instanceof Array)) {\n\t                path = [path];\n\t            }\n\t            var len = path.length;\n\t            var appendSize = 0;\n\t            var offset = this._len;\n\t            for (var i = 0; i < len; i++) {\n\t                appendSize += path[i].len();\n\t            }\n\t            if (hasTypedArray && (this.data instanceof Float32Array)) {\n\t                this.data = new Float32Array(offset + appendSize);\n\t            }\n\t            for (var i = 0; i < len; i++) {\n\t                var appendPathData = path[i].data;\n\t                for (var k = 0; k < appendPathData.length; k++) {\n\t                    this.data[offset++] = appendPathData[k];\n\t                }\n\t            }\n\t            this._len = offset;\n\t        },\n\t\n\t        /**\n\t         * 填充 Path 数据。\n\t         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n\t         */\n\t        addData: function (cmd) {\n\t            var data = this.data;\n\t            if (this._len + arguments.length > data.length) {\n\t                // 因为之前的数组已经转换成静态的 Float32Array\n\t                // 所以不够用时需要扩展一个新的动态数组\n\t                this._expandData();\n\t                data = this.data;\n\t            }\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                data[this._len++] = arguments[i];\n\t            }\n\t\n\t            this._prevCmd = cmd;\n\t        },\n\t\n\t        _expandData: function () {\n\t            // Only if data is Float32Array\n\t            if (!(this.data instanceof Array)) {\n\t                var newData = [];\n\t                for (var i = 0; i < this._len; i++) {\n\t                    newData[i] = this.data[i];\n\t                }\n\t                this.data = newData;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * If needs js implemented dashed line\n\t         * @return {boolean}\n\t         * @private\n\t         */\n\t        _needsDash: function () {\n\t            return this._lineDash;\n\t        },\n\t\n\t        _dashedLineTo: function (x1, y1) {\n\t            var dashSum = this._dashSum;\n\t            var offset = this._dashOffset;\n\t            var lineDash = this._lineDash;\n\t            var ctx = this._ctx;\n\t\n\t            var x0 = this._xi;\n\t            var y0 = this._yi;\n\t            var dx = x1 - x0;\n\t            var dy = y1 - y0;\n\t            var dist = mathSqrt(dx * dx + dy * dy);\n\t            var x = x0;\n\t            var y = y0;\n\t            var dash;\n\t            var nDash = lineDash.length;\n\t            var idx;\n\t            dx /= dist;\n\t            dy /= dist;\n\t\n\t            if (offset < 0) {\n\t                // Convert to positive offset\n\t                offset = dashSum + offset;\n\t            }\n\t            offset %= dashSum;\n\t            x -= offset * dx;\n\t            y -= offset * dy;\n\t\n\t            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n\t            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n\t                idx = this._dashIdx;\n\t                dash = lineDash[idx];\n\t                x += dx * dash;\n\t                y += dy * dash;\n\t                this._dashIdx = (idx + 1) % nDash;\n\t                // Skip positive offset\n\t                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n\t                    continue;\n\t                }\n\t                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n\t                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n\t                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n\t                );\n\t            }\n\t            // Offset for next lineTo\n\t            dx = x - x1;\n\t            dy = y - y1;\n\t            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n\t        },\n\t\n\t        // Not accurate dashed line to\n\t        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n\t            var dashSum = this._dashSum;\n\t            var offset = this._dashOffset;\n\t            var lineDash = this._lineDash;\n\t            var ctx = this._ctx;\n\t\n\t            var x0 = this._xi;\n\t            var y0 = this._yi;\n\t            var t;\n\t            var dx;\n\t            var dy;\n\t            var cubicAt = curve.cubicAt;\n\t            var bezierLen = 0;\n\t            var idx = this._dashIdx;\n\t            var nDash = lineDash.length;\n\t\n\t            var x;\n\t            var y;\n\t\n\t            var tmpLen = 0;\n\t\n\t            if (offset < 0) {\n\t                // Convert to positive offset\n\t                offset = dashSum + offset;\n\t            }\n\t            offset %= dashSum;\n\t            // Bezier approx length\n\t            for (t = 0; t < 1; t += 0.1) {\n\t                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n\t                    - cubicAt(x0, x1, x2, x3, t);\n\t                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n\t                    - cubicAt(y0, y1, y2, y3, t);\n\t                bezierLen += mathSqrt(dx * dx + dy * dy);\n\t            }\n\t\n\t            // Find idx after add offset\n\t            for (; idx < nDash; idx++) {\n\t                tmpLen += lineDash[idx];\n\t                if (tmpLen > offset) {\n\t                    break;\n\t                }\n\t            }\n\t            t = (tmpLen - offset) / bezierLen;\n\t\n\t            while (t <= 1) {\n\t\n\t                x = cubicAt(x0, x1, x2, x3, t);\n\t                y = cubicAt(y0, y1, y2, y3, t);\n\t\n\t                // Use line to approximate dashed bezier\n\t                // Bad result if dash is long\n\t                idx % 2 ? ctx.moveTo(x, y)\n\t                    : ctx.lineTo(x, y);\n\t\n\t                t += lineDash[idx] / bezierLen;\n\t\n\t                idx = (idx + 1) % nDash;\n\t            }\n\t\n\t            // Finish the last segment and calculate the new offset\n\t            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n\t            dx = x3 - x;\n\t            dy = y3 - y;\n\t            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n\t        },\n\t\n\t        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n\t            // Convert quadratic to cubic using degree elevation\n\t            var x3 = x2;\n\t            var y3 = y2;\n\t            x2 = (x2 + 2 * x1) / 3;\n\t            y2 = (y2 + 2 * y1) / 3;\n\t            x1 = (this._xi + 2 * x1) / 3;\n\t            y1 = (this._yi + 2 * y1) / 3;\n\t\n\t            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n\t        },\n\t\n\t        /**\n\t         * 转成静态的 Float32Array 减少堆内存占用\n\t         * Convert dynamic array to static Float32Array\n\t         */\n\t        toStatic: function () {\n\t            var data = this.data;\n\t            if (data instanceof Array) {\n\t                data.length = this._len;\n\t                if (hasTypedArray) {\n\t                    this.data = new Float32Array(data);\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @return {module:zrender/core/BoundingRect}\n\t         */\n\t        getBoundingRect: function () {\n\t            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n\t            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\t\n\t            var data = this.data;\n\t            var xi = 0;\n\t            var yi = 0;\n\t            var x0 = 0;\n\t            var y0 = 0;\n\t\n\t            for (var i = 0; i < data.length;) {\n\t                var cmd = data[i++];\n\t\n\t                if (i == 1) {\n\t                    // 如果第一个命令是 L, C, Q\n\t                    // 则 previous point 同绘制命令的第一个 point\n\t                    //\n\t                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n\t                    xi = data[i];\n\t                    yi = data[i + 1];\n\t\n\t                    x0 = xi;\n\t                    y0 = yi;\n\t                }\n\t\n\t                switch (cmd) {\n\t                    case CMD.M:\n\t                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n\t                        // 在 closePath 的时候使用\n\t                        x0 = data[i++];\n\t                        y0 = data[i++];\n\t                        xi = x0;\n\t                        yi = y0;\n\t                        min2[0] = x0;\n\t                        min2[1] = y0;\n\t                        max2[0] = x0;\n\t                        max2[1] = y0;\n\t                        break;\n\t                    case CMD.L:\n\t                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n\t                        xi = data[i++];\n\t                        yi = data[i++];\n\t                        break;\n\t                    case CMD.C:\n\t                        bbox.fromCubic(\n\t                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n\t                            min2, max2\n\t                        );\n\t                        xi = data[i++];\n\t                        yi = data[i++];\n\t                        break;\n\t                    case CMD.Q:\n\t                        bbox.fromQuadratic(\n\t                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n\t                            min2, max2\n\t                        );\n\t                        xi = data[i++];\n\t                        yi = data[i++];\n\t                        break;\n\t                    case CMD.A:\n\t                        // TODO Arc 判断的开销比较大\n\t                        var cx = data[i++];\n\t                        var cy = data[i++];\n\t                        var rx = data[i++];\n\t                        var ry = data[i++];\n\t                        var startAngle = data[i++];\n\t                        var endAngle = data[i++] + startAngle;\n\t                        // TODO Arc 旋转\n\t                        var psi = data[i++];\n\t                        var anticlockwise = 1 - data[i++];\n\t\n\t                        if (i == 1) {\n\t                            // 直接使用 arc 命令\n\t                            // 第一个命令起点还未定义\n\t                            x0 = mathCos(startAngle) * rx + cx;\n\t                            y0 = mathSin(startAngle) * ry + cy;\n\t                        }\n\t\n\t                        bbox.fromArc(\n\t                            cx, cy, rx, ry, startAngle, endAngle,\n\t                            anticlockwise, min2, max2\n\t                        );\n\t\n\t                        xi = mathCos(endAngle) * rx + cx;\n\t                        yi = mathSin(endAngle) * ry + cy;\n\t                        break;\n\t                    case CMD.R:\n\t                        x0 = xi = data[i++];\n\t                        y0 = yi = data[i++];\n\t                        var width = data[i++];\n\t                        var height = data[i++];\n\t                        // Use fromLine\n\t                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n\t                        break;\n\t                    case CMD.Z:\n\t                        xi = x0;\n\t                        yi = y0;\n\t                        break;\n\t                }\n\t\n\t                // Union\n\t                vec2.min(min, min, min2);\n\t                vec2.max(max, max, max2);\n\t            }\n\t\n\t            // No data\n\t            if (i === 0) {\n\t                min[0] = min[1] = max[0] = max[1] = 0;\n\t            }\n\t\n\t            return new BoundingRect(\n\t                min[0], min[1], max[0] - min[0], max[1] - min[1]\n\t            );\n\t        },\n\t\n\t        /**\n\t         * Rebuild path from current data\n\t         * Rebuild path will not consider javascript implemented line dash.\n\t         * @param {CanvasRenderingContext} ctx\n\t         */\n\t        rebuildPath: function (ctx) {\n\t            var d = this.data;\n\t            var x0, y0;\n\t            var xi, yi;\n\t            var x, y;\n\t            var ux = this._ux;\n\t            var uy = this._uy;\n\t            var len = this._len;\n\t            for (var i = 0; i < len;) {\n\t                var cmd = d[i++];\n\t\n\t                if (i == 1) {\n\t                    // 如果第一个命令是 L, C, Q\n\t                    // 则 previous point 同绘制命令的第一个 point\n\t                    //\n\t                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n\t                    xi = d[i];\n\t                    yi = d[i + 1];\n\t\n\t                    x0 = xi;\n\t                    y0 = yi;\n\t                }\n\t                switch (cmd) {\n\t                    case CMD.M:\n\t                        x0 = xi = d[i++];\n\t                        y0 = yi = d[i++];\n\t                        ctx.moveTo(xi, yi);\n\t                        break;\n\t                    case CMD.L:\n\t                        x = d[i++];\n\t                        y = d[i++];\n\t                        // Not draw too small seg between\n\t                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n\t                            ctx.lineTo(x, y);\n\t                            xi = x;\n\t                            yi = y;\n\t                        }\n\t                        break;\n\t                    case CMD.C:\n\t                        ctx.bezierCurveTo(\n\t                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n\t                        );\n\t                        xi = d[i - 2];\n\t                        yi = d[i - 1];\n\t                        break;\n\t                    case CMD.Q:\n\t                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n\t                        xi = d[i - 2];\n\t                        yi = d[i - 1];\n\t                        break;\n\t                    case CMD.A:\n\t                        var cx = d[i++];\n\t                        var cy = d[i++];\n\t                        var rx = d[i++];\n\t                        var ry = d[i++];\n\t                        var theta = d[i++];\n\t                        var dTheta = d[i++];\n\t                        var psi = d[i++];\n\t                        var fs = d[i++];\n\t                        var r = (rx > ry) ? rx : ry;\n\t                        var scaleX = (rx > ry) ? 1 : rx / ry;\n\t                        var scaleY = (rx > ry) ? ry / rx : 1;\n\t                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n\t                        var endAngle = theta + dTheta;\n\t                        if (isEllipse) {\n\t                            ctx.translate(cx, cy);\n\t                            ctx.rotate(psi);\n\t                            ctx.scale(scaleX, scaleY);\n\t                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n\t                            ctx.scale(1 / scaleX, 1 / scaleY);\n\t                            ctx.rotate(-psi);\n\t                            ctx.translate(-cx, -cy);\n\t                        }\n\t                        else {\n\t                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n\t                        }\n\t\n\t                        if (i == 1) {\n\t                            // 直接使用 arc 命令\n\t                            // 第一个命令起点还未定义\n\t                            x0 = mathCos(theta) * rx + cx;\n\t                            y0 = mathSin(theta) * ry + cy;\n\t                        }\n\t                        xi = mathCos(endAngle) * rx + cx;\n\t                        yi = mathSin(endAngle) * ry + cy;\n\t                        break;\n\t                    case CMD.R:\n\t                        x0 = xi = d[i];\n\t                        y0 = yi = d[i + 1];\n\t                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n\t                        break;\n\t                    case CMD.Z:\n\t                        ctx.closePath();\n\t                        xi = x0;\n\t                        yi = y0;\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    PathProxy.CMD = CMD;\n\t\n\t    module.exports = PathProxy;\n\n\n/***/ },\n/* 532 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 曲线辅助模块\n\t * @module zrender/core/curve\n\t * @author pissang(https://www.github.com/pissang)\n\t */\n\t\n\t\n\t    var vec2 = __webpack_require__(492);\n\t    var v2Create = vec2.create;\n\t    var v2DistSquare = vec2.distSquare;\n\t    var mathPow = Math.pow;\n\t    var mathSqrt = Math.sqrt;\n\t\n\t    var EPSILON = 1e-8;\n\t    var EPSILON_NUMERIC = 1e-4;\n\t\n\t    var THREE_SQRT = mathSqrt(3);\n\t    var ONE_THIRD = 1 / 3;\n\t\n\t    // 临时变量\n\t    var _v0 = v2Create();\n\t    var _v1 = v2Create();\n\t    var _v2 = v2Create();\n\t    // var _v3 = vec2.create();\n\t\n\t    function isAroundZero(val) {\n\t        return val > -EPSILON && val < EPSILON;\n\t    }\n\t    function isNotAroundZero(val) {\n\t        return val > EPSILON || val < -EPSILON;\n\t    }\n\t    /**\n\t     * 计算三次贝塞尔值\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {number} t\n\t     * @return {number}\n\t     */\n\t    function cubicAt(p0, p1, p2, p3, t) {\n\t        var onet = 1 - t;\n\t        return onet * onet * (onet * p0 + 3 * t * p1)\n\t             + t * t * (t * p3 + 3 * onet * p2);\n\t    }\n\t\n\t    /**\n\t     * 计算三次贝塞尔导数值\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {number} t\n\t     * @return {number}\n\t     */\n\t    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n\t        var onet = 1 - t;\n\t        return 3 * (\n\t            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n\t            + (p3 - p2) * t * t\n\t        );\n\t    }\n\t\n\t    /**\n\t     * 计算三次贝塞尔方程根，使用盛金公式\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {number} val\n\t     * @param  {Array.<number>} roots\n\t     * @return {number} 有效根数目\n\t     */\n\t    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n\t        // Evaluate roots of cubic functions\n\t        var a = p3 + 3 * (p1 - p2) - p0;\n\t        var b = 3 * (p2 - p1 * 2 + p0);\n\t        var c = 3 * (p1  - p0);\n\t        var d = p0 - val;\n\t\n\t        var A = b * b - 3 * a * c;\n\t        var B = b * c - 9 * a * d;\n\t        var C = c * c - 3 * b * d;\n\t\n\t        var n = 0;\n\t\n\t        if (isAroundZero(A) && isAroundZero(B)) {\n\t            if (isAroundZero(b)) {\n\t                roots[0] = 0;\n\t            }\n\t            else {\n\t                var t1 = -c / b;  //t1, t2, t3, b is not zero\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            var disc = B * B - 4 * A * C;\n\t\n\t            if (isAroundZero(disc)) {\n\t                var K = B / A;\n\t                var t1 = -b / a + K;  // t1, a is not zero\n\t                var t2 = -K / 2;  // t2, t3\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t                if (t2 >= 0 && t2 <= 1) {\n\t                    roots[n++] = t2;\n\t                }\n\t            }\n\t            else if (disc > 0) {\n\t                var discSqrt = mathSqrt(disc);\n\t                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n\t                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\t                if (Y1 < 0) {\n\t                    Y1 = -mathPow(-Y1, ONE_THIRD);\n\t                }\n\t                else {\n\t                    Y1 = mathPow(Y1, ONE_THIRD);\n\t                }\n\t                if (Y2 < 0) {\n\t                    Y2 = -mathPow(-Y2, ONE_THIRD);\n\t                }\n\t                else {\n\t                    Y2 = mathPow(Y2, ONE_THIRD);\n\t                }\n\t                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t            }\n\t            else {\n\t                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n\t                var theta = Math.acos(T) / 3;\n\t                var ASqrt = mathSqrt(A);\n\t                var tmp = Math.cos(theta);\n\t\n\t                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n\t                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n\t                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t                if (t2 >= 0 && t2 <= 1) {\n\t                    roots[n++] = t2;\n\t                }\n\t                if (t3 >= 0 && t3 <= 1) {\n\t                    roots[n++] = t3;\n\t                }\n\t            }\n\t        }\n\t        return n;\n\t    }\n\t\n\t    /**\n\t     * 计算三次贝塞尔方程极限值的位置\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {Array.<number>} extrema\n\t     * @return {number} 有效数目\n\t     */\n\t    function cubicExtrema(p0, p1, p2, p3, extrema) {\n\t        var b = 6 * p2 - 12 * p1 + 6 * p0;\n\t        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n\t        var c = 3 * p1 - 3 * p0;\n\t\n\t        var n = 0;\n\t        if (isAroundZero(a)) {\n\t            if (isNotAroundZero(b)) {\n\t                var t1 = -c / b;\n\t                if (t1 >= 0 && t1 <=1) {\n\t                    extrema[n++] = t1;\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            var disc = b * b - 4 * a * c;\n\t            if (isAroundZero(disc)) {\n\t                extrema[0] = -b / (2 * a);\n\t            }\n\t            else if (disc > 0) {\n\t                var discSqrt = mathSqrt(disc);\n\t                var t1 = (-b + discSqrt) / (2 * a);\n\t                var t2 = (-b - discSqrt) / (2 * a);\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    extrema[n++] = t1;\n\t                }\n\t                if (t2 >= 0 && t2 <= 1) {\n\t                    extrema[n++] = t2;\n\t                }\n\t            }\n\t        }\n\t        return n;\n\t    }\n\t\n\t    /**\n\t     * 细分三次贝塞尔曲线\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {number} t\n\t     * @param  {Array.<number>} out\n\t     */\n\t    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n\t        var p01 = (p1 - p0) * t + p0;\n\t        var p12 = (p2 - p1) * t + p1;\n\t        var p23 = (p3 - p2) * t + p2;\n\t\n\t        var p012 = (p12 - p01) * t + p01;\n\t        var p123 = (p23 - p12) * t + p12;\n\t\n\t        var p0123 = (p123 - p012) * t + p012;\n\t        // Seg0\n\t        out[0] = p0;\n\t        out[1] = p01;\n\t        out[2] = p012;\n\t        out[3] = p0123;\n\t        // Seg1\n\t        out[4] = p0123;\n\t        out[5] = p123;\n\t        out[6] = p23;\n\t        out[7] = p3;\n\t    }\n\t\n\t    /**\n\t     * 投射点到三次贝塞尔曲线上，返回投射距离。\n\t     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n\t     * @param {number} x0\n\t     * @param {number} y0\n\t     * @param {number} x1\n\t     * @param {number} y1\n\t     * @param {number} x2\n\t     * @param {number} y2\n\t     * @param {number} x3\n\t     * @param {number} y3\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param {Array.<number>} [out] 投射点\n\t     * @return {number}\n\t     */\n\t    function cubicProjectPoint(\n\t        x0, y0, x1, y1, x2, y2, x3, y3,\n\t        x, y, out\n\t    ) {\n\t        // http://pomax.github.io/bezierinfo/#projections\n\t        var t;\n\t        var interval = 0.005;\n\t        var d = Infinity;\n\t        var prev;\n\t        var next;\n\t        var d1;\n\t        var d2;\n\t\n\t        _v0[0] = x;\n\t        _v0[1] = y;\n\t\n\t        // 先粗略估计一下可能的最小距离的 t 值\n\t        // PENDING\n\t        for (var _t = 0; _t < 1; _t += 0.05) {\n\t            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n\t            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n\t            d1 = v2DistSquare(_v0, _v1);\n\t            if (d1 < d) {\n\t                t = _t;\n\t                d = d1;\n\t            }\n\t        }\n\t        d = Infinity;\n\t\n\t        // At most 32 iteration\n\t        for (var i = 0; i < 32; i++) {\n\t            if (interval < EPSILON_NUMERIC) {\n\t                break;\n\t            }\n\t            prev = t - interval;\n\t            next = t + interval;\n\t            // t - interval\n\t            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n\t            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\t\n\t            d1 = v2DistSquare(_v1, _v0);\n\t\n\t            if (prev >= 0 && d1 < d) {\n\t                t = prev;\n\t                d = d1;\n\t            }\n\t            else {\n\t                // t + interval\n\t                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n\t                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n\t                d2 = v2DistSquare(_v2, _v0);\n\t\n\t                if (next <= 1 && d2 < d) {\n\t                    t = next;\n\t                    d = d2;\n\t                }\n\t                else {\n\t                    interval *= 0.5;\n\t                }\n\t            }\n\t        }\n\t        // t\n\t        if (out) {\n\t            out[0] = cubicAt(x0, x1, x2, x3, t);\n\t            out[1] = cubicAt(y0, y1, y2, y3, t);\n\t        }\n\t        // console.log(interval, i);\n\t        return mathSqrt(d);\n\t    }\n\t\n\t    /**\n\t     * 计算二次方贝塞尔值\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} t\n\t     * @return {number}\n\t     */\n\t    function quadraticAt(p0, p1, p2, t) {\n\t        var onet = 1 - t;\n\t        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n\t    }\n\t\n\t    /**\n\t     * 计算二次方贝塞尔导数值\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} t\n\t     * @return {number}\n\t     */\n\t    function quadraticDerivativeAt(p0, p1, p2, t) {\n\t        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n\t    }\n\t\n\t    /**\n\t     * 计算二次方贝塞尔方程根\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} t\n\t     * @param  {Array.<number>} roots\n\t     * @return {number} 有效根数目\n\t     */\n\t    function quadraticRootAt(p0, p1, p2, val, roots) {\n\t        var a = p0 - 2 * p1 + p2;\n\t        var b = 2 * (p1 - p0);\n\t        var c = p0 - val;\n\t\n\t        var n = 0;\n\t        if (isAroundZero(a)) {\n\t            if (isNotAroundZero(b)) {\n\t                var t1 = -c / b;\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            var disc = b * b - 4 * a * c;\n\t            if (isAroundZero(disc)) {\n\t                var t1 = -b / (2 * a);\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t            }\n\t            else if (disc > 0) {\n\t                var discSqrt = mathSqrt(disc);\n\t                var t1 = (-b + discSqrt) / (2 * a);\n\t                var t2 = (-b - discSqrt) / (2 * a);\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t                if (t2 >= 0 && t2 <= 1) {\n\t                    roots[n++] = t2;\n\t                }\n\t            }\n\t        }\n\t        return n;\n\t    }\n\t\n\t    /**\n\t     * 计算二次贝塞尔方程极限值\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @return {number}\n\t     */\n\t    function quadraticExtremum(p0, p1, p2) {\n\t        var divider = p0 + p2 - 2 * p1;\n\t        if (divider === 0) {\n\t            // p1 is center of p0 and p2\n\t            return 0.5;\n\t        }\n\t        else {\n\t            return (p0 - p1) / divider;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 细分二次贝塞尔曲线\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} t\n\t     * @param  {Array.<number>} out\n\t     */\n\t    function quadraticSubdivide(p0, p1, p2, t, out) {\n\t        var p01 = (p1 - p0) * t + p0;\n\t        var p12 = (p2 - p1) * t + p1;\n\t        var p012 = (p12 - p01) * t + p01;\n\t\n\t        // Seg0\n\t        out[0] = p0;\n\t        out[1] = p01;\n\t        out[2] = p012;\n\t\n\t        // Seg1\n\t        out[3] = p012;\n\t        out[4] = p12;\n\t        out[5] = p2;\n\t    }\n\t\n\t    /**\n\t     * 投射点到二次贝塞尔曲线上，返回投射距离。\n\t     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n\t     * @param {number} x0\n\t     * @param {number} y0\n\t     * @param {number} x1\n\t     * @param {number} y1\n\t     * @param {number} x2\n\t     * @param {number} y2\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param {Array.<number>} out 投射点\n\t     * @return {number}\n\t     */\n\t    function quadraticProjectPoint(\n\t        x0, y0, x1, y1, x2, y2,\n\t        x, y, out\n\t    ) {\n\t        // http://pomax.github.io/bezierinfo/#projections\n\t        var t;\n\t        var interval = 0.005;\n\t        var d = Infinity;\n\t\n\t        _v0[0] = x;\n\t        _v0[1] = y;\n\t\n\t        // 先粗略估计一下可能的最小距离的 t 值\n\t        // PENDING\n\t        for (var _t = 0; _t < 1; _t += 0.05) {\n\t            _v1[0] = quadraticAt(x0, x1, x2, _t);\n\t            _v1[1] = quadraticAt(y0, y1, y2, _t);\n\t            var d1 = v2DistSquare(_v0, _v1);\n\t            if (d1 < d) {\n\t                t = _t;\n\t                d = d1;\n\t            }\n\t        }\n\t        d = Infinity;\n\t\n\t        // At most 32 iteration\n\t        for (var i = 0; i < 32; i++) {\n\t            if (interval < EPSILON_NUMERIC) {\n\t                break;\n\t            }\n\t            var prev = t - interval;\n\t            var next = t + interval;\n\t            // t - interval\n\t            _v1[0] = quadraticAt(x0, x1, x2, prev);\n\t            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\t\n\t            var d1 = v2DistSquare(_v1, _v0);\n\t\n\t            if (prev >= 0 && d1 < d) {\n\t                t = prev;\n\t                d = d1;\n\t            }\n\t            else {\n\t                // t + interval\n\t                _v2[0] = quadraticAt(x0, x1, x2, next);\n\t                _v2[1] = quadraticAt(y0, y1, y2, next);\n\t                var d2 = v2DistSquare(_v2, _v0);\n\t                if (next <= 1 && d2 < d) {\n\t                    t = next;\n\t                    d = d2;\n\t                }\n\t                else {\n\t                    interval *= 0.5;\n\t                }\n\t            }\n\t        }\n\t        // t\n\t        if (out) {\n\t            out[0] = quadraticAt(x0, x1, x2, t);\n\t            out[1] = quadraticAt(y0, y1, y2, t);\n\t        }\n\t        // console.log(interval, i);\n\t        return mathSqrt(d);\n\t    }\n\t\n\t    module.exports = {\n\t\n\t        cubicAt: cubicAt,\n\t\n\t        cubicDerivativeAt: cubicDerivativeAt,\n\t\n\t        cubicRootAt: cubicRootAt,\n\t\n\t        cubicExtrema: cubicExtrema,\n\t\n\t        cubicSubdivide: cubicSubdivide,\n\t\n\t        cubicProjectPoint: cubicProjectPoint,\n\t\n\t        quadraticAt: quadraticAt,\n\t\n\t        quadraticDerivativeAt: quadraticDerivativeAt,\n\t\n\t        quadraticRootAt: quadraticRootAt,\n\t\n\t        quadraticExtremum: quadraticExtremum,\n\t\n\t        quadraticSubdivide: quadraticSubdivide,\n\t\n\t        quadraticProjectPoint: quadraticProjectPoint\n\t    };\n\n\n/***/ },\n/* 533 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author Yi Shen(https://github.com/pissang)\n\t */\n\t\n\t\n\t    var vec2 = __webpack_require__(492);\n\t    var curve = __webpack_require__(532);\n\t\n\t    var bbox = {};\n\t    var mathMin = Math.min;\n\t    var mathMax = Math.max;\n\t    var mathSin = Math.sin;\n\t    var mathCos = Math.cos;\n\t\n\t    var start = vec2.create();\n\t    var end = vec2.create();\n\t    var extremity = vec2.create();\n\t\n\t    var PI2 = Math.PI * 2;\n\t    /**\n\t     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n\t     * @module zrender/core/bbox\n\t     * @param {Array<Object>} points 顶点数组\n\t     * @param {number} min\n\t     * @param {number} max\n\t     */\n\t    bbox.fromPoints = function(points, min, max) {\n\t        if (points.length === 0) {\n\t            return;\n\t        }\n\t        var p = points[0];\n\t        var left = p[0];\n\t        var right = p[0];\n\t        var top = p[1];\n\t        var bottom = p[1];\n\t        var i;\n\t\n\t        for (i = 1; i < points.length; i++) {\n\t            p = points[i];\n\t            left = mathMin(left, p[0]);\n\t            right = mathMax(right, p[0]);\n\t            top = mathMin(top, p[1]);\n\t            bottom = mathMax(bottom, p[1]);\n\t        }\n\t\n\t        min[0] = left;\n\t        min[1] = top;\n\t        max[0] = right;\n\t        max[1] = bottom;\n\t    };\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/bbox\n\t     * @param {number} x0\n\t     * @param {number} y0\n\t     * @param {number} x1\n\t     * @param {number} y1\n\t     * @param {Array.<number>} min\n\t     * @param {Array.<number>} max\n\t     */\n\t    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n\t        min[0] = mathMin(x0, x1);\n\t        min[1] = mathMin(y0, y1);\n\t        max[0] = mathMax(x0, x1);\n\t        max[1] = mathMax(y0, y1);\n\t    };\n\t\n\t    var xDim = [];\n\t    var yDim = [];\n\t    /**\n\t     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n\t     * @memberOf module:zrender/core/bbox\n\t     * @param {number} x0\n\t     * @param {number} y0\n\t     * @param {number} x1\n\t     * @param {number} y1\n\t     * @param {number} x2\n\t     * @param {number} y2\n\t     * @param {number} x3\n\t     * @param {number} y3\n\t     * @param {Array.<number>} min\n\t     * @param {Array.<number>} max\n\t     */\n\t    bbox.fromCubic = function(\n\t        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n\t    ) {\n\t        var cubicExtrema = curve.cubicExtrema;\n\t        var cubicAt = curve.cubicAt;\n\t        var i;\n\t        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n\t        min[0] = Infinity;\n\t        min[1] = Infinity;\n\t        max[0] = -Infinity;\n\t        max[1] = -Infinity;\n\t\n\t        for (i = 0; i < n; i++) {\n\t            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n\t            min[0] = mathMin(x, min[0]);\n\t            max[0] = mathMax(x, max[0]);\n\t        }\n\t        n = cubicExtrema(y0, y1, y2, y3, yDim);\n\t        for (i = 0; i < n; i++) {\n\t            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n\t            min[1] = mathMin(y, min[1]);\n\t            max[1] = mathMax(y, max[1]);\n\t        }\n\t\n\t        min[0] = mathMin(x0, min[0]);\n\t        max[0] = mathMax(x0, max[0]);\n\t        min[0] = mathMin(x3, min[0]);\n\t        max[0] = mathMax(x3, max[0]);\n\t\n\t        min[1] = mathMin(y0, min[1]);\n\t        max[1] = mathMax(y0, max[1]);\n\t        min[1] = mathMin(y3, min[1]);\n\t        max[1] = mathMax(y3, max[1]);\n\t    };\n\t\n\t    /**\n\t     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n\t     * @memberOf module:zrender/core/bbox\n\t     * @param {number} x0\n\t     * @param {number} y0\n\t     * @param {number} x1\n\t     * @param {number} y1\n\t     * @param {number} x2\n\t     * @param {number} y2\n\t     * @param {Array.<number>} min\n\t     * @param {Array.<number>} max\n\t     */\n\t    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n\t        var quadraticExtremum = curve.quadraticExtremum;\n\t        var quadraticAt = curve.quadraticAt;\n\t        // Find extremities, where derivative in x dim or y dim is zero\n\t        var tx =\n\t            mathMax(\n\t                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n\t            );\n\t        var ty =\n\t            mathMax(\n\t                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n\t            );\n\t\n\t        var x = quadraticAt(x0, x1, x2, tx);\n\t        var y = quadraticAt(y0, y1, y2, ty);\n\t\n\t        min[0] = mathMin(x0, x2, x);\n\t        min[1] = mathMin(y0, y2, y);\n\t        max[0] = mathMax(x0, x2, x);\n\t        max[1] = mathMax(y0, y2, y);\n\t    };\n\t\n\t    /**\n\t     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n\t     * @method\n\t     * @memberOf module:zrender/core/bbox\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param {number} rx\n\t     * @param {number} ry\n\t     * @param {number} startAngle\n\t     * @param {number} endAngle\n\t     * @param {number} anticlockwise\n\t     * @param {Array.<number>} min\n\t     * @param {Array.<number>} max\n\t     */\n\t    bbox.fromArc = function (\n\t        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n\t    ) {\n\t        var vec2Min = vec2.min;\n\t        var vec2Max = vec2.max;\n\t\n\t        var diff = Math.abs(startAngle - endAngle);\n\t\n\t\n\t        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n\t            // Is a circle\n\t            min[0] = x - rx;\n\t            min[1] = y - ry;\n\t            max[0] = x + rx;\n\t            max[1] = y + ry;\n\t            return;\n\t        }\n\t\n\t        start[0] = mathCos(startAngle) * rx + x;\n\t        start[1] = mathSin(startAngle) * ry + y;\n\t\n\t        end[0] = mathCos(endAngle) * rx + x;\n\t        end[1] = mathSin(endAngle) * ry + y;\n\t\n\t        vec2Min(min, start, end);\n\t        vec2Max(max, start, end);\n\t\n\t        // Thresh to [0, Math.PI * 2]\n\t        startAngle = startAngle % (PI2);\n\t        if (startAngle < 0) {\n\t            startAngle = startAngle + PI2;\n\t        }\n\t        endAngle = endAngle % (PI2);\n\t        if (endAngle < 0) {\n\t            endAngle = endAngle + PI2;\n\t        }\n\t\n\t        if (startAngle > endAngle && !anticlockwise) {\n\t            endAngle += PI2;\n\t        }\n\t        else if (startAngle < endAngle && anticlockwise) {\n\t            startAngle += PI2;\n\t        }\n\t        if (anticlockwise) {\n\t            var tmp = endAngle;\n\t            endAngle = startAngle;\n\t            startAngle = tmp;\n\t        }\n\t\n\t        // var number = 0;\n\t        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\t        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n\t            if (angle > startAngle) {\n\t                extremity[0] = mathCos(angle) * rx + x;\n\t                extremity[1] = mathSin(angle) * ry + y;\n\t\n\t                vec2Min(min, extremity, min);\n\t                vec2Max(max, extremity, max);\n\t            }\n\t        }\n\t    };\n\t\n\t    module.exports = bbox;\n\t\n\n\n/***/ },\n/* 534 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var CMD = __webpack_require__(531).CMD;\n\t    var line = __webpack_require__(535);\n\t    var cubic = __webpack_require__(536);\n\t    var quadratic = __webpack_require__(537);\n\t    var arc = __webpack_require__(538);\n\t    var normalizeRadian = __webpack_require__(539).normalizeRadian;\n\t    var curve = __webpack_require__(532);\n\t\n\t    var windingLine = __webpack_require__(540);\n\t\n\t    var containStroke = line.containStroke;\n\t\n\t    var PI2 = Math.PI * 2;\n\t\n\t    var EPSILON = 1e-4;\n\t\n\t    function isAroundEqual(a, b) {\n\t        return Math.abs(a - b) < EPSILON;\n\t    }\n\t\n\t    // 临时数组\n\t    var roots = [-1, -1, -1];\n\t    var extrema = [-1, -1];\n\t\n\t    function swapExtrema() {\n\t        var tmp = extrema[0];\n\t        extrema[0] = extrema[1];\n\t        extrema[1] = tmp;\n\t    }\n\t\n\t    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n\t        // Quick reject\n\t        if (\n\t            (y > y0 && y > y1 && y > y2 && y > y3)\n\t            || (y < y0 && y < y1 && y < y2 && y < y3)\n\t        ) {\n\t            return 0;\n\t        }\n\t        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\t        if (nRoots === 0) {\n\t            return 0;\n\t        }\n\t        else {\n\t            var w = 0;\n\t            var nExtrema = -1;\n\t            var y0_, y1_;\n\t            for (var i = 0; i < nRoots; i++) {\n\t                var t = roots[i];\n\t\n\t                // Avoid winding error when intersection point is the connect point of two line of polygon\n\t                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\t\n\t                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\t                if (x_ < x) { // Quick reject\n\t                    continue;\n\t                }\n\t                if (nExtrema < 0) {\n\t                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\t                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n\t                        swapExtrema();\n\t                    }\n\t                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\t                    if (nExtrema > 1) {\n\t                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n\t                    }\n\t                }\n\t                if (nExtrema == 2) {\n\t                    // 分成三段单调函数\n\t                    if (t < extrema[0]) {\n\t                        w += y0_ < y0 ? unit : -unit;\n\t                    }\n\t                    else if (t < extrema[1]) {\n\t                        w += y1_ < y0_ ? unit : -unit;\n\t                    }\n\t                    else {\n\t                        w += y3 < y1_ ? unit : -unit;\n\t                    }\n\t                }\n\t                else {\n\t                    // 分成两段单调函数\n\t                    if (t < extrema[0]) {\n\t                        w += y0_ < y0 ? unit : -unit;\n\t                    }\n\t                    else {\n\t                        w += y3 < y0_ ? unit : -unit;\n\t                    }\n\t                }\n\t            }\n\t            return w;\n\t        }\n\t    }\n\t\n\t    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n\t        // Quick reject\n\t        if (\n\t            (y > y0 && y > y1 && y > y2)\n\t            || (y < y0 && y < y1 && y < y2)\n\t        ) {\n\t            return 0;\n\t        }\n\t        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\t        if (nRoots === 0) {\n\t            return 0;\n\t        }\n\t        else {\n\t            var t = curve.quadraticExtremum(y0, y1, y2);\n\t            if (t >= 0 && t <= 1) {\n\t                var w = 0;\n\t                var y_ = curve.quadraticAt(y0, y1, y2, t);\n\t                for (var i = 0; i < nRoots; i++) {\n\t                    // Remove one endpoint.\n\t                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\t\n\t                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\t                    if (x_ < x) {   // Quick reject\n\t                        continue;\n\t                    }\n\t                    if (roots[i] < t) {\n\t                        w += y_ < y0 ? unit : -unit;\n\t                    }\n\t                    else {\n\t                        w += y2 < y_ ? unit : -unit;\n\t                    }\n\t                }\n\t                return w;\n\t            }\n\t            else {\n\t                // Remove one endpoint.\n\t                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\t\n\t                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\t                if (x_ < x) {   // Quick reject\n\t                    return 0;\n\t                }\n\t                return y2 < y0 ? unit : -unit;\n\t            }\n\t        }\n\t    }\n\t\n\t    // TODO\n\t    // Arc 旋转\n\t    function windingArc(\n\t        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n\t    ) {\n\t        y -= cy;\n\t        if (y > r || y < -r) {\n\t            return 0;\n\t        }\n\t        var tmp = Math.sqrt(r * r - y * y);\n\t        roots[0] = -tmp;\n\t        roots[1] = tmp;\n\t\n\t        var diff = Math.abs(startAngle - endAngle);\n\t        if (diff < 1e-4) {\n\t            return 0;\n\t        }\n\t        if (diff % PI2 < 1e-4) {\n\t            // Is a circle\n\t            startAngle = 0;\n\t            endAngle = PI2;\n\t            var dir = anticlockwise ? 1 : -1;\n\t            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n\t                return dir;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t\n\t        if (anticlockwise) {\n\t            var tmp = startAngle;\n\t            startAngle = normalizeRadian(endAngle);\n\t            endAngle = normalizeRadian(tmp);\n\t        }\n\t        else {\n\t            startAngle = normalizeRadian(startAngle);\n\t            endAngle = normalizeRadian(endAngle);\n\t        }\n\t        if (startAngle > endAngle) {\n\t            endAngle += PI2;\n\t        }\n\t\n\t        var w = 0;\n\t        for (var i = 0; i < 2; i++) {\n\t            var x_ = roots[i];\n\t            if (x_ + cx > x) {\n\t                var angle = Math.atan2(y, x_);\n\t                var dir = anticlockwise ? 1 : -1;\n\t                if (angle < 0) {\n\t                    angle = PI2 + angle;\n\t                }\n\t                if (\n\t                    (angle >= startAngle && angle <= endAngle)\n\t                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n\t                ) {\n\t                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n\t                        dir = -dir;\n\t                    }\n\t                    w += dir;\n\t                }\n\t            }\n\t        }\n\t        return w;\n\t    }\n\t\n\t    function containPath(data, lineWidth, isStroke, x, y) {\n\t        var w = 0;\n\t        var xi = 0;\n\t        var yi = 0;\n\t        var x0 = 0;\n\t        var y0 = 0;\n\t\n\t        for (var i = 0; i < data.length;) {\n\t            var cmd = data[i++];\n\t            // Begin a new subpath\n\t            if (cmd === CMD.M && i > 1) {\n\t                // Close previous subpath\n\t                if (!isStroke) {\n\t                    w += windingLine(xi, yi, x0, y0, x, y);\n\t                }\n\t                // 如果被任何一个 subpath 包含\n\t                // if (w !== 0) {\n\t                //     return true;\n\t                // }\n\t            }\n\t\n\t            if (i == 1) {\n\t                // 如果第一个命令是 L, C, Q\n\t                // 则 previous point 同绘制命令的第一个 point\n\t                //\n\t                // 第一个命令为 Arc 的情况下会在后面特殊处理\n\t                xi = data[i];\n\t                yi = data[i + 1];\n\t\n\t                x0 = xi;\n\t                y0 = yi;\n\t            }\n\t\n\t            switch (cmd) {\n\t                case CMD.M:\n\t                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n\t                    // 在 closePath 的时候使用\n\t                    x0 = data[i++];\n\t                    y0 = data[i++];\n\t                    xi = x0;\n\t                    yi = y0;\n\t                    break;\n\t                case CMD.L:\n\t                    if (isStroke) {\n\t                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n\t                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n\t                    }\n\t                    xi = data[i++];\n\t                    yi = data[i++];\n\t                    break;\n\t                case CMD.C:\n\t                    if (isStroke) {\n\t                        if (cubic.containStroke(xi, yi,\n\t                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n\t                            lineWidth, x, y\n\t                        )) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        w += windingCubic(\n\t                            xi, yi,\n\t                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n\t                            x, y\n\t                        ) || 0;\n\t                    }\n\t                    xi = data[i++];\n\t                    yi = data[i++];\n\t                    break;\n\t                case CMD.Q:\n\t                    if (isStroke) {\n\t                        if (quadratic.containStroke(xi, yi,\n\t                            data[i++], data[i++], data[i], data[i + 1],\n\t                            lineWidth, x, y\n\t                        )) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        w += windingQuadratic(\n\t                            xi, yi,\n\t                            data[i++], data[i++], data[i], data[i + 1],\n\t                            x, y\n\t                        ) || 0;\n\t                    }\n\t                    xi = data[i++];\n\t                    yi = data[i++];\n\t                    break;\n\t                case CMD.A:\n\t                    // TODO Arc 判断的开销比较大\n\t                    var cx = data[i++];\n\t                    var cy = data[i++];\n\t                    var rx = data[i++];\n\t                    var ry = data[i++];\n\t                    var theta = data[i++];\n\t                    var dTheta = data[i++];\n\t                    // TODO Arc 旋转\n\t                    var psi = data[i++];\n\t                    var anticlockwise = 1 - data[i++];\n\t                    var x1 = Math.cos(theta) * rx + cx;\n\t                    var y1 = Math.sin(theta) * ry + cy;\n\t                    // 不是直接使用 arc 命令\n\t                    if (i > 1) {\n\t                        w += windingLine(xi, yi, x1, y1, x, y);\n\t                    }\n\t                    else {\n\t                        // 第一个命令起点还未定义\n\t                        x0 = x1;\n\t                        y0 = y1;\n\t                    }\n\t                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\t                    var _x = (x - cx) * ry / rx + cx;\n\t                    if (isStroke) {\n\t                        if (arc.containStroke(\n\t                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n\t                            lineWidth, _x, y\n\t                        )) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        w += windingArc(\n\t                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n\t                            _x, y\n\t                        );\n\t                    }\n\t                    xi = Math.cos(theta + dTheta) * rx + cx;\n\t                    yi = Math.sin(theta + dTheta) * ry + cy;\n\t                    break;\n\t                case CMD.R:\n\t                    x0 = xi = data[i++];\n\t                    y0 = yi = data[i++];\n\t                    var width = data[i++];\n\t                    var height = data[i++];\n\t                    var x1 = x0 + width;\n\t                    var y1 = y0 + height;\n\t                    if (isStroke) {\n\t                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n\t                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n\t                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n\t                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n\t                        ) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        // FIXME Clockwise ?\n\t                        w += windingLine(x1, y0, x1, y1, x, y);\n\t                        w += windingLine(x0, y1, x0, y0, x, y);\n\t                    }\n\t                    break;\n\t                case CMD.Z:\n\t                    if (isStroke) {\n\t                        if (containStroke(\n\t                            xi, yi, x0, y0, lineWidth, x, y\n\t                        )) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        // Close a subpath\n\t                        w += windingLine(xi, yi, x0, y0, x, y);\n\t                        // 如果被任何一个 subpath 包含\n\t                        // FIXME subpaths may overlap\n\t                        // if (w !== 0) {\n\t                        //     return true;\n\t                        // }\n\t                    }\n\t                    xi = x0;\n\t                    yi = y0;\n\t                    break;\n\t            }\n\t        }\n\t        if (!isStroke && !isAroundEqual(yi, y0)) {\n\t            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n\t        }\n\t        return w !== 0;\n\t    }\n\t\n\t    module.exports = {\n\t        contain: function (pathData, x, y) {\n\t            return containPath(pathData, 0, false, x, y);\n\t        },\n\t\n\t        containStroke: function (pathData, lineWidth, x, y) {\n\t            return containPath(pathData, lineWidth, true, x, y);\n\t        }\n\t    };\n\n\n/***/ },\n/* 535 */\n/***/ function(module, exports) {\n\n\t\n\t    module.exports = {\n\t        /**\n\t         * 线段包含判断\n\t         * @param  {number}  x0\n\t         * @param  {number}  y0\n\t         * @param  {number}  x1\n\t         * @param  {number}  y1\n\t         * @param  {number}  lineWidth\n\t         * @param  {number}  x\n\t         * @param  {number}  y\n\t         * @return {boolean}\n\t         */\n\t        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n\t            if (lineWidth === 0) {\n\t                return false;\n\t            }\n\t            var _l = lineWidth;\n\t            var _a = 0;\n\t            var _b = x0;\n\t            // Quick reject\n\t            if (\n\t                (y > y0 + _l && y > y1 + _l)\n\t                || (y < y0 - _l && y < y1 - _l)\n\t                || (x > x0 + _l && x > x1 + _l)\n\t                || (x < x0 - _l && x < x1 - _l)\n\t            ) {\n\t                return false;\n\t            }\n\t\n\t            if (x0 !== x1) {\n\t                _a = (y0 - y1) / (x0 - x1);\n\t                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n\t            }\n\t            else {\n\t                return Math.abs(x - x0) <= _l / 2;\n\t            }\n\t            var tmp = _a * x - y + _b;\n\t            var _s = tmp * tmp / (_a * _a + 1);\n\t            return _s <= _l / 2 * _l / 2;\n\t        }\n\t    };\n\n\n/***/ },\n/* 536 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var curve = __webpack_require__(532);\n\t\n\t    module.exports = {\n\t        /**\n\t         * 三次贝塞尔曲线描边包含判断\n\t         * @param  {number}  x0\n\t         * @param  {number}  y0\n\t         * @param  {number}  x1\n\t         * @param  {number}  y1\n\t         * @param  {number}  x2\n\t         * @param  {number}  y2\n\t         * @param  {number}  x3\n\t         * @param  {number}  y3\n\t         * @param  {number}  lineWidth\n\t         * @param  {number}  x\n\t         * @param  {number}  y\n\t         * @return {boolean}\n\t         */\n\t        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n\t            if (lineWidth === 0) {\n\t                return false;\n\t            }\n\t            var _l = lineWidth;\n\t            // Quick reject\n\t            if (\n\t                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n\t                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n\t                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n\t                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n\t            ) {\n\t                return false;\n\t            }\n\t            var d = curve.cubicProjectPoint(\n\t                x0, y0, x1, y1, x2, y2, x3, y3,\n\t                x, y, null\n\t            );\n\t            return d <= _l / 2;\n\t        }\n\t    };\n\n\n/***/ },\n/* 537 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var curve = __webpack_require__(532);\n\t\n\t    module.exports = {\n\t        /**\n\t         * 二次贝塞尔曲线描边包含判断\n\t         * @param  {number}  x0\n\t         * @param  {number}  y0\n\t         * @param  {number}  x1\n\t         * @param  {number}  y1\n\t         * @param  {number}  x2\n\t         * @param  {number}  y2\n\t         * @param  {number}  lineWidth\n\t         * @param  {number}  x\n\t         * @param  {number}  y\n\t         * @return {boolean}\n\t         */\n\t        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n\t            if (lineWidth === 0) {\n\t                return false;\n\t            }\n\t            var _l = lineWidth;\n\t            // Quick reject\n\t            if (\n\t                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n\t                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n\t                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n\t                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n\t            ) {\n\t                return false;\n\t            }\n\t            var d = curve.quadraticProjectPoint(\n\t                x0, y0, x1, y1, x2, y2,\n\t                x, y, null\n\t            );\n\t            return d <= _l / 2;\n\t        }\n\t    };\n\n\n/***/ },\n/* 538 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var normalizeRadian = __webpack_require__(539).normalizeRadian;\n\t    var PI2 = Math.PI * 2;\n\t\n\t    module.exports = {\n\t        /**\n\t         * 圆弧描边包含判断\n\t         * @param  {number}  cx\n\t         * @param  {number}  cy\n\t         * @param  {number}  r\n\t         * @param  {number}  startAngle\n\t         * @param  {number}  endAngle\n\t         * @param  {boolean}  anticlockwise\n\t         * @param  {number} lineWidth\n\t         * @param  {number}  x\n\t         * @param  {number}  y\n\t         * @return {Boolean}\n\t         */\n\t        containStroke: function (\n\t            cx, cy, r, startAngle, endAngle, anticlockwise,\n\t            lineWidth, x, y\n\t        ) {\n\t\n\t            if (lineWidth === 0) {\n\t                return false;\n\t            }\n\t            var _l = lineWidth;\n\t\n\t            x -= cx;\n\t            y -= cy;\n\t            var d = Math.sqrt(x * x + y * y);\n\t\n\t            if ((d - _l > r) || (d + _l < r)) {\n\t                return false;\n\t            }\n\t            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n\t                // Is a circle\n\t                return true;\n\t            }\n\t            if (anticlockwise) {\n\t                var tmp = startAngle;\n\t                startAngle = normalizeRadian(endAngle);\n\t                endAngle = normalizeRadian(tmp);\n\t            } else {\n\t                startAngle = normalizeRadian(startAngle);\n\t                endAngle = normalizeRadian(endAngle);\n\t            }\n\t            if (startAngle > endAngle) {\n\t                endAngle += PI2;\n\t            }\n\t\n\t            var angle = Math.atan2(y, x);\n\t            if (angle < 0) {\n\t                angle += PI2;\n\t            }\n\t            return (angle >= startAngle && angle <= endAngle)\n\t                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n\t        }\n\t    };\n\n\n/***/ },\n/* 539 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    var PI2 = Math.PI * 2;\n\t    module.exports = {\n\t        normalizeRadian: function(angle) {\n\t            angle %= PI2;\n\t            if (angle < 0) {\n\t                angle += PI2;\n\t            }\n\t            return angle;\n\t        }\n\t    };\n\n\n/***/ },\n/* 540 */\n/***/ function(module, exports) {\n\n\t\n\t    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n\t        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n\t            return 0;\n\t        }\n\t        // Ignore horizontal line\n\t        if (y1 === y0) {\n\t            return 0;\n\t        }\n\t        var dir = y1 < y0 ? 1 : -1;\n\t        var t = (y - y0) / (y1 - y0);\n\t\n\t        // Avoid winding error when intersection point is the connect point of two line of polygon\n\t        if (t === 1 || t === 0) {\n\t            dir = y1 < y0 ? 0.5 : -0.5;\n\t        }\n\t\n\t        var x_ = t * (x1 - x0) + x0;\n\t\n\t        return x_ > x ? dir : 0;\n\t    };\n\n\n/***/ },\n/* 541 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    var Pattern = function (image, repeat) {\n\t        this.image = image;\n\t        this.repeat = repeat;\n\t\n\t        // Can be cloned\n\t        this.type = 'pattern';\n\t    };\n\t\n\t    Pattern.prototype.getCanvasPattern = function (ctx) {\n\t\n\t        return this._canvasPattern\n\t            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));\n\t    };\n\t\n\t    module.exports = Pattern;\n\n\n/***/ },\n/* 542 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var CMD = __webpack_require__(531).CMD;\n\t    var vec2 = __webpack_require__(492);\n\t    var v2ApplyTransform = vec2.applyTransform;\n\t\n\t    var points = [[], [], []];\n\t    var mathSqrt = Math.sqrt;\n\t    var mathAtan2 = Math.atan2;\n\t    function transformPath(path, m) {\n\t        var data = path.data;\n\t        var cmd;\n\t        var nPoint;\n\t        var i;\n\t        var j;\n\t        var k;\n\t        var p;\n\t\n\t        var M = CMD.M;\n\t        var C = CMD.C;\n\t        var L = CMD.L;\n\t        var R = CMD.R;\n\t        var A = CMD.A;\n\t        var Q = CMD.Q;\n\t\n\t        for (i = 0, j = 0; i < data.length;) {\n\t            cmd = data[i++];\n\t            j = i;\n\t            nPoint = 0;\n\t\n\t            switch (cmd) {\n\t                case M:\n\t                    nPoint = 1;\n\t                    break;\n\t                case L:\n\t                    nPoint = 1;\n\t                    break;\n\t                case C:\n\t                    nPoint = 3;\n\t                    break;\n\t                case Q:\n\t                    nPoint = 2;\n\t                    break;\n\t                case A:\n\t                    var x = m[4];\n\t                    var y = m[5];\n\t                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n\t                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n\t                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n\t                    // cx\n\t                    data[i++] += x;\n\t                    // cy\n\t                    data[i++] += y;\n\t                    // Scale rx and ry\n\t                    // FIXME Assume psi is 0 here\n\t                    data[i++] *= sx;\n\t                    data[i++] *= sy;\n\t\n\t                    // Start angle\n\t                    data[i++] += angle;\n\t                    // end angle\n\t                    data[i++] += angle;\n\t                    // FIXME psi\n\t                    i += 2;\n\t                    j = i;\n\t                    break;\n\t                case R:\n\t                    // x0, y0\n\t                    p[0] = data[i++];\n\t                    p[1] = data[i++];\n\t                    v2ApplyTransform(p, p, m);\n\t                    data[j++] = p[0];\n\t                    data[j++] = p[1];\n\t                    // x1, y1\n\t                    p[0] += data[i++];\n\t                    p[1] += data[i++];\n\t                    v2ApplyTransform(p, p, m);\n\t                    data[j++] = p[0];\n\t                    data[j++] = p[1];\n\t            }\n\t\n\t            for (k = 0; k < nPoint; k++) {\n\t                var p = points[k];\n\t                p[0] = data[i++];\n\t                p[1] = data[i++];\n\t\n\t                v2ApplyTransform(p, p, m);\n\t                // Write back\n\t                data[j++] = p[0];\n\t                data[j++] = p[1];\n\t            }\n\t        }\n\t    }\n\t\n\t    module.exports = transformPath;\n\n\n/***/ },\n/* 543 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Image element\n\t * @module zrender/graphic/Image\n\t */\n\t\n\t\n\t\n\t    var Displayable = __webpack_require__(528);\n\t    var BoundingRect = __webpack_require__(491);\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var LRU = __webpack_require__(544);\n\t    var globalImageCache = new LRU(50);\n\t    /**\n\t     * @alias zrender/graphic/Image\n\t     * @extends module:zrender/graphic/Displayable\n\t     * @constructor\n\t     * @param {Object} opts\n\t     */\n\t    function ZImage(opts) {\n\t        Displayable.call(this, opts);\n\t    }\n\t\n\t    ZImage.prototype = {\n\t\n\t        constructor: ZImage,\n\t\n\t        type: 'image',\n\t\n\t        brush: function (ctx, prevEl) {\n\t            var style = this.style;\n\t            var src = style.image;\n\t            var image;\n\t\n\t            // Must bind each time\n\t            style.bind(ctx, this, prevEl);\n\t            // style.image is a url string\n\t            if (typeof src === 'string') {\n\t                image = this._image;\n\t            }\n\t            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n\t            else {\n\t                image = src;\n\t            }\n\t            // FIXME Case create many images with src\n\t            if (!image && src) {\n\t                // Try get from global image cache\n\t                var cachedImgObj = globalImageCache.get(src);\n\t                if (!cachedImgObj) {\n\t                    // Create a new image\n\t                    image = new Image();\n\t                    image.onload = function () {\n\t                        image.onload = null;\n\t                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n\t                            cachedImgObj.pending[i].dirty();\n\t                        }\n\t                    };\n\t                    cachedImgObj = {\n\t                        image: image,\n\t                        pending: [this]\n\t                    };\n\t                    image.src = src;\n\t                    globalImageCache.put(src, cachedImgObj);\n\t                    this._image = image;\n\t                    return;\n\t                }\n\t                else {\n\t                    image = cachedImgObj.image;\n\t                    this._image = image;\n\t                    // Image is not complete finish, add to pending list\n\t                    if (!image.width || !image.height) {\n\t                        cachedImgObj.pending.push(this);\n\t                        return;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (image) {\n\t                // 图片已经加载完成\n\t                // if (image.nodeName.toUpperCase() == 'IMG') {\n\t                //     if (!image.complete) {\n\t                //         return;\n\t                //     }\n\t                // }\n\t                // Else is canvas\n\t\n\t                var width = style.width || image.width;\n\t                var height = style.height || image.height;\n\t                var x = style.x || 0;\n\t                var y = style.y || 0;\n\t                // 图片加载失败\n\t                if (!image.width || !image.height) {\n\t                    return;\n\t                }\n\t\n\t                // 设置transform\n\t                this.setTransform(ctx);\n\t\n\t\n\t                if (style.sWidth && style.sHeight) {\n\t                    var sx = style.sx || 0;\n\t                    var sy = style.sy || 0;\n\t                    ctx.drawImage(\n\t                        image,\n\t                        sx, sy, style.sWidth, style.sHeight,\n\t                        x, y, width, height\n\t                    );\n\t                }\n\t                else if (style.sx && style.sy) {\n\t                    var sx = style.sx;\n\t                    var sy = style.sy;\n\t                    var sWidth = width - sx;\n\t                    var sHeight = height - sy;\n\t                    ctx.drawImage(\n\t                        image,\n\t                        sx, sy, sWidth, sHeight,\n\t                        x, y, width, height\n\t                    );\n\t                }\n\t                else {\n\t                    ctx.drawImage(image, x, y, width, height);\n\t                }\n\t\n\t                // 如果没设置宽和高的话自动根据图片宽高设置\n\t                if (style.width == null) {\n\t                    style.width = width;\n\t                }\n\t                if (style.height == null) {\n\t                    style.height = height;\n\t                }\n\t\n\t                this.restoreTransform(ctx);\n\t\n\t                // Draw rect text\n\t                if (style.text != null) {\n\t                    this.drawRectText(ctx, this.getBoundingRect());\n\t                }\n\t\n\t            }\n\t        },\n\t\n\t        getBoundingRect: function () {\n\t            var style = this.style;\n\t            if (! this._rect) {\n\t                this._rect = new BoundingRect(\n\t                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n\t                );\n\t            }\n\t            return this._rect;\n\t        }\n\t    };\n\t\n\t    zrUtil.inherits(ZImage, Displayable);\n\t\n\t    module.exports = ZImage;\n\n\n/***/ },\n/* 544 */\n/***/ function(module, exports) {\n\n\t// Simple LRU cache use doubly linked list\n\t// @module zrender/core/LRU\n\t\n\t\n\t    /**\n\t     * Simple double linked list. Compared with array, it has O(1) remove operation.\n\t     * @constructor\n\t     */\n\t    var LinkedList = function() {\n\t\n\t        /**\n\t         * @type {module:zrender/core/LRU~Entry}\n\t         */\n\t        this.head = null;\n\t\n\t        /**\n\t         * @type {module:zrender/core/LRU~Entry}\n\t         */\n\t        this.tail = null;\n\t\n\t        this._len = 0;\n\t    };\n\t\n\t    var linkedListProto = LinkedList.prototype;\n\t    /**\n\t     * Insert a new value at the tail\n\t     * @param  {} val\n\t     * @return {module:zrender/core/LRU~Entry}\n\t     */\n\t    linkedListProto.insert = function(val) {\n\t        var entry = new Entry(val);\n\t        this.insertEntry(entry);\n\t        return entry;\n\t    };\n\t\n\t    /**\n\t     * Insert an entry at the tail\n\t     * @param  {module:zrender/core/LRU~Entry} entry\n\t     */\n\t    linkedListProto.insertEntry = function(entry) {\n\t        if (!this.head) {\n\t            this.head = this.tail = entry;\n\t        }\n\t        else {\n\t            this.tail.next = entry;\n\t            entry.prev = this.tail;\n\t            this.tail = entry;\n\t        }\n\t        this._len++;\n\t    };\n\t\n\t    /**\n\t     * Remove entry.\n\t     * @param  {module:zrender/core/LRU~Entry} entry\n\t     */\n\t    linkedListProto.remove = function(entry) {\n\t        var prev = entry.prev;\n\t        var next = entry.next;\n\t        if (prev) {\n\t            prev.next = next;\n\t        }\n\t        else {\n\t            // Is head\n\t            this.head = next;\n\t        }\n\t        if (next) {\n\t            next.prev = prev;\n\t        }\n\t        else {\n\t            // Is tail\n\t            this.tail = prev;\n\t        }\n\t        entry.next = entry.prev = null;\n\t        this._len--;\n\t    };\n\t\n\t    /**\n\t     * @return {number}\n\t     */\n\t    linkedListProto.len = function() {\n\t        return this._len;\n\t    };\n\t\n\t    /**\n\t     * @constructor\n\t     * @param {} val\n\t     */\n\t    var Entry = function(val) {\n\t        /**\n\t         * @type {}\n\t         */\n\t        this.value = val;\n\t\n\t        /**\n\t         * @type {module:zrender/core/LRU~Entry}\n\t         */\n\t        this.next;\n\t\n\t        /**\n\t         * @type {module:zrender/core/LRU~Entry}\n\t         */\n\t        this.prev;\n\t    };\n\t\n\t    /**\n\t     * LRU Cache\n\t     * @constructor\n\t     * @alias module:zrender/core/LRU\n\t     */\n\t    var LRU = function(maxSize) {\n\t\n\t        this._list = new LinkedList();\n\t\n\t        this._map = {};\n\t\n\t        this._maxSize = maxSize || 10;\n\t    };\n\t\n\t    var LRUProto = LRU.prototype;\n\t\n\t    /**\n\t     * @param  {string} key\n\t     * @param  {} value\n\t     */\n\t    LRUProto.put = function(key, value) {\n\t        var list = this._list;\n\t        var map = this._map;\n\t        if (map[key] == null) {\n\t            var len = list.len();\n\t            if (len >= this._maxSize && len > 0) {\n\t                // Remove the least recently used\n\t                var leastUsedEntry = list.head;\n\t                list.remove(leastUsedEntry);\n\t                delete map[leastUsedEntry.key];\n\t            }\n\t\n\t            var entry = list.insert(value);\n\t            entry.key = key;\n\t            map[key] = entry;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @param  {string} key\n\t     * @return {}\n\t     */\n\t    LRUProto.get = function(key) {\n\t        var entry = this._map[key];\n\t        var list = this._list;\n\t        if (entry != null) {\n\t            // Put the latest used entry in the tail\n\t            if (entry !== list.tail) {\n\t                list.remove(entry);\n\t                list.insertEntry(entry);\n\t            }\n\t\n\t            return entry.value;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Clear the cache\n\t     */\n\t    LRUProto.clear = function() {\n\t        this._list.clear();\n\t        this._map = {};\n\t    };\n\t\n\t    module.exports = LRU;\n\n\n/***/ },\n/* 545 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Text element\n\t * @module zrender/graphic/Text\n\t *\n\t * TODO Wrapping\n\t *\n\t * Text not support gradient\n\t */\n\t\n\t\n\t\n\t    var Displayable = __webpack_require__(528);\n\t    var zrUtil = __webpack_require__(483);\n\t    var textContain = __webpack_require__(490);\n\t\n\t    /**\n\t     * @alias zrender/graphic/Text\n\t     * @extends module:zrender/graphic/Displayable\n\t     * @constructor\n\t     * @param {Object} opts\n\t     */\n\t    var Text = function (opts) {\n\t        Displayable.call(this, opts);\n\t    };\n\t\n\t    Text.prototype = {\n\t\n\t        constructor: Text,\n\t\n\t        type: 'text',\n\t\n\t        brush: function (ctx, prevEl) {\n\t            var style = this.style;\n\t            var x = style.x || 0;\n\t            var y = style.y || 0;\n\t            // Convert to string\n\t            var text = style.text;\n\t\n\t            // Convert to string\n\t            text != null && (text += '');\n\t\n\t            // Always bind style\n\t            style.bind(ctx, this, prevEl);\n\t\n\t            if (text) {\n\t\n\t                this.setTransform(ctx);\n\t\n\t                var textBaseline;\n\t                var textAlign = style.textAlign;\n\t                var font = style.textFont || style.font;\n\t                if (style.textVerticalAlign) {\n\t                    var rect = textContain.getBoundingRect(\n\t                        text, font, style.textAlign, 'top'\n\t                    );\n\t                    // Ignore textBaseline\n\t                    textBaseline = 'middle';\n\t                    switch (style.textVerticalAlign) {\n\t                        case 'middle':\n\t                            y -= rect.height / 2 - rect.lineHeight / 2;\n\t                            break;\n\t                        case 'bottom':\n\t                            y -= rect.height - rect.lineHeight / 2;\n\t                            break;\n\t                        default:\n\t                            y += rect.lineHeight / 2;\n\t                    }\n\t                }\n\t                else {\n\t                    textBaseline = style.textBaseline;\n\t                }\n\t\n\t                // TODO Invalid font\n\t                ctx.font = font || '12px sans-serif';\n\t                ctx.textAlign = textAlign || 'left';\n\t                // Use canvas default left textAlign. Giving invalid value will cause state not change\n\t                if (ctx.textAlign !== textAlign) {\n\t                    ctx.textAlign = 'left';\n\t                }\n\t                ctx.textBaseline = textBaseline || 'alphabetic';\n\t                // Use canvas default alphabetic baseline\n\t                if (ctx.textBaseline !== textBaseline) {\n\t                    ctx.textBaseline = 'alphabetic';\n\t                }\n\t\n\t                var lineHeight = textContain.measureText('国', ctx.font).width;\n\t\n\t                var textLines = text.split('\\n');\n\t                for (var i = 0; i < textLines.length; i++) {\n\t                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n\t                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n\t                    y += lineHeight;\n\t                }\n\t\n\t                this.restoreTransform(ctx);\n\t            }\n\t        },\n\t\n\t        getBoundingRect: function () {\n\t            if (!this._rect) {\n\t                var style = this.style;\n\t                var textVerticalAlign = style.textVerticalAlign;\n\t                var rect = textContain.getBoundingRect(\n\t                    style.text + '', style.textFont || style.font, style.textAlign,\n\t                    textVerticalAlign ? 'top' : style.textBaseline\n\t                );\n\t                switch (textVerticalAlign) {\n\t                    case 'middle':\n\t                        rect.y -= rect.height / 2;\n\t                        break;\n\t                    case 'bottom':\n\t                        rect.y -= rect.height;\n\t                        break;\n\t                }\n\t                rect.x += style.x || 0;\n\t                rect.y += style.y || 0;\n\t                this._rect = rect;\n\t            }\n\t            return this._rect;\n\t        }\n\t    };\n\t\n\t    zrUtil.inherits(Text, Displayable);\n\t\n\t    module.exports = Text;\n\n\n/***/ },\n/* 546 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 圆形\n\t * @module zrender/shape/Circle\n\t */\n\t\n\t\n\t\n\t    module.exports = __webpack_require__(527).extend({\n\t\n\t        type: 'circle',\n\t\n\t        shape: {\n\t            cx: 0,\n\t            cy: 0,\n\t            r: 0\n\t        },\n\t\n\t\n\t        buildPath : function (ctx, shape, inBundle) {\n\t            // Better stroking in ShapeBundle\n\t            // Always do it may have performence issue ( fill may be 2x more cost)\n\t            if (inBundle) {\n\t                ctx.moveTo(shape.cx + shape.r, shape.cy);\n\t            }\n\t            // Better stroking in ShapeBundle\n\t            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\t            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 547 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 扇形\n\t * @module zrender/graphic/shape/Sector\n\t */\n\t\n\t\n\t\n\t    module.exports = __webpack_require__(527).extend({\n\t\n\t        type: 'sector',\n\t\n\t        shape: {\n\t\n\t            cx: 0,\n\t\n\t            cy: 0,\n\t\n\t            r0: 0,\n\t\n\t            r: 0,\n\t\n\t            startAngle: 0,\n\t\n\t            endAngle: Math.PI * 2,\n\t\n\t            clockwise: true\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t\n\t            var x = shape.cx;\n\t            var y = shape.cy;\n\t            var r0 = Math.max(shape.r0 || 0, 0);\n\t            var r = Math.max(shape.r, 0);\n\t            var startAngle = shape.startAngle;\n\t            var endAngle = shape.endAngle;\n\t            var clockwise = shape.clockwise;\n\t\n\t            var unitX = Math.cos(startAngle);\n\t            var unitY = Math.sin(startAngle);\n\t\n\t            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\t\n\t            ctx.lineTo(unitX * r + x, unitY * r + y);\n\t\n\t            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\t\n\t            ctx.lineTo(\n\t                Math.cos(endAngle) * r0 + x,\n\t                Math.sin(endAngle) * r0 + y\n\t            );\n\t\n\t            if (r0 !== 0) {\n\t                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n\t            }\n\t\n\t            ctx.closePath();\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 548 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 圆环\n\t * @module zrender/graphic/shape/Ring\n\t */\n\t\n\t\n\t    module.exports = __webpack_require__(527).extend({\n\t\n\t        type: 'ring',\n\t\n\t        shape: {\n\t            cx: 0,\n\t            cy: 0,\n\t            r: 0,\n\t            r0: 0\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var x = shape.cx;\n\t            var y = shape.cy;\n\t            var PI2 = Math.PI * 2;\n\t            ctx.moveTo(x + shape.r, y);\n\t            ctx.arc(x, y, shape.r, 0, PI2, false);\n\t            ctx.moveTo(x + shape.r0, y);\n\t            ctx.arc(x, y, shape.r0, 0, PI2, true);\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 549 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 多边形\n\t * @module zrender/shape/Polygon\n\t */\n\t\n\t\n\t    var polyHelper = __webpack_require__(550);\n\t\n\t    module.exports = __webpack_require__(527).extend({\n\t        \n\t        type: 'polygon',\n\t\n\t        shape: {\n\t            points: null,\n\t\n\t            smooth: false,\n\t\n\t            smoothConstraint: null\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            polyHelper.buildPath(ctx, shape, true);\n\t        }\n\t    });\n\n\n/***/ },\n/* 550 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var smoothSpline = __webpack_require__(551);\n\t    var smoothBezier = __webpack_require__(552);\n\t\n\t    module.exports = {\n\t        buildPath: function (ctx, shape, closePath) {\n\t            var points = shape.points;\n\t            var smooth = shape.smooth;\n\t            if (points && points.length >= 2) {\n\t                if (smooth && smooth !== 'spline') {\n\t                    var controlPoints = smoothBezier(\n\t                        points, smooth, closePath, shape.smoothConstraint\n\t                    );\n\t\n\t                    ctx.moveTo(points[0][0], points[0][1]);\n\t                    var len = points.length;\n\t                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n\t                        var cp1 = controlPoints[i * 2];\n\t                        var cp2 = controlPoints[i * 2 + 1];\n\t                        var p = points[(i + 1) % len];\n\t                        ctx.bezierCurveTo(\n\t                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n\t                        );\n\t                    }\n\t                }\n\t                else {\n\t                    if (smooth === 'spline') {\n\t                        points = smoothSpline(points, closePath);\n\t                    }\n\t\n\t                    ctx.moveTo(points[0][0], points[0][1]);\n\t                    for (var i = 1, l = points.length; i < l; i++) {\n\t                        ctx.lineTo(points[i][0], points[i][1]);\n\t                    }\n\t                }\n\t\n\t                closePath && ctx.closePath();\n\t            }\n\t        }\n\t    };\n\n\n/***/ },\n/* 551 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Catmull-Rom spline 插值折线\n\t * @module zrender/shape/util/smoothSpline\n\t * @author pissang (https://www.github.com/pissang)\n\t *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         errorrik (errorrik@gmail.com)\n\t */\n\t\n\t    var vec2 = __webpack_require__(492);\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n\t        var v0 = (p2 - p0) * 0.5;\n\t        var v1 = (p3 - p1) * 0.5;\n\t        return (2 * (p1 - p2) + v0 + v1) * t3\n\t                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n\t                + v0 * t + p1;\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/shape/util/smoothSpline\n\t     * @param {Array} points 线段顶点数组\n\t     * @param {boolean} isLoop\n\t     * @return {Array}\n\t     */\n\t    module.exports = function (points, isLoop) {\n\t        var len = points.length;\n\t        var ret = [];\n\t\n\t        var distance = 0;\n\t        for (var i = 1; i < len; i++) {\n\t            distance += vec2.distance(points[i - 1], points[i]);\n\t        }\n\t\n\t        var segs = distance / 2;\n\t        segs = segs < len ? len : segs;\n\t        for (var i = 0; i < segs; i++) {\n\t            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n\t            var idx = Math.floor(pos);\n\t\n\t            var w = pos - idx;\n\t\n\t            var p0;\n\t            var p1 = points[idx % len];\n\t            var p2;\n\t            var p3;\n\t            if (!isLoop) {\n\t                p0 = points[idx === 0 ? idx : idx - 1];\n\t                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n\t                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n\t            }\n\t            else {\n\t                p0 = points[(idx - 1 + len) % len];\n\t                p2 = points[(idx + 1) % len];\n\t                p3 = points[(idx + 2) % len];\n\t            }\n\t\n\t            var w2 = w * w;\n\t            var w3 = w * w2;\n\t\n\t            ret.push([\n\t                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n\t                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n\t            ]);\n\t        }\n\t        return ret;\n\t    };\n\t\n\n\n/***/ },\n/* 552 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 贝塞尔平滑曲线\n\t * @module zrender/shape/util/smoothBezier\n\t * @author pissang (https://www.github.com/pissang)\n\t *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         errorrik (errorrik@gmail.com)\n\t */\n\t\n\t\n\t    var vec2 = __webpack_require__(492);\n\t    var v2Min = vec2.min;\n\t    var v2Max = vec2.max;\n\t    var v2Scale = vec2.scale;\n\t    var v2Distance = vec2.distance;\n\t    var v2Add = vec2.add;\n\t\n\t    /**\n\t     * 贝塞尔平滑曲线\n\t     * @alias module:zrender/shape/util/smoothBezier\n\t     * @param {Array} points 线段顶点数组\n\t     * @param {number} smooth 平滑等级, 0-1\n\t     * @param {boolean} isLoop\n\t     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n\t     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n\t     *                           整个折线的包围盒做一个并集用来约束控制点。\n\t     * @param {Array} 计算出来的控制点数组\n\t     */\n\t    module.exports = function (points, smooth, isLoop, constraint) {\n\t        var cps = [];\n\t\n\t        var v = [];\n\t        var v1 = [];\n\t        var v2 = [];\n\t        var prevPoint;\n\t        var nextPoint;\n\t\n\t        var min, max;\n\t        if (constraint) {\n\t            min = [Infinity, Infinity];\n\t            max = [-Infinity, -Infinity];\n\t            for (var i = 0, len = points.length; i < len; i++) {\n\t                v2Min(min, min, points[i]);\n\t                v2Max(max, max, points[i]);\n\t            }\n\t            // 与指定的包围盒做并集\n\t            v2Min(min, min, constraint[0]);\n\t            v2Max(max, max, constraint[1]);\n\t        }\n\t\n\t        for (var i = 0, len = points.length; i < len; i++) {\n\t            var point = points[i];\n\t\n\t            if (isLoop) {\n\t                prevPoint = points[i ? i - 1 : len - 1];\n\t                nextPoint = points[(i + 1) % len];\n\t            }\n\t            else {\n\t                if (i === 0 || i === len - 1) {\n\t                    cps.push(vec2.clone(points[i]));\n\t                    continue;\n\t                }\n\t                else {\n\t                    prevPoint = points[i - 1];\n\t                    nextPoint = points[i + 1];\n\t                }\n\t            }\n\t\n\t            vec2.sub(v, nextPoint, prevPoint);\n\t\n\t            // use degree to scale the handle length\n\t            v2Scale(v, v, smooth);\n\t\n\t            var d0 = v2Distance(point, prevPoint);\n\t            var d1 = v2Distance(point, nextPoint);\n\t            var sum = d0 + d1;\n\t            if (sum !== 0) {\n\t                d0 /= sum;\n\t                d1 /= sum;\n\t            }\n\t\n\t            v2Scale(v1, v, -d0);\n\t            v2Scale(v2, v, d1);\n\t            var cp0 = v2Add([], point, v1);\n\t            var cp1 = v2Add([], point, v2);\n\t            if (constraint) {\n\t                v2Max(cp0, cp0, min);\n\t                v2Min(cp0, cp0, max);\n\t                v2Max(cp1, cp1, min);\n\t                v2Min(cp1, cp1, max);\n\t            }\n\t            cps.push(cp0);\n\t            cps.push(cp1);\n\t        }\n\t\n\t        if (isLoop) {\n\t            cps.push(cps.shift());\n\t        }\n\t\n\t        return cps;\n\t    };\n\t\n\n\n/***/ },\n/* 553 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module zrender/graphic/shape/Polyline\n\t */\n\t\n\t\n\t    var polyHelper = __webpack_require__(550);\n\t\n\t    module.exports = __webpack_require__(527).extend({\n\t        \n\t        type: 'polyline',\n\t\n\t        shape: {\n\t            points: null,\n\t\n\t            smooth: false,\n\t\n\t            smoothConstraint: null\n\t        },\n\t\n\t        style: {\n\t            stroke: '#000',\n\t\n\t            fill: null\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            polyHelper.buildPath(ctx, shape, false);\n\t        }\n\t    });\n\n\n/***/ },\n/* 554 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 矩形\n\t * @module zrender/graphic/shape/Rect\n\t */\n\t\n\t\n\t    var roundRectHelper = __webpack_require__(555);\n\t\n\t    module.exports = __webpack_require__(527).extend({\n\t\n\t        type: 'rect',\n\t\n\t        shape: {\n\t            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n\t            // r缩写为1         相当于 [1, 1, 1, 1]\n\t            // r缩写为[1]       相当于 [1, 1, 1, 1]\n\t            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n\t            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n\t            r: 0,\n\t\n\t            x: 0,\n\t            y: 0,\n\t            width: 0,\n\t            height: 0\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var x = shape.x;\n\t            var y = shape.y;\n\t            var width = shape.width;\n\t            var height = shape.height;\n\t            if (!shape.r) {\n\t                ctx.rect(x, y, width, height);\n\t            }\n\t            else {\n\t                roundRectHelper.buildPath(ctx, shape);\n\t            }\n\t            ctx.closePath();\n\t            return;\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 555 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    module.exports = {\n\t        buildPath: function (ctx, shape) {\n\t            var x = shape.x;\n\t            var y = shape.y;\n\t            var width = shape.width;\n\t            var height = shape.height;\n\t            var r = shape.r;\n\t            var r1;\n\t            var r2;\n\t            var r3;\n\t            var r4;\n\t\n\t            // Convert width and height to positive for better borderRadius\n\t            if (width < 0) {\n\t                x = x + width;\n\t                width = -width;\n\t            }\n\t            if (height < 0) {\n\t                y = y + height;\n\t                height = -height;\n\t            }\n\t\n\t            if (typeof r === 'number') {\n\t                r1 = r2 = r3 = r4 = r;\n\t            }\n\t            else if (r instanceof Array) {\n\t                if (r.length === 1) {\n\t                    r1 = r2 = r3 = r4 = r[0];\n\t                }\n\t                else if (r.length === 2) {\n\t                    r1 = r3 = r[0];\n\t                    r2 = r4 = r[1];\n\t                }\n\t                else if (r.length === 3) {\n\t                    r1 = r[0];\n\t                    r2 = r4 = r[1];\n\t                    r3 = r[2];\n\t                }\n\t                else {\n\t                    r1 = r[0];\n\t                    r2 = r[1];\n\t                    r3 = r[2];\n\t                    r4 = r[3];\n\t                }\n\t            }\n\t            else {\n\t                r1 = r2 = r3 = r4 = 0;\n\t            }\n\t\n\t            var total;\n\t            if (r1 + r2 > width) {\n\t                total = r1 + r2;\n\t                r1 *= width / total;\n\t                r2 *= width / total;\n\t            }\n\t            if (r3 + r4 > width) {\n\t                total = r3 + r4;\n\t                r3 *= width / total;\n\t                r4 *= width / total;\n\t            }\n\t            if (r2 + r3 > height) {\n\t                total = r2 + r3;\n\t                r2 *= height / total;\n\t                r3 *= height / total;\n\t            }\n\t            if (r1 + r4 > height) {\n\t                total = r1 + r4;\n\t                r1 *= height / total;\n\t                r4 *= height / total;\n\t            }\n\t            ctx.moveTo(x + r1, y);\n\t            ctx.lineTo(x + width - r2, y);\n\t            r2 !== 0 && ctx.quadraticCurveTo(\n\t                x + width, y, x + width, y + r2\n\t            );\n\t            ctx.lineTo(x + width, y + height - r3);\n\t            r3 !== 0 && ctx.quadraticCurveTo(\n\t                x + width, y + height, x + width - r3, y + height\n\t            );\n\t            ctx.lineTo(x + r4, y + height);\n\t            r4 !== 0 && ctx.quadraticCurveTo(\n\t                x, y + height, x, y + height - r4\n\t            );\n\t            ctx.lineTo(x, y + r1);\n\t            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n\t        }\n\t    };\n\n\n/***/ },\n/* 556 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 直线\n\t * @module zrender/graphic/shape/Line\n\t */\n\t\n\t    module.exports = __webpack_require__(527).extend({\n\t\n\t        type: 'line',\n\t\n\t        shape: {\n\t            // Start point\n\t            x1: 0,\n\t            y1: 0,\n\t            // End point\n\t            x2: 0,\n\t            y2: 0,\n\t\n\t            percent: 1\n\t        },\n\t\n\t        style: {\n\t            stroke: '#000',\n\t            fill: null\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var x1 = shape.x1;\n\t            var y1 = shape.y1;\n\t            var x2 = shape.x2;\n\t            var y2 = shape.y2;\n\t            var percent = shape.percent;\n\t\n\t            if (percent === 0) {\n\t                return;\n\t            }\n\t\n\t            ctx.moveTo(x1, y1);\n\t\n\t            if (percent < 1) {\n\t                x2 = x1 * (1 - percent) + x2 * percent;\n\t                y2 = y1 * (1 - percent) + y2 * percent;\n\t            }\n\t            ctx.lineTo(x2, y2);\n\t        },\n\t\n\t        /**\n\t         * Get point at percent\n\t         * @param  {number} percent\n\t         * @return {Array.<number>}\n\t         */\n\t        pointAt: function (p) {\n\t            var shape = this.shape;\n\t            return [\n\t                shape.x1 * (1 - p) + shape.x2 * p,\n\t                shape.y1 * (1 - p) + shape.y2 * p\n\t            ];\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 557 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 贝塞尔曲线\n\t * @module zrender/shape/BezierCurve\n\t */\n\t\n\t\n\t    var curveTool = __webpack_require__(532);\n\t    var vec2 = __webpack_require__(492);\n\t    var quadraticSubdivide = curveTool.quadraticSubdivide;\n\t    var cubicSubdivide = curveTool.cubicSubdivide;\n\t    var quadraticAt = curveTool.quadraticAt;\n\t    var cubicAt = curveTool.cubicAt;\n\t    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n\t    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\t\n\t    var out = [];\n\t\n\t    function someVectorAt(shape, t, isTangent) {\n\t        var cpx2 = shape.cpx2;\n\t        var cpy2 = shape.cpy2;\n\t        if (cpx2 === null || cpy2 === null) {\n\t            return [\n\t                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n\t                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n\t            ];\n\t        }\n\t        else {\n\t            return [\n\t                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n\t                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n\t            ];\n\t        }\n\t    }\n\t    module.exports = __webpack_require__(527).extend({\n\t\n\t        type: 'bezier-curve',\n\t\n\t        shape: {\n\t            x1: 0,\n\t            y1: 0,\n\t            x2: 0,\n\t            y2: 0,\n\t            cpx1: 0,\n\t            cpy1: 0,\n\t            // cpx2: 0,\n\t            // cpy2: 0\n\t\n\t            // Curve show percent, for animating\n\t            percent: 1\n\t        },\n\t\n\t        style: {\n\t            stroke: '#000',\n\t            fill: null\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var x1 = shape.x1;\n\t            var y1 = shape.y1;\n\t            var x2 = shape.x2;\n\t            var y2 = shape.y2;\n\t            var cpx1 = shape.cpx1;\n\t            var cpy1 = shape.cpy1;\n\t            var cpx2 = shape.cpx2;\n\t            var cpy2 = shape.cpy2;\n\t            var percent = shape.percent;\n\t            if (percent === 0) {\n\t                return;\n\t            }\n\t\n\t            ctx.moveTo(x1, y1);\n\t\n\t            if (cpx2 == null || cpy2 == null) {\n\t                if (percent < 1) {\n\t                    quadraticSubdivide(\n\t                        x1, cpx1, x2, percent, out\n\t                    );\n\t                    cpx1 = out[1];\n\t                    x2 = out[2];\n\t                    quadraticSubdivide(\n\t                        y1, cpy1, y2, percent, out\n\t                    );\n\t                    cpy1 = out[1];\n\t                    y2 = out[2];\n\t                }\n\t\n\t                ctx.quadraticCurveTo(\n\t                    cpx1, cpy1,\n\t                    x2, y2\n\t                );\n\t            }\n\t            else {\n\t                if (percent < 1) {\n\t                    cubicSubdivide(\n\t                        x1, cpx1, cpx2, x2, percent, out\n\t                    );\n\t                    cpx1 = out[1];\n\t                    cpx2 = out[2];\n\t                    x2 = out[3];\n\t                    cubicSubdivide(\n\t                        y1, cpy1, cpy2, y2, percent, out\n\t                    );\n\t                    cpy1 = out[1];\n\t                    cpy2 = out[2];\n\t                    y2 = out[3];\n\t                }\n\t                ctx.bezierCurveTo(\n\t                    cpx1, cpy1,\n\t                    cpx2, cpy2,\n\t                    x2, y2\n\t                );\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Get point at percent\n\t         * @param  {number} t\n\t         * @return {Array.<number>}\n\t         */\n\t        pointAt: function (t) {\n\t            return someVectorAt(this.shape, t, false);\n\t        },\n\t\n\t        /**\n\t         * Get tangent at percent\n\t         * @param  {number} t\n\t         * @return {Array.<number>}\n\t         */\n\t        tangentAt: function (t) {\n\t            var p = someVectorAt(this.shape, t, true);\n\t            return vec2.normalize(p, p);\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 558 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 圆弧\n\t * @module zrender/graphic/shape/Arc\n\t */\n\t \n\t\n\t    module.exports = __webpack_require__(527).extend({\n\t\n\t        type: 'arc',\n\t\n\t        shape: {\n\t\n\t            cx: 0,\n\t\n\t            cy: 0,\n\t\n\t            r: 0,\n\t\n\t            startAngle: 0,\n\t\n\t            endAngle: Math.PI * 2,\n\t\n\t            clockwise: true\n\t        },\n\t\n\t        style: {\n\t\n\t            stroke: '#000',\n\t\n\t            fill: null\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t\n\t            var x = shape.cx;\n\t            var y = shape.cy;\n\t            var r = Math.max(shape.r, 0);\n\t            var startAngle = shape.startAngle;\n\t            var endAngle = shape.endAngle;\n\t            var clockwise = shape.clockwise;\n\t\n\t            var unitX = Math.cos(startAngle);\n\t            var unitY = Math.sin(startAngle);\n\t\n\t            ctx.moveTo(unitX * r + x, unitY * r + y);\n\t            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\t        }\n\t    });\n\n\n/***/ },\n/* 559 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// CompoundPath to improve performance\n\t\n\t\n\t    var Path = __webpack_require__(527);\n\t    module.exports = Path.extend({\n\t\n\t        type: 'compound',\n\t\n\t        shape: {\n\t\n\t            paths: null\n\t        },\n\t\n\t        _updatePathDirty: function () {\n\t            var dirtyPath = this.__dirtyPath;\n\t            var paths = this.shape.paths;\n\t            for (var i = 0; i < paths.length; i++) {\n\t                // Mark as dirty if any subpath is dirty\n\t                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n\t            }\n\t            this.__dirtyPath = dirtyPath;\n\t            this.__dirty = this.__dirty || dirtyPath;\n\t        },\n\t\n\t        beforeBrush: function () {\n\t            this._updatePathDirty();\n\t            var paths = this.shape.paths || [];\n\t            var scale = this.getGlobalScale();\n\t            // Update path scale\n\t            for (var i = 0; i < paths.length; i++) {\n\t                paths[i].path.setScale(scale[0], scale[1]);\n\t            }\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var paths = shape.paths || [];\n\t            for (var i = 0; i < paths.length; i++) {\n\t                paths[i].buildPath(ctx, paths[i].shape, true);\n\t            }\n\t        },\n\t\n\t        afterBrush: function () {\n\t            var paths = this.shape.paths;\n\t            for (var i = 0; i < paths.length; i++) {\n\t                paths[i].__dirtyPath = false;\n\t            }\n\t        },\n\t\n\t        getBoundingRect: function () {\n\t            this._updatePathDirty();\n\t            return Path.prototype.getBoundingRect.call(this);\n\t        }\n\t    });\n\n\n/***/ },\n/* 560 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var Gradient = __webpack_require__(561);\n\t\n\t    /**\n\t     * x, y, x2, y2 are all percent from 0 to 1\n\t     * @param {number} [x=0]\n\t     * @param {number} [y=0]\n\t     * @param {number} [x2=1]\n\t     * @param {number} [y2=0]\n\t     * @param {Array.<Object>} colorStops\n\t     * @param {boolean} [globalCoord=false]\n\t     */\n\t    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n\t        this.x = x == null ? 0 : x;\n\t\n\t        this.y = y == null ? 0 : y;\n\t\n\t        this.x2 = x2 == null ? 1 : x2;\n\t\n\t        this.y2 = y2 == null ? 0 : y2;\n\t\n\t        // Can be cloned\n\t        this.type = 'linear';\n\t\n\t        // If use global coord\n\t        this.global = globalCoord || false;\n\t\n\t        Gradient.call(this, colorStops);\n\t    };\n\t\n\t    LinearGradient.prototype = {\n\t\n\t        constructor: LinearGradient\n\t    };\n\t\n\t    zrUtil.inherits(LinearGradient, Gradient);\n\t\n\t    module.exports = LinearGradient;\n\n\n/***/ },\n/* 561 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    /**\n\t     * @param {Array.<Object>} colorStops\n\t     */\n\t    var Gradient = function (colorStops) {\n\t\n\t        this.colorStops = colorStops || [];\n\t    };\n\t\n\t    Gradient.prototype = {\n\t\n\t        constructor: Gradient,\n\t\n\t        addColorStop: function (offset, color) {\n\t            this.colorStops.push({\n\t\n\t                offset: offset,\n\t\n\t                color: color\n\t            });\n\t        }\n\t    };\n\t\n\t    module.exports = Gradient;\n\n\n/***/ },\n/* 562 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var Gradient = __webpack_require__(561);\n\t\n\t    /**\n\t     * x, y, r are all percent from 0 to 1\n\t     * @param {number} [x=0.5]\n\t     * @param {number} [y=0.5]\n\t     * @param {number} [r=0.5]\n\t     * @param {Array.<Object>} [colorStops]\n\t     * @param {boolean} [globalCoord=false]\n\t     */\n\t    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n\t        this.x = x == null ? 0.5 : x;\n\t\n\t        this.y = y == null ? 0.5 : y;\n\t\n\t        this.r = r == null ? 0.5 : r;\n\t\n\t        // Can be cloned\n\t        this.type = 'radial';\n\t\n\t        // If use global coord\n\t        this.global = globalCoord || false;\n\t\n\t        Gradient.call(this, colorStops);\n\t    };\n\t\n\t    RadialGradient.prototype = {\n\t\n\t        constructor: RadialGradient\n\t    };\n\t\n\t    zrUtil.inherits(RadialGradient, Gradient);\n\t\n\t    module.exports = RadialGradient;\n\n\n/***/ },\n/* 563 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    var lib = {};\n\t\n\t    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n\t    var RATE = '\\0__throttleRate';\n\t    var THROTTLE_TYPE = '\\0__throttleType';\n\t\n\t    /**\n\t     * @public\n\t     * @param {(Function)} fn\n\t     * @param {number} [delay=0] Unit: ms.\n\t     * @param {boolean} [debounce=false]\n\t     *        true: If call interval less than `delay`, only the last call works.\n\t     *        false: If call interval less than `delay, call works on fixed rate.\n\t     * @return {(Function)} throttled fn.\n\t     */\n\t    lib.throttle = function (fn, delay, debounce) {\n\t\n\t        var currCall;\n\t        var lastCall = 0;\n\t        var lastExec = 0;\n\t        var timer = null;\n\t        var diff;\n\t        var scope;\n\t        var args;\n\t\n\t        delay = delay || 0;\n\t\n\t        function exec() {\n\t            lastExec = (new Date()).getTime();\n\t            timer = null;\n\t            fn.apply(scope, args || []);\n\t        }\n\t\n\t        var cb = function () {\n\t            currCall = (new Date()).getTime();\n\t            scope = this;\n\t            args = arguments;\n\t            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\t\n\t            clearTimeout(timer);\n\t\n\t            if (debounce) {\n\t                timer = setTimeout(exec, delay);\n\t            }\n\t            else {\n\t                if (diff >= 0) {\n\t                    exec();\n\t                }\n\t                else {\n\t                    timer = setTimeout(exec, -diff);\n\t                }\n\t            }\n\t\n\t            lastCall = currCall;\n\t        };\n\t\n\t        /**\n\t         * Clear throttle.\n\t         * @public\n\t         */\n\t        cb.clear = function () {\n\t            if (timer) {\n\t                clearTimeout(timer);\n\t                timer = null;\n\t            }\n\t        };\n\t\n\t        return cb;\n\t    };\n\t\n\t    /**\n\t     * Create throttle method or update throttle rate.\n\t     *\n\t     * @example\n\t     * ComponentView.prototype.render = function () {\n\t     *     ...\n\t     *     throttle.createOrUpdate(\n\t     *         this,\n\t     *         '_dispatchAction',\n\t     *         this.model.get('throttle'),\n\t     *         'fixRate'\n\t     *     );\n\t     * };\n\t     * ComponentView.prototype.remove = function () {\n\t     *     throttle.clear(this, '_dispatchAction');\n\t     * };\n\t     * ComponentView.prototype.dispose = function () {\n\t     *     throttle.clear(this, '_dispatchAction');\n\t     * };\n\t     *\n\t     * @public\n\t     * @param {Object} obj\n\t     * @param {string} fnAttr\n\t     * @param {number} [rate]\n\t     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n\t     * @return {Function} throttled function.\n\t     */\n\t    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n\t        var fn = obj[fnAttr];\n\t\n\t        if (!fn) {\n\t            return;\n\t        }\n\t\n\t        var originFn = fn[ORIGIN_METHOD] || fn;\n\t        var lastThrottleType = fn[THROTTLE_TYPE];\n\t        var lastRate = fn[RATE];\n\t\n\t        if (lastRate !== rate || lastThrottleType !== throttleType) {\n\t            if (rate == null || !throttleType) {\n\t                return (obj[fnAttr] = originFn);\n\t            }\n\t\n\t            fn = obj[fnAttr] = lib.throttle(\n\t                originFn, rate, throttleType === 'debounce'\n\t            );\n\t            fn[ORIGIN_METHOD] = originFn;\n\t            fn[THROTTLE_TYPE] = throttleType;\n\t            fn[RATE] = rate;\n\t        }\n\t\n\t        return fn;\n\t    };\n\t\n\t    /**\n\t     * Clear throttle. Example see throttle.createOrUpdate.\n\t     *\n\t     * @public\n\t     * @param {Object} obj\n\t     * @param {string} fnAttr\n\t     */\n\t    lib.clear = function (obj, fnAttr) {\n\t        var fn = obj[fnAttr];\n\t        if (fn && fn[ORIGIN_METHOD]) {\n\t            obj[fnAttr] = fn[ORIGIN_METHOD];\n\t        }\n\t    };\n\t\n\t    module.exports = lib;\n\t\n\n\n/***/ },\n/* 564 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * ZRender, a high performance 2d drawing library.\n\t *\n\t * Copyright (c) 2013, Baidu Inc.\n\t * All rights reserved.\n\t *\n\t * LICENSE\n\t * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n\t */\n\t// Global defines\n\t\n\t    var guid = __webpack_require__(514);\n\t    var env = __webpack_require__(485);\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var Handler = __webpack_require__(565);\n\t    var Storage = __webpack_require__(567);\n\t    var Animation = __webpack_require__(569);\n\t    var HandlerProxy = __webpack_require__(572);\n\t\n\t    var useVML = !env.canvasSupported;\n\t\n\t    var painterCtors = {\n\t        canvas: __webpack_require__(574)\n\t    };\n\t\n\t    var instances = {};    // ZRender实例map索引\n\t\n\t    var zrender = {};\n\t\n\t    /**\n\t     * @type {string}\n\t     */\n\t    zrender.version = '3.2.2';\n\t\n\t    /**\n\t     * Initializing a zrender instance\n\t     * @param {HTMLElement} dom\n\t     * @param {Object} opts\n\t     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n\t     * @param {number} [opts.devicePixelRatio]\n\t     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n\t     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n\t     * @return {module:zrender/ZRender}\n\t     */\n\t    zrender.init = function(dom, opts) {\n\t        var zr = new ZRender(guid(), dom, opts);\n\t        instances[zr.id] = zr;\n\t        return zr;\n\t    };\n\t\n\t    /**\n\t     * Dispose zrender instance\n\t     * @param {module:zrender/ZRender} zr\n\t     */\n\t    zrender.dispose = function (zr) {\n\t        if (zr) {\n\t            zr.dispose();\n\t        }\n\t        else {\n\t            for (var key in instances) {\n\t                if (instances.hasOwnProperty(key)) {\n\t                    instances[key].dispose();\n\t                }\n\t            }\n\t            instances = {};\n\t        }\n\t\n\t        return zrender;\n\t    };\n\t\n\t    /**\n\t     * Get zrender instance by id\n\t     * @param {string} id zrender instance id\n\t     * @return {module:zrender/ZRender}\n\t     */\n\t    zrender.getInstance = function (id) {\n\t        return instances[id];\n\t    };\n\t\n\t    zrender.registerPainter = function (name, Ctor) {\n\t        painterCtors[name] = Ctor;\n\t    };\n\t\n\t    function delInstance(id) {\n\t        delete instances[id];\n\t    }\n\t\n\t    /**\n\t     * @module zrender/ZRender\n\t     */\n\t    /**\n\t     * @constructor\n\t     * @alias module:zrender/ZRender\n\t     * @param {string} id\n\t     * @param {HTMLDomElement} dom\n\t     * @param {Object} opts\n\t     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n\t     * @param {number} [opts.devicePixelRatio]\n\t     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n\t     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n\t     */\n\t    var ZRender = function(id, dom, opts) {\n\t\n\t        opts = opts || {};\n\t\n\t        /**\n\t         * @type {HTMLDomElement}\n\t         */\n\t        this.dom = dom;\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        this.id = id;\n\t\n\t        var self = this;\n\t        var storage = new Storage();\n\t\n\t        var rendererType = opts.renderer;\n\t        if (useVML) {\n\t            if (!painterCtors.vml) {\n\t                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n\t            }\n\t            rendererType = 'vml';\n\t        }\n\t        else if (!rendererType || !painterCtors[rendererType]) {\n\t            rendererType = 'canvas';\n\t        }\n\t        var painter = new painterCtors[rendererType](dom, storage, opts);\n\t\n\t        this.storage = storage;\n\t        this.painter = painter;\n\t\n\t        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n\t        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\t\n\t        /**\n\t         * @type {module:zrender/animation/Animation}\n\t         */\n\t        this.animation = new Animation({\n\t            stage: {\n\t                update: zrUtil.bind(this.flush, this)\n\t            }\n\t        });\n\t        this.animation.start();\n\t\n\t        /**\n\t         * @type {boolean}\n\t         * @private\n\t         */\n\t        this._needsRefresh;\n\t\n\t        // 修改 storage.delFromMap, 每次删除元素之前删除动画\n\t        // FIXME 有点ugly\n\t        var oldDelFromMap = storage.delFromMap;\n\t        var oldAddToMap = storage.addToMap;\n\t\n\t        storage.delFromMap = function (elId) {\n\t            var el = storage.get(elId);\n\t\n\t            oldDelFromMap.call(storage, elId);\n\t\n\t            el && el.removeSelfFromZr(self);\n\t        };\n\t\n\t        storage.addToMap = function (el) {\n\t            oldAddToMap.call(storage, el);\n\t\n\t            el.addSelfToZr(self);\n\t        };\n\t    };\n\t\n\t    ZRender.prototype = {\n\t\n\t        constructor: ZRender,\n\t        /**\n\t         * 获取实例唯一标识\n\t         * @return {string}\n\t         */\n\t        getId: function () {\n\t            return this.id;\n\t        },\n\t\n\t        /**\n\t         * 添加元素\n\t         * @param  {module:zrender/Element} el\n\t         */\n\t        add: function (el) {\n\t            this.storage.addRoot(el);\n\t            this._needsRefresh = true;\n\t        },\n\t\n\t        /**\n\t         * 删除元素\n\t         * @param  {module:zrender/Element} el\n\t         */\n\t        remove: function (el) {\n\t            this.storage.delRoot(el);\n\t            this._needsRefresh = true;\n\t        },\n\t\n\t        /**\n\t         * Change configuration of layer\n\t         * @param {string} zLevel\n\t         * @param {Object} config\n\t         * @param {string} [config.clearColor=0] Clear color\n\t         * @param {string} [config.motionBlur=false] If enable motion blur\n\t         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n\t        */\n\t        configLayer: function (zLevel, config) {\n\t            this.painter.configLayer(zLevel, config);\n\t            this._needsRefresh = true;\n\t        },\n\t\n\t        /**\n\t         * Repaint the canvas immediately\n\t         */\n\t        refreshImmediately: function () {\n\t            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n\t            // Or it will cause zrender refreshes again and again.\n\t            this._needsRefresh = false;\n\t            this.painter.refresh();\n\t            /**\n\t             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n\t             */\n\t            this._needsRefresh = false;\n\t        },\n\t\n\t        /**\n\t         * Mark and repaint the canvas in the next frame of browser\n\t         */\n\t        refresh: function() {\n\t            this._needsRefresh = true;\n\t        },\n\t\n\t        /**\n\t         * Perform all refresh\n\t         */\n\t        flush: function () {\n\t            if (this._needsRefresh) {\n\t                this.refreshImmediately();\n\t            }\n\t            if (this._needsRefreshHover) {\n\t                this.refreshHoverImmediately();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Add element to hover layer\n\t         * @param  {module:zrender/Element} el\n\t         * @param {Object} style\n\t         */\n\t        addHover: function (el, style) {\n\t            if (this.painter.addHover) {\n\t                this.painter.addHover(el, style);\n\t                this.refreshHover();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Add element from hover layer\n\t         * @param  {module:zrender/Element} el\n\t         */\n\t        removeHover: function (el) {\n\t            if (this.painter.removeHover) {\n\t                this.painter.removeHover(el);\n\t                this.refreshHover();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Clear all hover elements in hover layer\n\t         * @param  {module:zrender/Element} el\n\t         */\n\t        clearHover: function () {\n\t            if (this.painter.clearHover) {\n\t                this.painter.clearHover();\n\t                this.refreshHover();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Refresh hover in next frame\n\t         */\n\t        refreshHover: function () {\n\t            this._needsRefreshHover = true;\n\t        },\n\t\n\t        /**\n\t         * Refresh hover immediately\n\t         */\n\t        refreshHoverImmediately: function () {\n\t            this._needsRefreshHover = false;\n\t            this.painter.refreshHover && this.painter.refreshHover();\n\t        },\n\t\n\t        /**\n\t         * Resize the canvas.\n\t         * Should be invoked when container size is changed\n\t         * @param {Object} [opts]\n\t         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n\t         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n\t         */\n\t        resize: function(opts) {\n\t            opts = opts || {};\n\t            this.painter.resize(opts.width, opts.height);\n\t            this.handler.resize();\n\t        },\n\t\n\t        /**\n\t         * Stop and clear all animation immediately\n\t         */\n\t        clearAnimation: function () {\n\t            this.animation.clear();\n\t        },\n\t\n\t        /**\n\t         * Get container width\n\t         */\n\t        getWidth: function() {\n\t            return this.painter.getWidth();\n\t        },\n\t\n\t        /**\n\t         * Get container height\n\t         */\n\t        getHeight: function() {\n\t            return this.painter.getHeight();\n\t        },\n\t\n\t        /**\n\t         * Export the canvas as Base64 URL\n\t         * @param {string} type\n\t         * @param {string} [backgroundColor='#fff']\n\t         * @return {string} Base64 URL\n\t         */\n\t        // toDataURL: function(type, backgroundColor) {\n\t        //     return this.painter.getRenderedCanvas({\n\t        //         backgroundColor: backgroundColor\n\t        //     }).toDataURL(type);\n\t        // },\n\t\n\t        /**\n\t         * Converting a path to image.\n\t         * It has much better performance of drawing image rather than drawing a vector path.\n\t         * @param {module:zrender/graphic/Path} e\n\t         * @param {number} width\n\t         * @param {number} height\n\t         */\n\t        pathToImage: function(e, width, height) {\n\t            var id = guid();\n\t            return this.painter.pathToImage(id, e, width, height);\n\t        },\n\t\n\t        /**\n\t         * Set default cursor\n\t         * @param {string} [cursorStyle='default'] 例如 crosshair\n\t         */\n\t        setCursorStyle: function (cursorStyle) {\n\t            this.handler.setCursorStyle(cursorStyle);\n\t        },\n\t\n\t        /**\n\t         * Bind event\n\t         *\n\t         * @param {string} eventName Event name\n\t         * @param {Function} eventHandler Handler function\n\t         * @param {Object} [context] Context object\n\t         */\n\t        on: function(eventName, eventHandler, context) {\n\t            this.handler.on(eventName, eventHandler, context);\n\t        },\n\t\n\t        /**\n\t         * Unbind event\n\t         * @param {string} eventName Event name\n\t         * @param {Function} [eventHandler] Handler function\n\t         */\n\t        off: function(eventName, eventHandler) {\n\t            this.handler.off(eventName, eventHandler);\n\t        },\n\t\n\t        /**\n\t         * Trigger event manually\n\t         *\n\t         * @param {string} eventName Event name\n\t         * @param {event=} event Event object\n\t         */\n\t        trigger: function (eventName, event) {\n\t            this.handler.trigger(eventName, event);\n\t        },\n\t\n\t\n\t        /**\n\t         * Clear all objects and the canvas.\n\t         */\n\t        clear: function () {\n\t            this.storage.delRoot();\n\t            this.painter.clear();\n\t        },\n\t\n\t        /**\n\t         * Dispose self.\n\t         */\n\t        dispose: function () {\n\t            this.animation.stop();\n\t\n\t            this.clear();\n\t            this.storage.dispose();\n\t            this.painter.dispose();\n\t            this.handler.dispose();\n\t\n\t            this.animation =\n\t            this.storage =\n\t            this.painter =\n\t            this.handler = null;\n\t\n\t            delInstance(this.id);\n\t        }\n\t    };\n\t\n\t    module.exports = zrender;\n\t\n\n\n/***/ },\n/* 565 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Handler\n\t * @module zrender/Handler\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         errorrik (errorrik@gmail.com)\n\t *         pissang (shenyi.914@gmail.com)\n\t */\n\t\n\t\n\t    var util = __webpack_require__(483);\n\t    var Draggable = __webpack_require__(566);\n\t\n\t    var Eventful = __webpack_require__(515);\n\t\n\t    function makeEventPacket(eveType, target, event) {\n\t        return {\n\t            type: eveType,\n\t            event: event,\n\t            target: target,\n\t            cancelBubble: false,\n\t            offsetX: event.zrX,\n\t            offsetY: event.zrY,\n\t            gestureEvent: event.gestureEvent,\n\t            pinchX: event.pinchX,\n\t            pinchY: event.pinchY,\n\t            pinchScale: event.pinchScale,\n\t            wheelDelta: event.zrDelta,\n\t            zrByTouch: event.zrByTouch\n\t        };\n\t    }\n\t\n\t    function EmptyProxy () {}\n\t    EmptyProxy.prototype.dispose = function () {};\n\t\n\t    var handlerNames = [\n\t        'click', 'dblclick', 'mousewheel', 'mouseout',\n\t        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n\t    ];\n\t    /**\n\t     * @alias module:zrender/Handler\n\t     * @constructor\n\t     * @extends module:zrender/mixin/Eventful\n\t     * @param {module:zrender/Storage} storage Storage instance.\n\t     * @param {module:zrender/Painter} painter Painter instance.\n\t     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n\t     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n\t     */\n\t    var Handler = function(storage, painter, proxy, painterRoot) {\n\t        Eventful.call(this);\n\t\n\t        this.storage = storage;\n\t\n\t        this.painter = painter;\n\t\n\t        this.painterRoot = painterRoot;\n\t\n\t        proxy = proxy || new EmptyProxy();\n\t\n\t        /**\n\t         * Proxy of event. can be Dom, WebGLSurface, etc.\n\t         */\n\t        this.proxy = proxy;\n\t\n\t        // Attach handler\n\t        proxy.handler = this;\n\t\n\t        /**\n\t         * @private\n\t         * @type {boolean}\n\t         */\n\t        this._hovered;\n\t\n\t        /**\n\t         * @private\n\t         * @type {Date}\n\t         */\n\t        this._lastTouchMoment;\n\t\n\t        /**\n\t         * @private\n\t         * @type {number}\n\t         */\n\t        this._lastX;\n\t\n\t        /**\n\t         * @private\n\t         * @type {number}\n\t         */\n\t        this._lastY;\n\t\n\t\n\t        Draggable.call(this);\n\t\n\t        util.each(handlerNames, function (name) {\n\t            proxy.on && proxy.on(name, this[name], this);\n\t        }, this);\n\t    };\n\t\n\t    Handler.prototype = {\n\t\n\t        constructor: Handler,\n\t\n\t        mousemove: function (event) {\n\t            var x = event.zrX;\n\t            var y = event.zrY;\n\t\n\t            var hovered = this.findHover(x, y, null);\n\t            var lastHovered = this._hovered;\n\t            var proxy = this.proxy;\n\t\n\t            this._hovered = hovered;\n\t\n\t            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');\n\t\n\t            // Mouse out on previous hovered element\n\t            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\n\t                this.dispatchToElement(lastHovered, 'mouseout', event);\n\t            }\n\t\n\t            // Mouse moving on one element\n\t            this.dispatchToElement(hovered, 'mousemove', event);\n\t\n\t            // Mouse over on a new element\n\t            if (hovered && hovered !== lastHovered) {\n\t                this.dispatchToElement(hovered, 'mouseover', event);\n\t            }\n\t        },\n\t\n\t        mouseout: function (event) {\n\t            this.dispatchToElement(this._hovered, 'mouseout', event);\n\t\n\t            // There might be some doms created by upper layer application\n\t            // at the same level of painter.getViewportRoot() (e.g., tooltip\n\t            // dom created by echarts), where 'globalout' event should not\n\t            // be triggered when mouse enters these doms. (But 'mouseout'\n\t            // should be triggered at the original hovered element as usual).\n\t            var element = event.toElement || event.relatedTarget;\n\t            var innerDom;\n\t            do {\n\t                element = element && element.parentNode;\n\t            }\n\t            while (element && element.nodeType != 9 && !(\n\t                innerDom = element === this.painterRoot\n\t            ));\n\t\n\t            !innerDom && this.trigger('globalout', {event: event});\n\t        },\n\t\n\t        /**\n\t         * Resize\n\t         */\n\t        resize: function (event) {\n\t            this._hovered = null;\n\t        },\n\t\n\t        /**\n\t         * Dispatch event\n\t         * @param {string} eventName\n\t         * @param {event=} eventArgs\n\t         */\n\t        dispatch: function (eventName, eventArgs) {\n\t            var handler = this[eventName];\n\t            handler && handler.call(this, eventArgs);\n\t        },\n\t\n\t        /**\n\t         * Dispose\n\t         */\n\t        dispose: function () {\n\t\n\t            this.proxy.dispose();\n\t\n\t            this.storage =\n\t            this.proxy =\n\t            this.painter = null;\n\t        },\n\t\n\t        /**\n\t         * 设置默认的cursor style\n\t         * @param {string} [cursorStyle='default'] 例如 crosshair\n\t         */\n\t        setCursorStyle: function (cursorStyle) {\n\t            var proxy = this.proxy;\n\t            proxy.setCursor && proxy.setCursor(cursorStyle);\n\t        },\n\t\n\t        /**\n\t         * 事件分发代理\n\t         *\n\t         * @private\n\t         * @param {Object} targetEl 目标图形元素\n\t         * @param {string} eventName 事件名称\n\t         * @param {Object} event 事件对象\n\t         */\n\t        dispatchToElement: function (targetEl, eventName, event) {\n\t            var eventHandler = 'on' + eventName;\n\t            var eventPacket = makeEventPacket(eventName, targetEl, event);\n\t\n\t            var el = targetEl;\n\t\n\t            while (el) {\n\t                el[eventHandler]\n\t                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\t\n\t                el.trigger(eventName, eventPacket);\n\t\n\t                el = el.parent;\n\t\n\t                if (eventPacket.cancelBubble) {\n\t                    break;\n\t                }\n\t            }\n\t\n\t            if (!eventPacket.cancelBubble) {\n\t                // 冒泡到顶级 zrender 对象\n\t                this.trigger(eventName, eventPacket);\n\t                // 分发事件到用户自定义层\n\t                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\t                this.painter && this.painter.eachOtherLayer(function (layer) {\n\t                    if (typeof(layer[eventHandler]) == 'function') {\n\t                        layer[eventHandler].call(layer, eventPacket);\n\t                    }\n\t                    if (layer.trigger) {\n\t                        layer.trigger(eventName, eventPacket);\n\t                    }\n\t                });\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param {number} x\n\t         * @param {number} y\n\t         * @param {module:zrender/graphic/Displayable} exclude\n\t         * @method\n\t         */\n\t        findHover: function(x, y, exclude) {\n\t            var list = this.storage.getDisplayList();\n\t            for (var i = list.length - 1; i >= 0 ; i--) {\n\t                if (!list[i].silent\n\t                 && list[i] !== exclude\n\t                 // getDisplayList may include ignored item in VML mode\n\t                 && !list[i].ignore\n\t                 && isHover(list[i], x, y)) {\n\t                    return list[i];\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    // Common handlers\n\t    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n\t        Handler.prototype[name] = function (event) {\n\t            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n\t            var hovered = this.findHover(event.zrX, event.zrY, null);\n\t\n\t            if (name === 'mousedown') {\n\t                this._downel = hovered;\n\t                // In case click triggered before mouseup\n\t                this._upel = hovered;\n\t            }\n\t            else if (name === 'mosueup') {\n\t                this._upel = hovered;\n\t            }\n\t            else if (name === 'click') {\n\t                if (this._downel !== this._upel) {\n\t                    return;\n\t                }\n\t            }\n\t\n\t            this.dispatchToElement(hovered, name, event);\n\t        };\n\t    });\n\t\n\t    function isHover(displayable, x, y) {\n\t        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n\t            var el = displayable;\n\t            while (el) {\n\t                // If ancestor is silent or clipped by ancestor\n\t                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {\n\t                    return false;\n\t                }\n\t                el = el.parent;\n\t            }\n\t            return true;\n\t        }\n\t\n\t        return false;\n\t    }\n\t\n\t    util.mixin(Handler, Eventful);\n\t    util.mixin(Handler, Draggable);\n\t\n\t    module.exports = Handler;\n\n\n/***/ },\n/* 566 */\n/***/ function(module, exports) {\n\n\t// TODO Draggable for group\n\t// FIXME Draggable on element which has parent rotation or scale\n\t\n\t    function Draggable() {\n\t\n\t        this.on('mousedown', this._dragStart, this);\n\t        this.on('mousemove', this._drag, this);\n\t        this.on('mouseup', this._dragEnd, this);\n\t        this.on('globalout', this._dragEnd, this);\n\t        // this._dropTarget = null;\n\t        // this._draggingTarget = null;\n\t\n\t        // this._x = 0;\n\t        // this._y = 0;\n\t    }\n\t\n\t    Draggable.prototype = {\n\t\n\t        constructor: Draggable,\n\t\n\t        _dragStart: function (e) {\n\t            var draggingTarget = e.target;\n\t            if (draggingTarget && draggingTarget.draggable) {\n\t                this._draggingTarget = draggingTarget;\n\t                draggingTarget.dragging = true;\n\t                this._x = e.offsetX;\n\t                this._y = e.offsetY;\n\t\n\t                this.dispatchToElement(draggingTarget, 'dragstart', e.event);\n\t            }\n\t        },\n\t\n\t        _drag: function (e) {\n\t            var draggingTarget = this._draggingTarget;\n\t            if (draggingTarget) {\n\t\n\t                var x = e.offsetX;\n\t                var y = e.offsetY;\n\t\n\t                var dx = x - this._x;\n\t                var dy = y - this._y;\n\t                this._x = x;\n\t                this._y = y;\n\t\n\t                draggingTarget.drift(dx, dy, e);\n\t                this.dispatchToElement(draggingTarget, 'drag', e.event);\n\t\n\t                var dropTarget = this.findHover(x, y, draggingTarget);\n\t                var lastDropTarget = this._dropTarget;\n\t                this._dropTarget = dropTarget;\n\t\n\t                if (draggingTarget !== dropTarget) {\n\t                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n\t                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);\n\t                    }\n\t                    if (dropTarget && dropTarget !== lastDropTarget) {\n\t                        this.dispatchToElement(dropTarget, 'dragenter', e.event);\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        _dragEnd: function (e) {\n\t            var draggingTarget = this._draggingTarget;\n\t\n\t            if (draggingTarget) {\n\t                draggingTarget.dragging = false;\n\t            }\n\t\n\t            this.dispatchToElement(draggingTarget, 'dragend', e.event);\n\t\n\t            if (this._dropTarget) {\n\t                this.dispatchToElement(this._dropTarget, 'drop', e.event);\n\t            }\n\t\n\t            this._draggingTarget = null;\n\t            this._dropTarget = null;\n\t        }\n\t\n\t    };\n\t\n\t    module.exports = Draggable;\n\n\n/***/ },\n/* 567 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Storage内容仓库模块\n\t * @module zrender/Storage\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t * @author errorrik (errorrik@gmail.com)\n\t * @author pissang (https://github.com/pissang/)\n\t */\n\t\n\t\n\t    var util = __webpack_require__(483);\n\t    var env = __webpack_require__(485);\n\t\n\t    var Group = __webpack_require__(512);\n\t\n\t    // Use timsort because in most case elements are partially sorted\n\t    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n\t    var timsort = __webpack_require__(568);\n\t\n\t    function shapeCompareFunc(a, b) {\n\t        if (a.zlevel === b.zlevel) {\n\t            if (a.z === b.z) {\n\t                // if (a.z2 === b.z2) {\n\t                //     // FIXME Slow has renderidx compare\n\t                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n\t                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n\t                //     return a.__renderidx - b.__renderidx;\n\t                // }\n\t                return a.z2 - b.z2;\n\t            }\n\t            return a.z - b.z;\n\t        }\n\t        return a.zlevel - b.zlevel;\n\t    }\n\t    /**\n\t     * 内容仓库 (M)\n\t     * @alias module:zrender/Storage\n\t     * @constructor\n\t     */\n\t    var Storage = function () {\n\t        // 所有常规形状，id索引的map\n\t        this._elements = {};\n\t\n\t        this._roots = [];\n\t\n\t        this._displayList = [];\n\t\n\t        this._displayListLen = 0;\n\t    };\n\t\n\t    Storage.prototype = {\n\t\n\t        constructor: Storage,\n\t\n\t        /**\n\t         * @param  {Function} cb\n\t         *\n\t         */\n\t        traverse: function (cb, context) {\n\t            for (var i = 0; i < this._roots.length; i++) {\n\t                this._roots[i].traverse(cb, context);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 返回所有图形的绘制队列\n\t         * @param {boolean} [update=false] 是否在返回前更新该数组\n\t         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n\t         *\n\t         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n\t         * @return {Array.<module:zrender/graphic/Displayable>}\n\t         */\n\t        getDisplayList: function (update, includeIgnore) {\n\t            includeIgnore = includeIgnore || false;\n\t            if (update) {\n\t                this.updateDisplayList(includeIgnore);\n\t            }\n\t            return this._displayList;\n\t        },\n\t\n\t        /**\n\t         * 更新图形的绘制队列。\n\t         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n\t         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n\t         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n\t         */\n\t        updateDisplayList: function (includeIgnore) {\n\t            this._displayListLen = 0;\n\t            var roots = this._roots;\n\t            var displayList = this._displayList;\n\t            for (var i = 0, len = roots.length; i < len; i++) {\n\t                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n\t            }\n\t            displayList.length = this._displayListLen;\n\t\n\t            // for (var i = 0, len = displayList.length; i < len; i++) {\n\t            //     displayList[i].__renderidx = i;\n\t            // }\n\t\n\t            // displayList.sort(shapeCompareFunc);\n\t            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n\t        },\n\t\n\t        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\t\n\t            if (el.ignore && !includeIgnore) {\n\t                return;\n\t            }\n\t\n\t            el.beforeUpdate();\n\t\n\t            if (el.__dirty) {\n\t\n\t                el.update();\n\t\n\t            }\n\t\n\t            el.afterUpdate();\n\t\n\t            var clipPath = el.clipPath;\n\t            if (clipPath) {\n\t                // clipPath 的变换是基于 group 的变换\n\t                clipPath.parent = el;\n\t                clipPath.updateTransform();\n\t\n\t                // FIXME 效率影响\n\t                if (clipPaths) {\n\t                    clipPaths = clipPaths.slice();\n\t                    clipPaths.push(clipPath);\n\t                }\n\t                else {\n\t                    clipPaths = [clipPath];\n\t                }\n\t            }\n\t\n\t            if (el.isGroup) {\n\t                var children = el._children;\n\t\n\t                for (var i = 0; i < children.length; i++) {\n\t                    var child = children[i];\n\t\n\t                    // Force to mark as dirty if group is dirty\n\t                    // FIXME __dirtyPath ?\n\t                    if (el.__dirty) {\n\t                        child.__dirty = true;\n\t                    }\n\t\n\t                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n\t                }\n\t\n\t                // Mark group clean here\n\t                el.__dirty = false;\n\t\n\t            }\n\t            else {\n\t                el.__clipPaths = clipPaths;\n\t\n\t                this._displayList[this._displayListLen++] = el;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 添加图形(Shape)或者组(Group)到根节点\n\t         * @param {module:zrender/Element} el\n\t         */\n\t        addRoot: function (el) {\n\t            // Element has been added\n\t            if (this._elements[el.id]) {\n\t                return;\n\t            }\n\t\n\t            if (el instanceof Group) {\n\t                el.addChildrenToStorage(this);\n\t            }\n\t\n\t            this.addToMap(el);\n\t            this._roots.push(el);\n\t        },\n\t\n\t        /**\n\t         * 删除指定的图形(Shape)或者组(Group)\n\t         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n\t         */\n\t        delRoot: function (elId) {\n\t            if (elId == null) {\n\t                // 不指定elId清空\n\t                for (var i = 0; i < this._roots.length; i++) {\n\t                    var root = this._roots[i];\n\t                    if (root instanceof Group) {\n\t                        root.delChildrenFromStorage(this);\n\t                    }\n\t                }\n\t\n\t                this._elements = {};\n\t                this._roots = [];\n\t                this._displayList = [];\n\t                this._displayListLen = 0;\n\t\n\t                return;\n\t            }\n\t\n\t            if (elId instanceof Array) {\n\t                for (var i = 0, l = elId.length; i < l; i++) {\n\t                    this.delRoot(elId[i]);\n\t                }\n\t                return;\n\t            }\n\t\n\t            var el;\n\t            if (typeof(elId) == 'string') {\n\t                el = this._elements[elId];\n\t            }\n\t            else {\n\t                el = elId;\n\t            }\n\t\n\t            var idx = util.indexOf(this._roots, el);\n\t            if (idx >= 0) {\n\t                this.delFromMap(el.id);\n\t                this._roots.splice(idx, 1);\n\t                if (el instanceof Group) {\n\t                    el.delChildrenFromStorage(this);\n\t                }\n\t            }\n\t        },\n\t\n\t        addToMap: function (el) {\n\t            if (el instanceof Group) {\n\t                el.__storage = this;\n\t            }\n\t            el.dirty(false);\n\t\n\t            this._elements[el.id] = el;\n\t\n\t            return this;\n\t        },\n\t\n\t        get: function (elId) {\n\t            return this._elements[elId];\n\t        },\n\t\n\t        delFromMap: function (elId) {\n\t            var elements = this._elements;\n\t            var el = elements[elId];\n\t            if (el) {\n\t                delete elements[elId];\n\t                if (el instanceof Group) {\n\t                    el.__storage = null;\n\t                }\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 清空并且释放Storage\n\t         */\n\t        dispose: function () {\n\t            this._elements =\n\t            this._renderList =\n\t            this._roots = null;\n\t        },\n\t\n\t        displayableSortFunc: shapeCompareFunc\n\t    };\n\t\n\t    module.exports = Storage;\n\t\n\n\n/***/ },\n/* 568 */\n/***/ function(module, exports) {\n\n\t// https://github.com/mziccard/node-timsort\n\t\n\t    var DEFAULT_MIN_MERGE = 32;\n\t\n\t    var DEFAULT_MIN_GALLOPING = 7;\n\t\n\t    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\t\n\t    function minRunLength(n) {\n\t        var r = 0;\n\t\n\t        while (n >= DEFAULT_MIN_MERGE) {\n\t            r |= n & 1;\n\t            n >>= 1;\n\t        }\n\t\n\t        return n + r;\n\t    }\n\t\n\t    function makeAscendingRun(array, lo, hi, compare) {\n\t        var runHi = lo + 1;\n\t\n\t        if (runHi === hi) {\n\t            return 1;\n\t        }\n\t\n\t        if (compare(array[runHi++], array[lo]) < 0) {\n\t            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n\t                runHi++;\n\t            }\n\t\n\t            reverseRun(array, lo, runHi);\n\t        }\n\t        else {\n\t            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n\t                runHi++;\n\t            }\n\t        }\n\t\n\t        return runHi - lo;\n\t    }\n\t\n\t    function reverseRun(array, lo, hi) {\n\t        hi--;\n\t\n\t        while (lo < hi) {\n\t            var t = array[lo];\n\t            array[lo++] = array[hi];\n\t            array[hi--] = t;\n\t        }\n\t    }\n\t\n\t    function binaryInsertionSort(array, lo, hi, start, compare) {\n\t        if (start === lo) {\n\t            start++;\n\t        }\n\t\n\t        for (; start < hi; start++) {\n\t            var pivot = array[start];\n\t\n\t            var left = lo;\n\t            var right = start;\n\t            var mid;\n\t\n\t            while (left < right) {\n\t                mid = left + right >>> 1;\n\t\n\t                if (compare(pivot, array[mid]) < 0) {\n\t                    right = mid;\n\t                }\n\t                else {\n\t                    left = mid + 1;\n\t                }\n\t            }\n\t\n\t            var n = start - left;\n\t\n\t            switch (n) {\n\t                case 3:\n\t                    array[left + 3] = array[left + 2];\n\t\n\t                case 2:\n\t                    array[left + 2] = array[left + 1];\n\t\n\t                case 1:\n\t                    array[left + 1] = array[left];\n\t                    break;\n\t                default:\n\t                    while (n > 0) {\n\t                        array[left + n] = array[left + n - 1];\n\t                        n--;\n\t                    }\n\t            }\n\t\n\t            array[left] = pivot;\n\t        }\n\t    }\n\t\n\t    function gallopLeft(value, array, start, length, hint, compare) {\n\t        var lastOffset = 0;\n\t        var maxOffset = 0;\n\t        var offset = 1;\n\t\n\t        if (compare(value, array[start + hint]) > 0) {\n\t            maxOffset = length - hint;\n\t\n\t            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n\t                lastOffset = offset;\n\t                offset = (offset << 1) + 1;\n\t\n\t                if (offset <= 0) {\n\t                    offset = maxOffset;\n\t                }\n\t            }\n\t\n\t            if (offset > maxOffset) {\n\t                offset = maxOffset;\n\t            }\n\t\n\t            lastOffset += hint;\n\t            offset += hint;\n\t        }\n\t        else {\n\t            maxOffset = hint + 1;\n\t            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n\t                lastOffset = offset;\n\t                offset = (offset << 1) + 1;\n\t\n\t                if (offset <= 0) {\n\t                    offset = maxOffset;\n\t                }\n\t            }\n\t            if (offset > maxOffset) {\n\t                offset = maxOffset;\n\t            }\n\t\n\t            var tmp = lastOffset;\n\t            lastOffset = hint - offset;\n\t            offset = hint - tmp;\n\t        }\n\t\n\t        lastOffset++;\n\t        while (lastOffset < offset) {\n\t            var m = lastOffset + (offset - lastOffset >>> 1);\n\t\n\t            if (compare(value, array[start + m]) > 0) {\n\t                lastOffset = m + 1;\n\t            }\n\t            else {\n\t                offset = m;\n\t            }\n\t        }\n\t        return offset;\n\t    }\n\t\n\t    function gallopRight(value, array, start, length, hint, compare) {\n\t        var lastOffset = 0;\n\t        var maxOffset = 0;\n\t        var offset = 1;\n\t\n\t        if (compare(value, array[start + hint]) < 0) {\n\t            maxOffset = hint + 1;\n\t\n\t            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n\t                lastOffset = offset;\n\t                offset = (offset << 1) + 1;\n\t\n\t                if (offset <= 0) {\n\t                    offset = maxOffset;\n\t                }\n\t            }\n\t\n\t            if (offset > maxOffset) {\n\t                offset = maxOffset;\n\t            }\n\t\n\t            var tmp = lastOffset;\n\t            lastOffset = hint - offset;\n\t            offset = hint - tmp;\n\t        }\n\t        else {\n\t            maxOffset = length - hint;\n\t\n\t            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n\t                lastOffset = offset;\n\t                offset = (offset << 1) + 1;\n\t\n\t                if (offset <= 0) {\n\t                    offset = maxOffset;\n\t                }\n\t            }\n\t\n\t            if (offset > maxOffset) {\n\t                offset = maxOffset;\n\t            }\n\t\n\t            lastOffset += hint;\n\t            offset += hint;\n\t        }\n\t\n\t        lastOffset++;\n\t\n\t        while (lastOffset < offset) {\n\t            var m = lastOffset + (offset - lastOffset >>> 1);\n\t\n\t            if (compare(value, array[start + m]) < 0) {\n\t                offset = m;\n\t            }\n\t            else {\n\t                lastOffset = m + 1;\n\t            }\n\t        }\n\t\n\t        return offset;\n\t    }\n\t\n\t    function TimSort(array, compare) {\n\t        var minGallop = DEFAULT_MIN_GALLOPING;\n\t        var length = 0;\n\t        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n\t        var stackLength = 0;\n\t        var runStart;\n\t        var runLength;\n\t        var stackSize = 0;\n\t\n\t        length = array.length;\n\t\n\t        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n\t            tmpStorageLength = length >>> 1;\n\t        }\n\t\n\t        var tmp = [];\n\t\n\t        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\t\n\t        runStart = [];\n\t        runLength = [];\n\t\n\t        function pushRun(_runStart, _runLength) {\n\t            runStart[stackSize] = _runStart;\n\t            runLength[stackSize] = _runLength;\n\t            stackSize += 1;\n\t        }\n\t\n\t        function mergeRuns() {\n\t            while (stackSize > 1) {\n\t                var n = stackSize - 2;\n\t\n\t                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n\t                    if (runLength[n - 1] < runLength[n + 1]) {\n\t                        n--;\n\t                    }\n\t                }\n\t                else if (runLength[n] > runLength[n + 1]) {\n\t                    break;\n\t                }\n\t                mergeAt(n);\n\t            }\n\t        }\n\t\n\t        function forceMergeRuns() {\n\t            while (stackSize > 1) {\n\t                var n = stackSize - 2;\n\t\n\t                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n\t                    n--;\n\t                }\n\t\n\t                mergeAt(n);\n\t            }\n\t        }\n\t\n\t        function mergeAt(i) {\n\t            var start1 = runStart[i];\n\t            var length1 = runLength[i];\n\t            var start2 = runStart[i + 1];\n\t            var length2 = runLength[i + 1];\n\t\n\t            runLength[i] = length1 + length2;\n\t\n\t            if (i === stackSize - 3) {\n\t                runStart[i + 1] = runStart[i + 2];\n\t                runLength[i + 1] = runLength[i + 2];\n\t            }\n\t\n\t            stackSize--;\n\t\n\t            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n\t            start1 += k;\n\t            length1 -= k;\n\t\n\t            if (length1 === 0) {\n\t                return;\n\t            }\n\t\n\t            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\t\n\t            if (length2 === 0) {\n\t                return;\n\t            }\n\t\n\t            if (length1 <= length2) {\n\t                mergeLow(start1, length1, start2, length2);\n\t            }\n\t            else {\n\t                mergeHigh(start1, length1, start2, length2);\n\t            }\n\t        }\n\t\n\t        function mergeLow(start1, length1, start2, length2) {\n\t            var i = 0;\n\t\n\t            for (i = 0; i < length1; i++) {\n\t                tmp[i] = array[start1 + i];\n\t            }\n\t\n\t            var cursor1 = 0;\n\t            var cursor2 = start2;\n\t            var dest = start1;\n\t\n\t            array[dest++] = array[cursor2++];\n\t\n\t            if (--length2 === 0) {\n\t                for (i = 0; i < length1; i++) {\n\t                    array[dest + i] = tmp[cursor1 + i];\n\t                }\n\t                return;\n\t            }\n\t\n\t            if (length1 === 1) {\n\t                for (i = 0; i < length2; i++) {\n\t                    array[dest + i] = array[cursor2 + i];\n\t                }\n\t                array[dest + length2] = tmp[cursor1];\n\t                return;\n\t            }\n\t\n\t            var _minGallop = minGallop;\n\t            var count1, count2, exit;\n\t\n\t            while (1) {\n\t                count1 = 0;\n\t                count2 = 0;\n\t                exit = false;\n\t\n\t                do {\n\t                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n\t                        array[dest++] = array[cursor2++];\n\t                        count2++;\n\t                        count1 = 0;\n\t\n\t                        if (--length2 === 0) {\n\t                            exit = true;\n\t                            break;\n\t                        }\n\t                    }\n\t                    else {\n\t                        array[dest++] = tmp[cursor1++];\n\t                        count1++;\n\t                        count2 = 0;\n\t                        if (--length1 === 1) {\n\t                            exit = true;\n\t                            break;\n\t                        }\n\t                    }\n\t                } while ((count1 | count2) < _minGallop);\n\t\n\t                if (exit) {\n\t                    break;\n\t                }\n\t\n\t                do {\n\t                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\t\n\t                    if (count1 !== 0) {\n\t                        for (i = 0; i < count1; i++) {\n\t                            array[dest + i] = tmp[cursor1 + i];\n\t                        }\n\t\n\t                        dest += count1;\n\t                        cursor1 += count1;\n\t                        length1 -= count1;\n\t                        if (length1 <= 1) {\n\t                            exit = true;\n\t                            break;\n\t                        }\n\t                    }\n\t\n\t                    array[dest++] = array[cursor2++];\n\t\n\t                    if (--length2 === 0) {\n\t                        exit = true;\n\t                        break;\n\t                    }\n\t\n\t                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\t\n\t                    if (count2 !== 0) {\n\t                        for (i = 0; i < count2; i++) {\n\t                            array[dest + i] = array[cursor2 + i];\n\t                        }\n\t\n\t                        dest += count2;\n\t                        cursor2 += count2;\n\t                        length2 -= count2;\n\t\n\t                        if (length2 === 0) {\n\t                            exit = true;\n\t                            break;\n\t                        }\n\t                    }\n\t                    array[dest++] = tmp[cursor1++];\n\t\n\t                    if (--length1 === 1) {\n\t                        exit = true;\n\t                        break;\n\t                    }\n\t\n\t                    _minGallop--;\n\t                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\t\n\t                if (exit) {\n\t                    break;\n\t                }\n\t\n\t                if (_minGallop < 0) {\n\t                    _minGallop = 0;\n\t                }\n\t\n\t                _minGallop += 2;\n\t            }\n\t\n\t            minGallop = _minGallop;\n\t\n\t            minGallop < 1 && (minGallop = 1);\n\t\n\t            if (length1 === 1) {\n\t                for (i = 0; i < length2; i++) {\n\t                    array[dest + i] = array[cursor2 + i];\n\t                }\n\t                array[dest + length2] = tmp[cursor1];\n\t            }\n\t            else if (length1 === 0) {\n\t                throw new Error();\n\t                // throw new Error('mergeLow preconditions were not respected');\n\t            }\n\t            else {\n\t                for (i = 0; i < length1; i++) {\n\t                    array[dest + i] = tmp[cursor1 + i];\n\t                }\n\t            }\n\t        }\n\t\n\t        function mergeHigh (start1, length1, start2, length2) {\n\t            var i = 0;\n\t\n\t            for (i = 0; i < length2; i++) {\n\t                tmp[i] = array[start2 + i];\n\t            }\n\t\n\t            var cursor1 = start1 + length1 - 1;\n\t            var cursor2 = length2 - 1;\n\t            var dest = start2 + length2 - 1;\n\t            var customCursor = 0;\n\t            var customDest = 0;\n\t\n\t            array[dest--] = array[cursor1--];\n\t\n\t            if (--length1 === 0) {\n\t                customCursor = dest - (length2 - 1);\n\t\n\t                for (i = 0; i < length2; i++) {\n\t                    array[customCursor + i] = tmp[i];\n\t                }\n\t\n\t                return;\n\t            }\n\t\n\t            if (length2 === 1) {\n\t                dest -= length1;\n\t                cursor1 -= length1;\n\t                customDest = dest + 1;\n\t                customCursor = cursor1 + 1;\n\t\n\t                for (i = length1 - 1; i >= 0; i--) {\n\t                    array[customDest + i] = array[customCursor + i];\n\t                }\n\t\n\t                array[dest] = tmp[cursor2];\n\t                return;\n\t            }\n\t\n\t            var _minGallop = minGallop;\n\t\n\t            while (true) {\n\t                var count1 = 0;\n\t                var count2 = 0;\n\t                var exit = false;\n\t\n\t                do {\n\t                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n\t                        array[dest--] = array[cursor1--];\n\t                        count1++;\n\t                        count2 = 0;\n\t                        if (--length1 === 0) {\n\t                            exit = true;\n\t                            break;\n\t                        }\n\t                    }\n\t                    else {\n\t                        array[dest--] = tmp[cursor2--];\n\t                        count2++;\n\t                        count1 = 0;\n\t                        if (--length2 === 1) {\n\t                            exit = true;\n\t                            break;\n\t                        }\n\t                    }\n\t                } while ((count1 | count2) < _minGallop);\n\t\n\t                if (exit) {\n\t                    break;\n\t                }\n\t\n\t                do {\n\t                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\t\n\t                    if (count1 !== 0) {\n\t                        dest -= count1;\n\t                        cursor1 -= count1;\n\t                        length1 -= count1;\n\t                        customDest = dest + 1;\n\t                        customCursor = cursor1 + 1;\n\t\n\t                        for (i = count1 - 1; i >= 0; i--) {\n\t                            array[customDest + i] = array[customCursor + i];\n\t                        }\n\t\n\t                        if (length1 === 0) {\n\t                            exit = true;\n\t                            break;\n\t                        }\n\t                    }\n\t\n\t                    array[dest--] = tmp[cursor2--];\n\t\n\t                    if (--length2 === 1) {\n\t                        exit = true;\n\t                        break;\n\t                    }\n\t\n\t                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\t\n\t                    if (count2 !== 0) {\n\t                        dest -= count2;\n\t                        cursor2 -= count2;\n\t                        length2 -= count2;\n\t                        customDest = dest + 1;\n\t                        customCursor = cursor2 + 1;\n\t\n\t                        for (i = 0; i < count2; i++) {\n\t                            array[customDest + i] = tmp[customCursor + i];\n\t                        }\n\t\n\t                        if (length2 <= 1) {\n\t                            exit = true;\n\t                            break;\n\t                        }\n\t                    }\n\t\n\t                    array[dest--] = array[cursor1--];\n\t\n\t                    if (--length1 === 0) {\n\t                        exit = true;\n\t                        break;\n\t                    }\n\t\n\t                    _minGallop--;\n\t                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\t\n\t                if (exit) {\n\t                    break;\n\t                }\n\t\n\t                if (_minGallop < 0) {\n\t                    _minGallop = 0;\n\t                }\n\t\n\t                _minGallop += 2;\n\t            }\n\t\n\t            minGallop = _minGallop;\n\t\n\t            if (minGallop < 1) {\n\t                minGallop = 1;\n\t            }\n\t\n\t            if (length2 === 1) {\n\t                dest -= length1;\n\t                cursor1 -= length1;\n\t                customDest = dest + 1;\n\t                customCursor = cursor1 + 1;\n\t\n\t                for (i = length1 - 1; i >= 0; i--) {\n\t                    array[customDest + i] = array[customCursor + i];\n\t                }\n\t\n\t                array[dest] = tmp[cursor2];\n\t            }\n\t            else if (length2 === 0) {\n\t                throw new Error();\n\t                // throw new Error('mergeHigh preconditions were not respected');\n\t            }\n\t            else {\n\t                customCursor = dest - (length2 - 1);\n\t                for (i = 0; i < length2; i++) {\n\t                    array[customCursor + i] = tmp[i];\n\t                }\n\t            }\n\t        }\n\t\n\t        this.mergeRuns = mergeRuns;\n\t        this.forceMergeRuns = forceMergeRuns;\n\t        this.pushRun = pushRun;\n\t    }\n\t\n\t    function sort(array, compare, lo, hi) {\n\t        if (!lo) {\n\t            lo = 0;\n\t        }\n\t        if (!hi) {\n\t            hi = array.length;\n\t        }\n\t\n\t        var remaining = hi - lo;\n\t\n\t        if (remaining < 2) {\n\t            return;\n\t        }\n\t\n\t        var runLength = 0;\n\t\n\t        if (remaining < DEFAULT_MIN_MERGE) {\n\t            runLength = makeAscendingRun(array, lo, hi, compare);\n\t            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n\t            return;\n\t        }\n\t\n\t        var ts = new TimSort(array, compare);\n\t\n\t        var minRun = minRunLength(remaining);\n\t\n\t        do {\n\t            runLength = makeAscendingRun(array, lo, hi, compare);\n\t            if (runLength < minRun) {\n\t                var force = remaining;\n\t                if (force > minRun) {\n\t                    force = minRun;\n\t                }\n\t\n\t                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n\t                runLength = force;\n\t            }\n\t\n\t            ts.pushRun(lo, runLength);\n\t            ts.mergeRuns();\n\t\n\t            remaining -= runLength;\n\t            lo += runLength;\n\t        } while (remaining !== 0);\n\t\n\t        ts.forceMergeRuns();\n\t    }\n\t\n\t    module.exports = sort;\n\n\n/***/ },\n/* 569 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 动画主类, 调度和管理所有动画控制器\n\t *\n\t * @module zrender/animation/Animation\n\t * @author pissang(https://github.com/pissang)\n\t */\n\t// TODO Additive animation\n\t// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n\t// https://developer.apple.com/videos/wwdc2014/#236\n\t\n\t\n\t    var util = __webpack_require__(483);\n\t    var Dispatcher = __webpack_require__(570).Dispatcher;\n\t\n\t    var requestAnimationFrame = __webpack_require__(571);\n\t\n\t    var Animator = __webpack_require__(518);\n\t    /**\n\t     * @typedef {Object} IZRenderStage\n\t     * @property {Function} update\n\t     */\n\t\n\t    /**\n\t     * @alias module:zrender/animation/Animation\n\t     * @constructor\n\t     * @param {Object} [options]\n\t     * @param {Function} [options.onframe]\n\t     * @param {IZRenderStage} [options.stage]\n\t     * @example\n\t     *     var animation = new Animation();\n\t     *     var obj = {\n\t     *         x: 100,\n\t     *         y: 100\n\t     *     };\n\t     *     animation.animate(node.position)\n\t     *         .when(1000, {\n\t     *             x: 500,\n\t     *             y: 500\n\t     *         })\n\t     *         .when(2000, {\n\t     *             x: 100,\n\t     *             y: 100\n\t     *         })\n\t     *         .start('spline');\n\t     */\n\t    var Animation = function (options) {\n\t\n\t        options = options || {};\n\t\n\t        this.stage = options.stage || {};\n\t\n\t        this.onframe = options.onframe || function() {};\n\t\n\t        // private properties\n\t        this._clips = [];\n\t\n\t        this._running = false;\n\t\n\t        this._time;\n\t\n\t        this._pausedTime;\n\t\n\t        this._pauseStart;\n\t\n\t        this._paused = false;\n\t\n\t        Dispatcher.call(this);\n\t    };\n\t\n\t    Animation.prototype = {\n\t\n\t        constructor: Animation,\n\t        /**\n\t         * 添加 clip\n\t         * @param {module:zrender/animation/Clip} clip\n\t         */\n\t        addClip: function (clip) {\n\t            this._clips.push(clip);\n\t        },\n\t        /**\n\t         * 添加 animator\n\t         * @param {module:zrender/animation/Animator} animator\n\t         */\n\t        addAnimator: function (animator) {\n\t            animator.animation = this;\n\t            var clips = animator.getClips();\n\t            for (var i = 0; i < clips.length; i++) {\n\t                this.addClip(clips[i]);\n\t            }\n\t        },\n\t        /**\n\t         * 删除动画片段\n\t         * @param {module:zrender/animation/Clip} clip\n\t         */\n\t        removeClip: function(clip) {\n\t            var idx = util.indexOf(this._clips, clip);\n\t            if (idx >= 0) {\n\t                this._clips.splice(idx, 1);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 删除动画片段\n\t         * @param {module:zrender/animation/Animator} animator\n\t         */\n\t        removeAnimator: function (animator) {\n\t            var clips = animator.getClips();\n\t            for (var i = 0; i < clips.length; i++) {\n\t                this.removeClip(clips[i]);\n\t            }\n\t            animator.animation = null;\n\t        },\n\t\n\t        _update: function() {\n\t\n\t            var time = new Date().getTime() - this._pausedTime;\n\t            var delta = time - this._time;\n\t            var clips = this._clips;\n\t            var len = clips.length;\n\t\n\t            var deferredEvents = [];\n\t            var deferredClips = [];\n\t            for (var i = 0; i < len; i++) {\n\t                var clip = clips[i];\n\t                var e = clip.step(time);\n\t                // Throw out the events need to be called after\n\t                // stage.update, like destroy\n\t                if (e) {\n\t                    deferredEvents.push(e);\n\t                    deferredClips.push(clip);\n\t                }\n\t            }\n\t\n\t            // Remove the finished clip\n\t            for (var i = 0; i < len;) {\n\t                if (clips[i]._needsRemove) {\n\t                    clips[i] = clips[len - 1];\n\t                    clips.pop();\n\t                    len--;\n\t                }\n\t                else {\n\t                    i++;\n\t                }\n\t            }\n\t\n\t            len = deferredEvents.length;\n\t            for (var i = 0; i < len; i++) {\n\t                deferredClips[i].fire(deferredEvents[i]);\n\t            }\n\t\n\t            this._time = time;\n\t\n\t            this.onframe(delta);\n\t\n\t            this.trigger('frame', delta);\n\t\n\t            if (this.stage.update) {\n\t                this.stage.update();\n\t            }\n\t        },\n\t\n\t        _startLoop: function () {\n\t            var self = this;\n\t\n\t            this._running = true;\n\t\n\t            function step() {\n\t                if (self._running) {\n\t\n\t                    requestAnimationFrame(step);\n\t\n\t                    !self._paused && self._update();\n\t                }\n\t            }\n\t\n\t            requestAnimationFrame(step);\n\t        },\n\t\n\t        /**\n\t         * 开始运行动画\n\t         */\n\t        start: function () {\n\t\n\t            this._time = new Date().getTime();\n\t            this._pausedTime = 0;\n\t\n\t            this._startLoop();\n\t        },\n\t        /**\n\t         * 停止运行动画\n\t         */\n\t        stop: function () {\n\t            this._running = false;\n\t        },\n\t\n\t        /**\n\t         * Pause\n\t         */\n\t        pause: function () {\n\t            if (!this._paused) {\n\t                this._pauseStart = new Date().getTime();\n\t                this._paused = true;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Resume\n\t         */\n\t        resume: function () {\n\t            if (this._paused) {\n\t                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n\t                this._paused = false;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 清除所有动画片段\n\t         */\n\t        clear: function () {\n\t            this._clips = [];\n\t        },\n\t        /**\n\t         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n\t         * @param  {Object} target\n\t         * @param  {Object} options\n\t         * @param  {boolean} [options.loop=false] 是否循环播放动画\n\t         * @param  {Function} [options.getter=null]\n\t         *         如果指定getter函数，会通过getter函数取属性值\n\t         * @param  {Function} [options.setter=null]\n\t         *         如果指定setter函数，会通过setter函数设置属性值\n\t         * @return {module:zrender/animation/Animation~Animator}\n\t         */\n\t        // TODO Gap\n\t        animate: function (target, options) {\n\t            options = options || {};\n\t            var animator = new Animator(\n\t                target,\n\t                options.loop,\n\t                options.getter,\n\t                options.setter\n\t            );\n\t\n\t            return animator;\n\t        }\n\t    };\n\t\n\t    util.mixin(Animation, Dispatcher);\n\t\n\t    module.exports = Animation;\n\t\n\n\n/***/ },\n/* 570 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 事件辅助类\n\t * @module zrender/core/event\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t */\n\t\n\t\n\t    var Eventful = __webpack_require__(515);\n\t    var env = __webpack_require__(485);\n\t\n\t    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\t\n\t    function getBoundingClientRect(el) {\n\t        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n\t        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n\t    }\n\t\n\t    // `calculate` is optional, default false\n\t    function clientToLocal(el, e, out, calculate) {\n\t        out = out || {};\n\t\n\t        // According to the W3C Working Draft, offsetX and offsetY should be relative\n\t        // to the padding edge of the target element. The only browser using this convention\n\t        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n\t        // not support the properties.\n\t        // (see http://www.jacklmoore.com/notes/mouse-position/)\n\t        // In zr painter.dom, padding edge equals to border edge.\n\t\n\t        // FIXME\n\t        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n\t        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n\t        // is too complex. So css-transfrom dont support in this case temporarily.\n\t        if (calculate || !env.canvasSupported) {\n\t            defaultGetZrXY(el, e, out);\n\t        }\n\t        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n\t        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n\t        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n\t        // zoom-factor, overflow / opacity layers, transforms ...)\n\t        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n\t        // <https://bugs.jquery.com/ticket/8523#comment:14>\n\t        // BTW3, In ff, offsetX/offsetY is always 0.\n\t        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n\t            out.zrX = e.layerX;\n\t            out.zrY = e.layerY;\n\t        }\n\t        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n\t        else if (e.offsetX != null) {\n\t            out.zrX = e.offsetX;\n\t            out.zrY = e.offsetY;\n\t        }\n\t        // For some other device, e.g., IOS safari.\n\t        else {\n\t            defaultGetZrXY(el, e, out);\n\t        }\n\t\n\t        return out;\n\t    }\n\t\n\t    function defaultGetZrXY(el, e, out) {\n\t        // This well-known method below does not support css transform.\n\t        var box = getBoundingClientRect(el);\n\t        out.zrX = e.clientX - box.left;\n\t        out.zrY = e.clientY - box.top;\n\t    }\n\t\n\t    /**\n\t     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n\t     * `calculate` is optional, default false.\n\t     */\n\t    function normalizeEvent(el, e, calculate) {\n\t\n\t        e = e || window.event;\n\t\n\t        if (e.zrX != null) {\n\t            return e;\n\t        }\n\t\n\t        var eventType = e.type;\n\t        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\t\n\t        if (!isTouch) {\n\t            clientToLocal(el, e, e, calculate);\n\t            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n\t        }\n\t        else {\n\t            var touch = eventType != 'touchend'\n\t                ? e.targetTouches[0]\n\t                : e.changedTouches[0];\n\t            touch && clientToLocal(el, touch, e, calculate);\n\t        }\n\t\n\t        return e;\n\t    }\n\t\n\t    function addEventListener(el, name, handler) {\n\t        if (isDomLevel2) {\n\t            el.addEventListener(name, handler);\n\t        }\n\t        else {\n\t            el.attachEvent('on' + name, handler);\n\t        }\n\t    }\n\t\n\t    function removeEventListener(el, name, handler) {\n\t        if (isDomLevel2) {\n\t            el.removeEventListener(name, handler);\n\t        }\n\t        else {\n\t            el.detachEvent('on' + name, handler);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 停止冒泡和阻止默认行为\n\t     * @memberOf module:zrender/core/event\n\t     * @method\n\t     * @param {Event} e : event对象\n\t     */\n\t    var stop = isDomLevel2\n\t        ? function (e) {\n\t            e.preventDefault();\n\t            e.stopPropagation();\n\t            e.cancelBubble = true;\n\t        }\n\t        : function (e) {\n\t            e.returnValue = false;\n\t            e.cancelBubble = true;\n\t        };\n\t\n\t    module.exports = {\n\t        clientToLocal: clientToLocal,\n\t        normalizeEvent: normalizeEvent,\n\t        addEventListener: addEventListener,\n\t        removeEventListener: removeEventListener,\n\t\n\t        stop: stop,\n\t        // 做向上兼容\n\t        Dispatcher: Eventful\n\t    };\n\t\n\n\n/***/ },\n/* 571 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    module.exports = (typeof window !== 'undefined' &&\n\t                                    (window.requestAnimationFrame\n\t                                    || window.msRequestAnimationFrame\n\t                                    || window.mozRequestAnimationFrame\n\t                                    || window.webkitRequestAnimationFrame))\n\t                                || function (func) {\n\t                                    setTimeout(func, 16);\n\t                                };\n\t\n\n\n/***/ },\n/* 572 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var eventTool = __webpack_require__(570);\n\t    var zrUtil = __webpack_require__(483);\n\t    var Eventful = __webpack_require__(515);\n\t    var env = __webpack_require__(485);\n\t    var GestureMgr = __webpack_require__(573);\n\t\n\t    var addEventListener = eventTool.addEventListener;\n\t    var removeEventListener = eventTool.removeEventListener;\n\t    var normalizeEvent = eventTool.normalizeEvent;\n\t\n\t    var TOUCH_CLICK_DELAY = 300;\n\t\n\t    var mouseHandlerNames = [\n\t        'click', 'dblclick', 'mousewheel', 'mouseout',\n\t        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n\t    ];\n\t\n\t    var touchHandlerNames = [\n\t        'touchstart', 'touchend', 'touchmove'\n\t    ];\n\t\n\t    function eventNameFix(name) {\n\t        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n\t    }\n\t\n\t    function processGesture(proxy, event, stage) {\n\t        var gestureMgr = proxy._gestureMgr;\n\t\n\t        stage === 'start' && gestureMgr.clear();\n\t\n\t        var gestureInfo = gestureMgr.recognize(\n\t            event,\n\t            proxy.handler.findHover(event.zrX, event.zrY, null),\n\t            proxy.dom\n\t        );\n\t\n\t        stage === 'end' && gestureMgr.clear();\n\t\n\t        if (gestureInfo) {\n\t            // eventTool.stop(event);\n\t            var type = gestureInfo.type;\n\t            event.gestureEvent = type;\n\t\n\t            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Prevent mouse event from being dispatched after Touch Events action\n\t     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n\t     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n\t     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n\t     * Result: Blocking Mouse Events for 700ms.\n\t     */\n\t    function setTouchTimer(instance) {\n\t        instance._touching = true;\n\t        clearTimeout(instance._touchTimer);\n\t        instance._touchTimer = setTimeout(function () {\n\t            instance._touching = false;\n\t        }, 700);\n\t    }\n\t\n\t    function useTouchEvent() {\n\t        return env.touchEventsSupported;\n\t    }\n\t\n\t    var domHandlers = {\n\t        /**\n\t         * Mouse move handler\n\t         * @inner\n\t         * @param {Event} event\n\t         */\n\t        mousemove: function (event) {\n\t            event = normalizeEvent(this.dom, event);\n\t\n\t            this.trigger('mousemove', event);\n\t        },\n\t\n\t        /**\n\t         * Mouse out handler\n\t         * @inner\n\t         * @param {Event} event\n\t         */\n\t        mouseout: function (event) {\n\t            event = normalizeEvent(this.dom, event);\n\t\n\t            var element = event.toElement || event.relatedTarget;\n\t            if (element != this.dom) {\n\t                while (element && element.nodeType != 9) {\n\t                    // 忽略包含在root中的dom引起的mouseOut\n\t                    if (element === this.dom) {\n\t                        return;\n\t                    }\n\t\n\t                    element = element.parentNode;\n\t                }\n\t            }\n\t\n\t            this.trigger('mouseout', event);\n\t        },\n\t\n\t        /**\n\t         * Touch开始响应函数\n\t         * @inner\n\t         * @param {Event} event\n\t         */\n\t        touchstart: function (event) {\n\t            // Default mouse behaviour should not be disabled here.\n\t            // For example, page may needs to be slided.\n\t\n\t            event = normalizeEvent(this.dom, event);\n\t\n\t            // Mark touch, which is useful in distinguish touch and\n\t            // mouse event in upper applicatoin.\n\t            event.zrByTouch = true;\n\t\n\t            this._lastTouchMoment = new Date();\n\t\n\t            processGesture(this, event, 'start');\n\t\n\t            // In touch device, trigger `mousemove`(`mouseover`) should\n\t            // be triggered.\n\t            domHandlers.mousemove.call(this, event);\n\t\n\t            domHandlers.mousedown.call(this, event);\n\t\n\t            setTouchTimer(this);\n\t        },\n\t\n\t        /**\n\t         * Touch移动响应函数\n\t         * @inner\n\t         * @param {Event} event\n\t         */\n\t        touchmove: function (event) {\n\t\n\t            event = normalizeEvent(this.dom, event);\n\t\n\t            // Mark touch, which is useful in distinguish touch and\n\t            // mouse event in upper applicatoin.\n\t            event.zrByTouch = true;\n\t\n\t            processGesture(this, event, 'change');\n\t\n\t            // Mouse move should always be triggered no matter whether\n\t            // there is gestrue event, because mouse move and pinch may\n\t            // be used at the same time.\n\t            domHandlers.mousemove.call(this, event);\n\t\n\t            setTouchTimer(this);\n\t        },\n\t\n\t        /**\n\t         * Touch结束响应函数\n\t         * @inner\n\t         * @param {Event} event\n\t         */\n\t        touchend: function (event) {\n\t\n\t            event = normalizeEvent(this.dom, event);\n\t\n\t            // Mark touch, which is useful in distinguish touch and\n\t            // mouse event in upper applicatoin.\n\t            event.zrByTouch = true;\n\t\n\t            processGesture(this, event, 'end');\n\t\n\t            domHandlers.mouseup.call(this, event);\n\t\n\t            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n\t            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n\t            // we can conveniently implement \"hover style\" in both PC and touch device just\n\t            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n\t            // to remove \"hover style\" on an element, without any additional code for\n\t            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n\t            // style\" will remain for user view)\n\t\n\t            // click event should always be triggered no matter whether\n\t            // there is gestrue event. System click can not be prevented.\n\t            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n\t                domHandlers.click.call(this, event);\n\t            }\n\t\n\t            setTouchTimer(this);\n\t        }\n\t    };\n\t\n\t    // Common handlers\n\t    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n\t        domHandlers[name] = function (event) {\n\t            event = normalizeEvent(this.dom, event);\n\t            this.trigger(name, event);\n\t        };\n\t    });\n\t\n\t    /**\n\t     * 为控制类实例初始化dom 事件处理函数\n\t     *\n\t     * @inner\n\t     * @param {module:zrender/Handler} instance 控制类实例\n\t     */\n\t    function initDomHandler(instance) {\n\t        for (var i = 0; i < touchHandlerNames.length; i++) {\n\t            var name = touchHandlerNames[i];\n\t            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n\t        }\n\t\n\t        for (var i = 0; i < mouseHandlerNames.length; i++) {\n\t            var name = mouseHandlerNames[i];\n\t            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n\t        }\n\t\n\t        function makeMouseHandler(fn, instance) {\n\t            return function () {\n\t                if (instance._touching) {\n\t                    return;\n\t                }\n\t                return fn.apply(instance, arguments);\n\t            };\n\t        }\n\t    }\n\t\n\t\n\t    function HandlerDomProxy(dom) {\n\t        Eventful.call(this);\n\t\n\t        this.dom = dom;\n\t\n\t        /**\n\t         * @private\n\t         * @type {boolean}\n\t         */\n\t        this._touching = false;\n\t\n\t        /**\n\t         * @private\n\t         * @type {number}\n\t         */\n\t        this._touchTimer;\n\t\n\t        /**\n\t         * @private\n\t         * @type {module:zrender/core/GestureMgr}\n\t         */\n\t        this._gestureMgr = new GestureMgr();\n\t\n\t        this._handlers = {};\n\t\n\t        initDomHandler(this);\n\t\n\t        if (useTouchEvent()) {\n\t            mountHandlers(touchHandlerNames, this);\n\t\n\t            // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n\t            // addEventListener(root, 'mouseout', this._mouseoutHandler);\n\t        }\n\t\n\t        // Considering some devices that both enable touch and mouse event (like MS Surface\n\t        // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n\t        // mouse event can not be handle in those devices.\n\t        mountHandlers(mouseHandlerNames, this);\n\t\n\t        function mountHandlers(handlerNames, instance) {\n\t            zrUtil.each(handlerNames, function (name) {\n\t                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n\t            }, instance);\n\t        }\n\t    }\n\t\n\t    var handlerDomProxyProto = HandlerDomProxy.prototype;\n\t    handlerDomProxyProto.dispose = function () {\n\t        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\t\n\t        for (var i = 0; i < handlerNames.length; i++) {\n\t            var name = handlerNames[i];\n\t            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n\t        }\n\t    };\n\t\n\t    handlerDomProxyProto.setCursor = function (cursorStyle) {\n\t        this.dom.style.cursor = cursorStyle || 'default';\n\t    };\n\t\n\t    zrUtil.mixin(HandlerDomProxy, Eventful);\n\t\n\t    module.exports = HandlerDomProxy;\n\n\n/***/ },\n/* 573 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Only implements needed gestures for mobile.\n\t */\n\t\n\t\n\t    var eventUtil = __webpack_require__(570);\n\t\n\t    var GestureMgr = function () {\n\t\n\t        /**\n\t         * @private\n\t         * @type {Array.<Object>}\n\t         */\n\t        this._track = [];\n\t    };\n\t\n\t    GestureMgr.prototype = {\n\t\n\t        constructor: GestureMgr,\n\t\n\t        recognize: function (event, target, root) {\n\t            this._doTrack(event, target, root);\n\t            return this._recognize(event);\n\t        },\n\t\n\t        clear: function () {\n\t            this._track.length = 0;\n\t            return this;\n\t        },\n\t\n\t        _doTrack: function (event, target, root) {\n\t            var touches = event.touches;\n\t\n\t            if (!touches) {\n\t                return;\n\t            }\n\t\n\t            var trackItem = {\n\t                points: [],\n\t                touches: [],\n\t                target: target,\n\t                event: event\n\t            };\n\t\n\t            for (var i = 0, len = touches.length; i < len; i++) {\n\t                var touch = touches[i];\n\t                var pos = eventUtil.clientToLocal(root, touch, {});\n\t                trackItem.points.push([pos.zrX, pos.zrY]);\n\t                trackItem.touches.push(touch);\n\t            }\n\t\n\t            this._track.push(trackItem);\n\t        },\n\t\n\t        _recognize: function (event) {\n\t            for (var eventName in recognizers) {\n\t                if (recognizers.hasOwnProperty(eventName)) {\n\t                    var gestureInfo = recognizers[eventName](this._track, event);\n\t                    if (gestureInfo) {\n\t                        return gestureInfo;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    function dist(pointPair) {\n\t        var dx = pointPair[1][0] - pointPair[0][0];\n\t        var dy = pointPair[1][1] - pointPair[0][1];\n\t\n\t        return Math.sqrt(dx * dx + dy * dy);\n\t    }\n\t\n\t    function center(pointPair) {\n\t        return [\n\t            (pointPair[0][0] + pointPair[1][0]) / 2,\n\t            (pointPair[0][1] + pointPair[1][1]) / 2\n\t        ];\n\t    }\n\t\n\t    var recognizers = {\n\t\n\t        pinch: function (track, event) {\n\t            var trackLen = track.length;\n\t\n\t            if (!trackLen) {\n\t                return;\n\t            }\n\t\n\t            var pinchEnd = (track[trackLen - 1] || {}).points;\n\t            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\t\n\t            if (pinchPre\n\t                && pinchPre.length > 1\n\t                && pinchEnd\n\t                && pinchEnd.length > 1\n\t            ) {\n\t                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n\t                !isFinite(pinchScale) && (pinchScale = 1);\n\t\n\t                event.pinchScale = pinchScale;\n\t\n\t                var pinchCenter = center(pinchEnd);\n\t                event.pinchX = pinchCenter[0];\n\t                event.pinchY = pinchCenter[1];\n\t\n\t                return {\n\t                    type: 'pinch',\n\t                    target: track[0].target,\n\t                    event: event\n\t                };\n\t            }\n\t        }\n\t\n\t        // Only pinch currently.\n\t    };\n\t\n\t    module.exports = GestureMgr;\n\t\n\n\n/***/ },\n/* 574 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Default canvas painter\n\t * @module zrender/Painter\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         errorrik (errorrik@gmail.com)\n\t *         pissang (https://www.github.com/pissang)\n\t */\n\t \n\t\n\t    var config = __webpack_require__(523);\n\t    var util = __webpack_require__(483);\n\t    var log = __webpack_require__(522);\n\t    var BoundingRect = __webpack_require__(491);\n\t    var timsort = __webpack_require__(568);\n\t\n\t    var Layer = __webpack_require__(575);\n\t\n\t    var requestAnimationFrame = __webpack_require__(571);\n\t\n\t    // PENDIGN\n\t    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n\t    //\n\t    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n\t    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\t\n\t    function parseInt10(val) {\n\t        return parseInt(val, 10);\n\t    }\n\t\n\t    function isLayerValid(layer) {\n\t        if (!layer) {\n\t            return false;\n\t        }\n\t\n\t        if (layer.isBuildin) {\n\t            return true;\n\t        }\n\t\n\t        if (typeof(layer.resize) !== 'function'\n\t            || typeof(layer.refresh) !== 'function'\n\t        ) {\n\t            return false;\n\t        }\n\t\n\t        return true;\n\t    }\n\t\n\t    function preProcessLayer(layer) {\n\t        layer.__unusedCount++;\n\t    }\n\t\n\t    function postProcessLayer(layer) {\n\t        if (layer.__unusedCount == 1) {\n\t            layer.clear();\n\t        }\n\t    }\n\t\n\t    var tmpRect = new BoundingRect(0, 0, 0, 0);\n\t    var viewRect = new BoundingRect(0, 0, 0, 0);\n\t    function isDisplayableCulled(el, width, height) {\n\t        tmpRect.copy(el.getBoundingRect());\n\t        if (el.transform) {\n\t            tmpRect.applyTransform(el.transform);\n\t        }\n\t        viewRect.width = width;\n\t        viewRect.height = height;\n\t        return !tmpRect.intersect(viewRect);\n\t    }\n\t\n\t    function isClipPathChanged(clipPaths, prevClipPaths) {\n\t        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n\t            return false;\n\t        }\n\t\n\t        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n\t            return true;\n\t        }\n\t        for (var i = 0; i < clipPaths.length; i++) {\n\t            if (clipPaths[i] !== prevClipPaths[i]) {\n\t                return true;\n\t            }\n\t        }\n\t    }\n\t\n\t    function doClip(clipPaths, ctx) {\n\t        for (var i = 0; i < clipPaths.length; i++) {\n\t            var clipPath = clipPaths[i];\n\t            var path = clipPath.path;\n\t\n\t            clipPath.setTransform(ctx);\n\t            path.beginPath(ctx);\n\t            clipPath.buildPath(path, clipPath.shape);\n\t            ctx.clip();\n\t            // Transform back\n\t            clipPath.restoreTransform(ctx);\n\t        }\n\t    }\n\t\n\t    function createRoot(width, height) {\n\t        var domRoot = document.createElement('div');\n\t\n\t        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\t        domRoot.style.cssText = [\n\t            'position:relative',\n\t            'overflow:hidden',\n\t            'width:' + width + 'px',\n\t            'height:' + height + 'px',\n\t            'padding:0',\n\t            'margin:0',\n\t            'border-width:0'\n\t        ].join(';') + ';';\n\t\n\t        return domRoot;\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/Painter\n\t     * @constructor\n\t     * @param {HTMLElement} root 绘图容器\n\t     * @param {module:zrender/Storage} storage\n\t     * @param {Ojbect} opts\n\t     */\n\t    var Painter = function (root, storage, opts) {\n\t        // In node environment using node-canvas\n\t        var singleCanvas = !root.nodeName // In node ?\n\t            || root.nodeName.toUpperCase() === 'CANVAS';\n\t\n\t        this._opts = opts = util.extend({}, opts || {});\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n\t        /**\n\t         * @type {boolean}\n\t         * @private\n\t         */\n\t        this._singleCanvas = singleCanvas;\n\t        /**\n\t         * 绘图容器\n\t         * @type {HTMLElement}\n\t         */\n\t        this.root = root;\n\t\n\t        var rootStyle = root.style;\n\t\n\t        if (rootStyle) {\n\t            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n\t            rootStyle['-webkit-user-select'] =\n\t            rootStyle['user-select'] =\n\t            rootStyle['-webkit-touch-callout'] = 'none';\n\t\n\t            root.innerHTML = '';\n\t        }\n\t\n\t        /**\n\t         * @type {module:zrender/Storage}\n\t         */\n\t        this.storage = storage;\n\t\n\t        /**\n\t         * @type {Array.<number>}\n\t         * @private\n\t         */\n\t        var zlevelList = this._zlevelList = [];\n\t\n\t        /**\n\t         * @type {Object.<string, module:zrender/Layer>}\n\t         * @private\n\t         */\n\t        var layers = this._layers = {};\n\t\n\t        /**\n\t         * @type {Object.<string, Object>}\n\t         * @type {private}\n\t         */\n\t        this._layerConfig = {};\n\t\n\t        if (!singleCanvas) {\n\t            this._width = this._getSize(0);\n\t            this._height = this._getSize(1);\n\t\n\t            var domRoot = this._domRoot = createRoot(\n\t                this._width, this._height\n\t            );\n\t            root.appendChild(domRoot);\n\t        }\n\t        else {\n\t            // Use canvas width and height directly\n\t            var width = root.width;\n\t            var height = root.height;\n\t            this._width = width;\n\t            this._height = height;\n\t\n\t            // Create layer if only one given canvas\n\t            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\t            var mainLayer = new Layer(root, this, 1);\n\t            mainLayer.initContext();\n\t            // FIXME Use canvas width and height\n\t            // mainLayer.resize(width, height);\n\t            layers[0] = mainLayer;\n\t            zlevelList.push(0);\n\t        }\n\t\n\t        this.pathToImage = this._createPathToImage();\n\t\n\t        // Layers for progressive rendering\n\t        this._progressiveLayers = [];\n\t\n\t        /**\n\t         * @type {module:zrender/Layer}\n\t         * @private\n\t         */\n\t        this._hoverlayer;\n\t\n\t        this._hoverElements = [];\n\t    };\n\t\n\t    Painter.prototype = {\n\t\n\t        constructor: Painter,\n\t\n\t        /**\n\t         * If painter use a single canvas\n\t         * @return {boolean}\n\t         */\n\t        isSingleCanvas: function () {\n\t            return this._singleCanvas;\n\t        },\n\t        /**\n\t         * @return {HTMLDivElement}\n\t         */\n\t        getViewportRoot: function () {\n\t            return this._singleCanvas ? this._layers[0].dom : this._domRoot;\n\t        },\n\t\n\t        /**\n\t         * 刷新\n\t         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n\t         */\n\t        refresh: function (paintAll) {\n\t\n\t            var list = this.storage.getDisplayList(true);\n\t\n\t            var zlevelList = this._zlevelList;\n\t\n\t            this._paintList(list, paintAll);\n\t\n\t            // Paint custum layers\n\t            for (var i = 0; i < zlevelList.length; i++) {\n\t                var z = zlevelList[i];\n\t                var layer = this._layers[z];\n\t                if (!layer.isBuildin && layer.refresh) {\n\t                    layer.refresh();\n\t                }\n\t            }\n\t\n\t            this.refreshHover();\n\t\n\t            if (this._progressiveLayers.length) {\n\t                this._startProgessive();\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        addHover: function (el, hoverStyle) {\n\t            if (el.__hoverMir) {\n\t                return;\n\t            }\n\t            var elMirror = new el.constructor({\n\t                style: el.style,\n\t                shape: el.shape\n\t            });\n\t            elMirror.__from = el;\n\t            el.__hoverMir = elMirror;\n\t            elMirror.setStyle(hoverStyle);\n\t            this._hoverElements.push(elMirror);\n\t        },\n\t\n\t        removeHover: function (el) {\n\t            var elMirror = el.__hoverMir;\n\t            var hoverElements = this._hoverElements;\n\t            var idx = util.indexOf(hoverElements, elMirror);\n\t            if (idx >= 0) {\n\t                hoverElements.splice(idx, 1);\n\t            }\n\t            el.__hoverMir = null;\n\t        },\n\t\n\t        clearHover: function (el) {\n\t            var hoverElements = this._hoverElements;\n\t            for (var i = 0; i < hoverElements.length; i++) {\n\t                var from = hoverElements[i].__from;\n\t                if (from) {\n\t                    from.__hoverMir = null;\n\t                }\n\t            }\n\t            hoverElements.length = 0;\n\t        },\n\t\n\t        refreshHover: function () {\n\t            var hoverElements = this._hoverElements;\n\t            var len = hoverElements.length;\n\t            var hoverLayer = this._hoverlayer;\n\t            hoverLayer && hoverLayer.clear();\n\t\n\t            if (!len) {\n\t                return;\n\t            }\n\t            timsort(hoverElements, this.storage.displayableSortFunc);\n\t\n\t            // Use a extream large zlevel\n\t            // FIXME?\n\t            if (!hoverLayer) {\n\t                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n\t            }\n\t\n\t            var scope = {};\n\t            hoverLayer.ctx.save();\n\t            for (var i = 0; i < len;) {\n\t                var el = hoverElements[i];\n\t                var originalEl = el.__from;\n\t                // Original el is removed\n\t                // PENDING\n\t                if (!(originalEl && originalEl.__zr)) {\n\t                    hoverElements.splice(i, 1);\n\t                    originalEl.__hoverMir = null;\n\t                    len--;\n\t                    continue;\n\t                }\n\t                i++;\n\t\n\t                // Use transform\n\t                // FIXME style and shape ?\n\t                if (!originalEl.invisible) {\n\t                    el.transform = originalEl.transform;\n\t                    el.invTransform = originalEl.invTransform;\n\t                    el.__clipPaths = originalEl.__clipPaths;\n\t                    // el.\n\t                    this._doPaintEl(el, hoverLayer, true, scope);\n\t                }\n\t            }\n\t            hoverLayer.ctx.restore();\n\t        },\n\t\n\t        _startProgessive: function () {\n\t            var self = this;\n\t\n\t            if (!self._furtherProgressive) {\n\t                return;\n\t            }\n\t\n\t            // Use a token to stop progress steps triggered by\n\t            // previous zr.refresh calling.\n\t            var token = self._progressiveToken = +new Date();\n\t\n\t            self._progress++;\n\t            requestAnimationFrame(step);\n\t\n\t            function step() {\n\t                // In case refreshed or disposed\n\t                if (token === self._progressiveToken && self.storage) {\n\t\n\t                    self._doPaintList(self.storage.getDisplayList());\n\t\n\t                    if (self._furtherProgressive) {\n\t                        self._progress++;\n\t                        requestAnimationFrame(step);\n\t                    }\n\t                    else {\n\t                        self._progressiveToken = -1;\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        _clearProgressive: function () {\n\t            this._progressiveToken = -1;\n\t            this._progress = 0;\n\t            util.each(this._progressiveLayers, function (layer) {\n\t                layer.__dirty && layer.clear();\n\t            });\n\t        },\n\t\n\t        _paintList: function (list, paintAll) {\n\t\n\t            if (paintAll == null) {\n\t                paintAll = false;\n\t            }\n\t\n\t            this._updateLayerStatus(list);\n\t\n\t            this._clearProgressive();\n\t\n\t            this.eachBuildinLayer(preProcessLayer);\n\t\n\t            this._doPaintList(list, paintAll);\n\t\n\t            this.eachBuildinLayer(postProcessLayer);\n\t        },\n\t\n\t        _doPaintList: function (list, paintAll) {\n\t            var currentLayer;\n\t            var currentZLevel;\n\t            var ctx;\n\t\n\t            // var invTransform = [];\n\t            var scope;\n\t\n\t            var progressiveLayerIdx = 0;\n\t            var currentProgressiveLayer;\n\t\n\t            var width = this._width;\n\t            var height = this._height;\n\t            var layerProgress;\n\t            var frame = this._progress;\n\t            function flushProgressiveLayer(layer) {\n\t                var dpr = ctx.dpr || 1;\n\t                ctx.save();\n\t                ctx.globalAlpha = 1;\n\t                ctx.shadowBlur = 0;\n\t                // Avoid layer don't clear in next progressive frame\n\t                currentLayer.__dirty = true;\n\t                ctx.setTransform(1, 0, 0, 1, 0, 0);\n\t                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n\t                ctx.restore();\n\t            }\n\t\n\t            for (var i = 0, l = list.length; i < l; i++) {\n\t                var el = list[i];\n\t                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\t\n\t                var elFrame = el.__frame;\n\t\n\t                // Flush at current context\n\t                // PENDING\n\t                if (elFrame < 0 && currentProgressiveLayer) {\n\t                    flushProgressiveLayer(currentProgressiveLayer);\n\t                    currentProgressiveLayer = null;\n\t                }\n\t\n\t                // Change draw layer\n\t                if (currentZLevel !== elZLevel) {\n\t                    if (ctx) {\n\t                        ctx.restore();\n\t                    }\n\t\n\t                    // Reset scope\n\t                    scope = {};\n\t\n\t                    // Only 0 zlevel if only has one canvas\n\t                    currentZLevel = elZLevel;\n\t                    currentLayer = this.getLayer(currentZLevel);\n\t\n\t                    if (!currentLayer.isBuildin) {\n\t                        log(\n\t                            'ZLevel ' + currentZLevel\n\t                            + ' has been used by unkown layer ' + currentLayer.id\n\t                        );\n\t                    }\n\t\n\t                    ctx = currentLayer.ctx;\n\t                    ctx.save();\n\t\n\t                    // Reset the count\n\t                    currentLayer.__unusedCount = 0;\n\t\n\t                    if (currentLayer.__dirty || paintAll) {\n\t                        currentLayer.clear();\n\t                    }\n\t                }\n\t\n\t                if (!(currentLayer.__dirty || paintAll)) {\n\t                    continue;\n\t                }\n\t\n\t                if (elFrame >= 0) {\n\t                    // Progressive layer changed\n\t                    if (!currentProgressiveLayer) {\n\t                        currentProgressiveLayer = this._progressiveLayers[\n\t                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n\t                        ];\n\t\n\t                        currentProgressiveLayer.ctx.save();\n\t                        currentProgressiveLayer.renderScope = {};\n\t\n\t                        if (currentProgressiveLayer\n\t                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n\t                        ) {\n\t                            // flushProgressiveLayer(currentProgressiveLayer);\n\t                            // Quick jump all progressive elements\n\t                            // All progressive element are not dirty, jump over and flush directly\n\t                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n\t                            // currentProgressiveLayer = null;\n\t                            continue;\n\t                        }\n\t\n\t                        layerProgress = currentProgressiveLayer.__progress;\n\t\n\t                        if (!currentProgressiveLayer.__dirty) {\n\t                            // Keep rendering\n\t                            frame = layerProgress;\n\t                        }\n\t\n\t                        currentProgressiveLayer.__progress = frame + 1;\n\t                    }\n\t\n\t                    if (elFrame === frame) {\n\t                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n\t                    }\n\t                }\n\t                else {\n\t                    this._doPaintEl(el, currentLayer, paintAll, scope);\n\t                }\n\t\n\t                el.__dirty = false;\n\t            }\n\t\n\t            if (currentProgressiveLayer) {\n\t                flushProgressiveLayer(currentProgressiveLayer);\n\t            }\n\t\n\t            // Restore the lastLayer ctx\n\t            ctx && ctx.restore();\n\t            // If still has clipping state\n\t            // if (scope.prevElClipPaths) {\n\t            //     ctx.restore();\n\t            // }\n\t\n\t            this._furtherProgressive = false;\n\t            util.each(this._progressiveLayers, function (layer) {\n\t                if (layer.__maxProgress >= layer.__progress) {\n\t                    this._furtherProgressive = true;\n\t                }\n\t            }, this);\n\t        },\n\t\n\t        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n\t            var ctx = currentLayer.ctx;\n\t            var m = el.transform;\n\t            if (\n\t                (currentLayer.__dirty || forcePaint)\n\t                // Ignore invisible element\n\t                && !el.invisible\n\t                // Ignore transparent element\n\t                && el.style.opacity !== 0\n\t                // Ignore scale 0 element, in some environment like node-canvas\n\t                // Draw a scale 0 element can cause all following draw wrong\n\t                // And setTransform with scale 0 will cause set back transform failed.\n\t                && !(m && !m[0] && !m[3])\n\t                // Ignore culled element\n\t                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n\t            ) {\n\t\n\t                var clipPaths = el.__clipPaths;\n\t\n\t                // Optimize when clipping on group with several elements\n\t                if (scope.prevClipLayer !== currentLayer\n\t                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n\t                ) {\n\t                    // If has previous clipping state, restore from it\n\t                    if (scope.prevElClipPaths) {\n\t                        scope.prevClipLayer.ctx.restore();\n\t                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\t\n\t                        // Reset prevEl since context has been restored\n\t                        scope.prevEl = null;\n\t                    }\n\t                    // New clipping state\n\t                    if (clipPaths) {\n\t                        ctx.save();\n\t                        doClip(clipPaths, ctx);\n\t                        scope.prevClipLayer = currentLayer;\n\t                        scope.prevElClipPaths = clipPaths;\n\t                    }\n\t                }\n\t                el.beforeBrush && el.beforeBrush(ctx);\n\t\n\t                el.brush(ctx, scope.prevEl || null);\n\t                scope.prevEl = el;\n\t\n\t                el.afterBrush && el.afterBrush(ctx);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n\t         * @param {number} zlevel\n\t         * @return {module:zrender/Layer}\n\t         */\n\t        getLayer: function (zlevel) {\n\t            if (this._singleCanvas) {\n\t                return this._layers[0];\n\t            }\n\t\n\t            var layer = this._layers[zlevel];\n\t            if (!layer) {\n\t                // Create a new layer\n\t                layer = new Layer('zr_' + zlevel, this, this.dpr);\n\t                layer.isBuildin = true;\n\t\n\t                if (this._layerConfig[zlevel]) {\n\t                    util.merge(layer, this._layerConfig[zlevel], true);\n\t                }\n\t\n\t                this.insertLayer(zlevel, layer);\n\t\n\t                // Context is created after dom inserted to document\n\t                // Or excanvas will get 0px clientWidth and clientHeight\n\t                layer.initContext();\n\t            }\n\t\n\t            return layer;\n\t        },\n\t\n\t        insertLayer: function (zlevel, layer) {\n\t\n\t            var layersMap = this._layers;\n\t            var zlevelList = this._zlevelList;\n\t            var len = zlevelList.length;\n\t            var prevLayer = null;\n\t            var i = -1;\n\t            var domRoot = this._domRoot;\n\t\n\t            if (layersMap[zlevel]) {\n\t                log('ZLevel ' + zlevel + ' has been used already');\n\t                return;\n\t            }\n\t            // Check if is a valid layer\n\t            if (!isLayerValid(layer)) {\n\t                log('Layer of zlevel ' + zlevel + ' is not valid');\n\t                return;\n\t            }\n\t\n\t            if (len > 0 && zlevel > zlevelList[0]) {\n\t                for (i = 0; i < len - 1; i++) {\n\t                    if (\n\t                        zlevelList[i] < zlevel\n\t                        && zlevelList[i + 1] > zlevel\n\t                    ) {\n\t                        break;\n\t                    }\n\t                }\n\t                prevLayer = layersMap[zlevelList[i]];\n\t            }\n\t            zlevelList.splice(i + 1, 0, zlevel);\n\t\n\t            if (prevLayer) {\n\t                var prevDom = prevLayer.dom;\n\t                if (prevDom.nextSibling) {\n\t                    domRoot.insertBefore(\n\t                        layer.dom,\n\t                        prevDom.nextSibling\n\t                    );\n\t                }\n\t                else {\n\t                    domRoot.appendChild(layer.dom);\n\t                }\n\t            }\n\t            else {\n\t                if (domRoot.firstChild) {\n\t                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n\t                }\n\t                else {\n\t                    domRoot.appendChild(layer.dom);\n\t                }\n\t            }\n\t\n\t            layersMap[zlevel] = layer;\n\t        },\n\t\n\t        // Iterate each layer\n\t        eachLayer: function (cb, context) {\n\t            var zlevelList = this._zlevelList;\n\t            var z;\n\t            var i;\n\t            for (i = 0; i < zlevelList.length; i++) {\n\t                z = zlevelList[i];\n\t                cb.call(context, this._layers[z], z);\n\t            }\n\t        },\n\t\n\t        // Iterate each buildin layer\n\t        eachBuildinLayer: function (cb, context) {\n\t            var zlevelList = this._zlevelList;\n\t            var layer;\n\t            var z;\n\t            var i;\n\t            for (i = 0; i < zlevelList.length; i++) {\n\t                z = zlevelList[i];\n\t                layer = this._layers[z];\n\t                if (layer.isBuildin) {\n\t                    cb.call(context, layer, z);\n\t                }\n\t            }\n\t        },\n\t\n\t        // Iterate each other layer except buildin layer\n\t        eachOtherLayer: function (cb, context) {\n\t            var zlevelList = this._zlevelList;\n\t            var layer;\n\t            var z;\n\t            var i;\n\t            for (i = 0; i < zlevelList.length; i++) {\n\t                z = zlevelList[i];\n\t                layer = this._layers[z];\n\t                if (! layer.isBuildin) {\n\t                    cb.call(context, layer, z);\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 获取所有已创建的层\n\t         * @param {Array.<module:zrender/Layer>} [prevLayer]\n\t         */\n\t        getLayers: function () {\n\t            return this._layers;\n\t        },\n\t\n\t        _updateLayerStatus: function (list) {\n\t\n\t            var layers = this._layers;\n\t            var progressiveLayers = this._progressiveLayers;\n\t\n\t            var elCountsLastFrame = {};\n\t            var progressiveElCountsLastFrame = {};\n\t\n\t            this.eachBuildinLayer(function (layer, z) {\n\t                elCountsLastFrame[z] = layer.elCount;\n\t                layer.elCount = 0;\n\t                layer.__dirty = false;\n\t            });\n\t\n\t            util.each(progressiveLayers, function (layer, idx) {\n\t                progressiveElCountsLastFrame[idx] = layer.elCount;\n\t                layer.elCount = 0;\n\t                layer.__dirty = false;\n\t            });\n\t\n\t            var progressiveLayerCount = 0;\n\t            var currentProgressiveLayer;\n\t            var lastProgressiveKey;\n\t            var frameCount = 0;\n\t            for (var i = 0, l = list.length; i < l; i++) {\n\t                var el = list[i];\n\t                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n\t                var layer = layers[zlevel];\n\t                var elProgress = el.progressive;\n\t                if (layer) {\n\t                    layer.elCount++;\n\t                    layer.__dirty = layer.__dirty || el.__dirty;\n\t                }\n\t\n\t                /////// Update progressive\n\t                if (elProgress >= 0) {\n\t                    // Fix wrong progressive sequence problem.\n\t                    if (lastProgressiveKey !== elProgress) {\n\t                        lastProgressiveKey = elProgress;\n\t                        frameCount++;\n\t                    }\n\t                    var elFrame = el.__frame = frameCount - 1;\n\t                    if (!currentProgressiveLayer) {\n\t                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n\t                        currentProgressiveLayer = progressiveLayers[idx];\n\t                        if (!currentProgressiveLayer) {\n\t                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n\t                                'progressive', this, this.dpr\n\t                            );\n\t                            currentProgressiveLayer.initContext();\n\t                        }\n\t                        currentProgressiveLayer.__maxProgress = 0;\n\t                    }\n\t                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n\t                    currentProgressiveLayer.elCount++;\n\t\n\t                    currentProgressiveLayer.__maxProgress = Math.max(\n\t                        currentProgressiveLayer.__maxProgress, elFrame\n\t                    );\n\t\n\t                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n\t                        // Should keep rendering this  layer because progressive rendering is not finished yet\n\t                        layer.__dirty = true;\n\t                    }\n\t                }\n\t                else {\n\t                    el.__frame = -1;\n\t\n\t                    if (currentProgressiveLayer) {\n\t                        currentProgressiveLayer.__nextIdxNotProg = i;\n\t                        progressiveLayerCount++;\n\t                        currentProgressiveLayer = null;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (currentProgressiveLayer) {\n\t                progressiveLayerCount++;\n\t                currentProgressiveLayer.__nextIdxNotProg = i;\n\t            }\n\t\n\t            // 层中的元素数量有发生变化\n\t            this.eachBuildinLayer(function (layer, z) {\n\t                if (elCountsLastFrame[z] !== layer.elCount) {\n\t                    layer.__dirty = true;\n\t                }\n\t            });\n\t\n\t            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n\t            util.each(progressiveLayers, function (layer, idx) {\n\t                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n\t                    el.__dirty = true;\n\t                }\n\t                if (layer.__dirty) {\n\t                    layer.__progress = 0;\n\t                }\n\t            });\n\t        },\n\t\n\t        /**\n\t         * 清除hover层外所有内容\n\t         */\n\t        clear: function () {\n\t            this.eachBuildinLayer(this._clearLayer);\n\t            return this;\n\t        },\n\t\n\t        _clearLayer: function (layer) {\n\t            layer.clear();\n\t        },\n\t\n\t        /**\n\t         * 修改指定zlevel的绘制参数\n\t         *\n\t         * @param {string} zlevel\n\t         * @param {Object} config 配置对象\n\t         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n\t         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n\t         * @param {number} [config.lastFrameAlpha=0.7]\n\t         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n\t         */\n\t        configLayer: function (zlevel, config) {\n\t            if (config) {\n\t                var layerConfig = this._layerConfig;\n\t                if (!layerConfig[zlevel]) {\n\t                    layerConfig[zlevel] = config;\n\t                }\n\t                else {\n\t                    util.merge(layerConfig[zlevel], config, true);\n\t                }\n\t\n\t                var layer = this._layers[zlevel];\n\t\n\t                if (layer) {\n\t                    util.merge(layer, layerConfig[zlevel], true);\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 删除指定层\n\t         * @param {number} zlevel 层所在的zlevel\n\t         */\n\t        delLayer: function (zlevel) {\n\t            var layers = this._layers;\n\t            var zlevelList = this._zlevelList;\n\t            var layer = layers[zlevel];\n\t            if (!layer) {\n\t                return;\n\t            }\n\t            layer.dom.parentNode.removeChild(layer.dom);\n\t            delete layers[zlevel];\n\t\n\t            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n\t        },\n\t\n\t        /**\n\t         * 区域大小变化后重绘\n\t         */\n\t        resize: function (width, height) {\n\t            var domRoot = this._domRoot;\n\t            // FIXME Why ?\n\t            domRoot.style.display = 'none';\n\t\n\t            // Save input w/h\n\t            var opts = this._opts;\n\t            width != null && (opts.width = width);\n\t            height != null && (opts.height = height);\n\t\n\t            width = this._getSize(0);\n\t            height = this._getSize(1);\n\t\n\t            domRoot.style.display = '';\n\t\n\t            // 优化没有实际改变的resize\n\t            if (this._width != width || height != this._height) {\n\t                domRoot.style.width = width + 'px';\n\t                domRoot.style.height = height + 'px';\n\t\n\t                for (var id in this._layers) {\n\t                    if (this._layers.hasOwnProperty(id)) {\n\t                        this._layers[id].resize(width, height);\n\t                    }\n\t                }\n\t                util.each(this._progressiveLayers, function (layer) {\n\t                    layer.resize(width, height);\n\t                });\n\t\n\t                this.refresh(true);\n\t            }\n\t\n\t            this._width = width;\n\t            this._height = height;\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 清除单独的一个层\n\t         * @param {number} zlevel\n\t         */\n\t        clearLayer: function (zlevel) {\n\t            var layer = this._layers[zlevel];\n\t            if (layer) {\n\t                layer.clear();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 释放\n\t         */\n\t        dispose: function () {\n\t            this.root.innerHTML = '';\n\t\n\t            this.root =\n\t            this.storage =\n\t\n\t            this._domRoot =\n\t            this._layers = null;\n\t        },\n\t\n\t        /**\n\t         * Get canvas which has all thing rendered\n\t         * @param {Object} opts\n\t         * @param {string} [opts.backgroundColor]\n\t         */\n\t        getRenderedCanvas: function (opts) {\n\t            opts = opts || {};\n\t            if (this._singleCanvas) {\n\t                return this._layers[0].dom;\n\t            }\n\t\n\t            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n\t            imageLayer.initContext();\n\t\n\t            imageLayer.clearColor = opts.backgroundColor;\n\t            imageLayer.clear();\n\t\n\t            var displayList = this.storage.getDisplayList(true);\n\t\n\t            var scope = {};\n\t            for (var i = 0; i < displayList.length; i++) {\n\t                var el = displayList[i];\n\t                this._doPaintEl(el, imageLayer, true, scope);\n\t            }\n\t\n\t            return imageLayer.dom;\n\t        },\n\t        /**\n\t         * 获取绘图区域宽度\n\t         */\n\t        getWidth: function () {\n\t            return this._width;\n\t        },\n\t\n\t        /**\n\t         * 获取绘图区域高度\n\t         */\n\t        getHeight: function () {\n\t            return this._height;\n\t        },\n\t\n\t        _getSize: function (whIdx) {\n\t            var opts = this._opts;\n\t            var wh = ['width', 'height'][whIdx];\n\t            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n\t            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n\t            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\t\n\t            if (opts[wh] != null && opts[wh] !== 'auto') {\n\t                return parseFloat(opts[wh]);\n\t            }\n\t\n\t            var root = this.root;\n\t            var stl = document.defaultView.getComputedStyle(root);\n\t\n\t            return (\n\t                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n\t                - (parseInt10(stl[plt]) || 0)\n\t                - (parseInt10(stl[prb]) || 0)\n\t            ) | 0;\n\t        },\n\t\n\t        _pathToImage: function (id, path, width, height, dpr) {\n\t            var canvas = document.createElement('canvas');\n\t            var ctx = canvas.getContext('2d');\n\t\n\t            canvas.width = width * dpr;\n\t            canvas.height = height * dpr;\n\t\n\t            ctx.clearRect(0, 0, width * dpr, height * dpr);\n\t\n\t            var pathTransform = {\n\t                position: path.position,\n\t                rotation: path.rotation,\n\t                scale: path.scale\n\t            };\n\t            path.position = [0, 0, 0];\n\t            path.rotation = 0;\n\t            path.scale = [1, 1];\n\t            if (path) {\n\t                path.brush(ctx);\n\t            }\n\t\n\t            var ImageShape = __webpack_require__(543);\n\t            var imgShape = new ImageShape({\n\t                id: id,\n\t                style: {\n\t                    x: 0,\n\t                    y: 0,\n\t                    image: canvas\n\t                }\n\t            });\n\t\n\t            if (pathTransform.position != null) {\n\t                imgShape.position = path.position = pathTransform.position;\n\t            }\n\t\n\t            if (pathTransform.rotation != null) {\n\t                imgShape.rotation = path.rotation = pathTransform.rotation;\n\t            }\n\t\n\t            if (pathTransform.scale != null) {\n\t                imgShape.scale = path.scale = pathTransform.scale;\n\t            }\n\t\n\t            return imgShape;\n\t        },\n\t\n\t        _createPathToImage: function () {\n\t            var me = this;\n\t\n\t            return function (id, e, width, height) {\n\t                return me._pathToImage(\n\t                    id, e, width, height, me.dpr\n\t                );\n\t            };\n\t        }\n\t    };\n\t\n\t    module.exports = Painter;\n\t\n\n\n/***/ },\n/* 575 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module zrender/Layer\n\t * @author pissang(https://www.github.com/pissang)\n\t */\n\t\n\t\n\t    var util = __webpack_require__(483);\n\t    var config = __webpack_require__(523);\n\t    var Style = __webpack_require__(529);\n\t    var Pattern = __webpack_require__(541);\n\t\n\t    function returnFalse() {\n\t        return false;\n\t    }\n\t\n\t    /**\n\t     * 创建dom\n\t     *\n\t     * @inner\n\t     * @param {string} id dom id 待用\n\t     * @param {string} type dom type，such as canvas, div etc.\n\t     * @param {Painter} painter painter instance\n\t     * @param {number} number\n\t     */\n\t    function createDom(id, type, painter, dpr) {\n\t        var newDom = document.createElement(type);\n\t        var width = painter.getWidth();\n\t        var height = painter.getHeight();\n\t\n\t        var newDomStyle = newDom.style;\n\t        // 没append呢，请原谅我这样写，清晰~\n\t        newDomStyle.position = 'absolute';\n\t        newDomStyle.left = 0;\n\t        newDomStyle.top = 0;\n\t        newDomStyle.width = width + 'px';\n\t        newDomStyle.height = height + 'px';\n\t        newDom.width = width * dpr;\n\t        newDom.height = height * dpr;\n\t\n\t        // id不作为索引用，避免可能造成的重名，定义为私有属性\n\t        newDom.setAttribute('data-zr-dom-id', id);\n\t        return newDom;\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/Layer\n\t     * @constructor\n\t     * @extends module:zrender/mixin/Transformable\n\t     * @param {string} id\n\t     * @param {module:zrender/Painter} painter\n\t     * @param {number} [dpr]\n\t     */\n\t    var Layer = function(id, painter, dpr) {\n\t        var dom;\n\t        dpr = dpr || config.devicePixelRatio;\n\t        if (typeof id === 'string') {\n\t            dom = createDom(id, 'canvas', painter, dpr);\n\t        }\n\t        // Not using isDom because in node it will return false\n\t        else if (util.isObject(id)) {\n\t            dom = id;\n\t            id = dom.id;\n\t        }\n\t        this.id = id;\n\t        this.dom = dom;\n\t\n\t        var domStyle = dom.style;\n\t        if (domStyle) { // Not in node\n\t            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\t            domStyle['-webkit-user-select'] = 'none';\n\t            domStyle['user-select'] = 'none';\n\t            domStyle['-webkit-touch-callout'] = 'none';\n\t            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n\t            domStyle['padding'] = 0;\n\t            domStyle['margin'] = 0;\n\t            domStyle['border-width'] = 0;\n\t        }\n\t\n\t        this.domBack = null;\n\t        this.ctxBack = null;\n\t\n\t        this.painter = painter;\n\t\n\t        this.config = null;\n\t\n\t        // Configs\n\t        /**\n\t         * 每次清空画布的颜色\n\t         * @type {string}\n\t         * @default 0\n\t         */\n\t        this.clearColor = 0;\n\t        /**\n\t         * 是否开启动态模糊\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        this.motionBlur = false;\n\t        /**\n\t         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n\t         * @type {number}\n\t         * @default 0.7\n\t         */\n\t        this.lastFrameAlpha = 0.7;\n\t\n\t        /**\n\t         * Layer dpr\n\t         * @type {number}\n\t         */\n\t        this.dpr = dpr;\n\t    };\n\t\n\t    Layer.prototype = {\n\t\n\t        constructor: Layer,\n\t\n\t        elCount: 0,\n\t\n\t        __dirty: true,\n\t\n\t        initContext: function () {\n\t            this.ctx = this.dom.getContext('2d');\n\t\n\t            this.ctx.dpr = this.dpr;\n\t        },\n\t\n\t        createBackBuffer: function () {\n\t            var dpr = this.dpr;\n\t\n\t            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n\t            this.ctxBack = this.domBack.getContext('2d');\n\t\n\t            if (dpr != 1) {\n\t                this.ctxBack.scale(dpr, dpr);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param  {number} width\n\t         * @param  {number} height\n\t         */\n\t        resize: function (width, height) {\n\t            var dpr = this.dpr;\n\t\n\t            var dom = this.dom;\n\t            var domStyle = dom.style;\n\t            var domBack = this.domBack;\n\t\n\t            domStyle.width = width + 'px';\n\t            domStyle.height = height + 'px';\n\t\n\t            dom.width = width * dpr;\n\t            dom.height = height * dpr;\n\t\n\t            if (domBack) {\n\t                domBack.width = width * dpr;\n\t                domBack.height = height * dpr;\n\t\n\t                if (dpr != 1) {\n\t                    this.ctxBack.scale(dpr, dpr);\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 清空该层画布\n\t         * @param {boolean} clearAll Clear all with out motion blur\n\t         */\n\t        clear: function (clearAll) {\n\t            var dom = this.dom;\n\t            var ctx = this.ctx;\n\t            var width = dom.width;\n\t            var height = dom.height;\n\t\n\t            var clearColor = this.clearColor;\n\t            var haveMotionBLur = this.motionBlur && !clearAll;\n\t            var lastFrameAlpha = this.lastFrameAlpha;\n\t\n\t            var dpr = this.dpr;\n\t\n\t            if (haveMotionBLur) {\n\t                if (!this.domBack) {\n\t                    this.createBackBuffer();\n\t                }\n\t\n\t                this.ctxBack.globalCompositeOperation = 'copy';\n\t                this.ctxBack.drawImage(\n\t                    dom, 0, 0,\n\t                    width / dpr,\n\t                    height / dpr\n\t                );\n\t            }\n\t\n\t            ctx.clearRect(0, 0, width, height);\n\t            if (clearColor) {\n\t                var clearColorGradientOrPattern;\n\t                // Gradient\n\t                if (clearColor.colorStops) {\n\t                    // Cache canvas gradient\n\t                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n\t                        x: 0,\n\t                        y: 0,\n\t                        width: width,\n\t                        height: height\n\t                    });\n\t\n\t                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n\t                }\n\t                // Pattern\n\t                else if (clearColor.image) {\n\t                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n\t                }\n\t                ctx.save();\n\t                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n\t                ctx.fillRect(0, 0, width, height);\n\t                ctx.restore();\n\t            }\n\t\n\t            if (haveMotionBLur) {\n\t                var domBack = this.domBack;\n\t                ctx.save();\n\t                ctx.globalAlpha = lastFrameAlpha;\n\t                ctx.drawImage(domBack, 0, 0, width, height);\n\t                ctx.restore();\n\t            }\n\t        }\n\t    };\n\t\n\t    module.exports = Layer;\n\n\n/***/ },\n/* 576 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t    var Gradient = __webpack_require__(561);\n\t    module.exports = function (ecModel) {\n\t        function encodeColor(seriesModel) {\n\t            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n\t            var data = seriesModel.getData();\n\t            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n\t                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\t\n\t            // FIXME Set color function or use the platte color\n\t            data.setVisual('color', color);\n\t\n\t            // Only visible series has each data be visual encoded\n\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\n\t                if (typeof color === 'function' && !(color instanceof Gradient)) {\n\t                    data.each(function (idx) {\n\t                        data.setItemVisual(\n\t                            idx, 'color', color(seriesModel.getDataParams(idx))\n\t                        );\n\t                    });\n\t                }\n\t\n\t                // itemStyle in each data item\n\t                data.each(function (idx) {\n\t                    var itemModel = data.getItemModel(idx);\n\t                    var color = itemModel.get(colorAccessPath, true);\n\t                    if (color != null) {\n\t                        data.setItemVisual(idx, 'color', color);\n\t                    }\n\t                });\n\t            }\n\t        }\n\t        ecModel.eachRawSeries(encodeColor);\n\t    };\n\n\n/***/ },\n/* 577 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Compatitable with 2.0\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var compatStyle = __webpack_require__(578);\n\t\n\t    function get(opt, path) {\n\t        path = path.split(',');\n\t        var obj = opt;\n\t        for (var i = 0; i < path.length; i++) {\n\t            obj = obj && obj[path[i]];\n\t            if (obj == null) {\n\t                break;\n\t            }\n\t        }\n\t        return obj;\n\t    }\n\t\n\t    function set(opt, path, val, overwrite) {\n\t        path = path.split(',');\n\t        var obj = opt;\n\t        var key;\n\t        for (var i = 0; i < path.length - 1; i++) {\n\t            key = path[i];\n\t            if (obj[key] == null) {\n\t                obj[key] = {};\n\t            }\n\t            obj = obj[key];\n\t        }\n\t        if (overwrite || obj[path[i]] == null) {\n\t            obj[path[i]] = val;\n\t        }\n\t    }\n\t\n\t    function compatLayoutProperties(option) {\n\t        each(LAYOUT_PROPERTIES, function (prop) {\n\t            if (prop[0] in option && !(prop[1] in option)) {\n\t                option[prop[1]] = option[prop[0]];\n\t            }\n\t        });\n\t    }\n\t\n\t    var LAYOUT_PROPERTIES = [\n\t        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n\t    ];\n\t\n\t    var COMPATITABLE_COMPONENTS = [\n\t        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n\t    ];\n\t\n\t    var COMPATITABLE_SERIES = [\n\t        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n\t        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n\t        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n\t    ];\n\t\n\t    var each = zrUtil.each;\n\t\n\t    module.exports = function (option) {\n\t        each(option.series, function (seriesOpt) {\n\t            if (!zrUtil.isObject(seriesOpt)) {\n\t                return;\n\t            }\n\t\n\t            var seriesType = seriesOpt.type;\n\t\n\t            compatStyle(seriesOpt);\n\t\n\t            if (seriesType === 'pie' || seriesType === 'gauge') {\n\t                if (seriesOpt.clockWise != null) {\n\t                    seriesOpt.clockwise = seriesOpt.clockWise;\n\t                }\n\t            }\n\t            if (seriesType === 'gauge') {\n\t                var pointerColor = get(seriesOpt, 'pointer.color');\n\t                pointerColor != null\n\t                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n\t            }\n\t\n\t            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n\t                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n\t                    compatLayoutProperties(seriesOpt);\n\t                    break;\n\t                }\n\t            }\n\t        });\n\t\n\t        // dataRange has changed to visualMap\n\t        if (option.dataRange) {\n\t            option.visualMap = option.dataRange;\n\t        }\n\t\n\t        each(COMPATITABLE_COMPONENTS, function (componentName) {\n\t            var options = option[componentName];\n\t            if (options) {\n\t                if (!zrUtil.isArray(options)) {\n\t                    options = [options];\n\t                }\n\t                each(options, function (option) {\n\t                    compatLayoutProperties(option);\n\t                });\n\t            }\n\t        });\n\t    };\n\n\n/***/ },\n/* 578 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var POSSIBLE_STYLES = [\n\t        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n\t        'chordStyle', 'label', 'labelLine'\n\t    ];\n\t\n\t    function compatItemStyle(opt) {\n\t        var itemStyleOpt = opt && opt.itemStyle;\n\t        if (itemStyleOpt) {\n\t            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n\t                var normalItemStyleOpt = itemStyleOpt.normal;\n\t                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\t                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n\t                    opt[styleName] = opt[styleName] || {};\n\t                    if (!opt[styleName].normal) {\n\t                        opt[styleName].normal = normalItemStyleOpt[styleName];\n\t                    }\n\t                    else {\n\t                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n\t                    }\n\t                    normalItemStyleOpt[styleName] = null;\n\t                }\n\t                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n\t                    opt[styleName] = opt[styleName] || {};\n\t                    if (!opt[styleName].emphasis) {\n\t                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n\t                    }\n\t                    else {\n\t                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n\t                    }\n\t                    emphasisItemStyleOpt[styleName] = null;\n\t                }\n\t            });\n\t        }\n\t    }\n\t\n\t    module.exports = function (seriesOpt) {\n\t        if (!seriesOpt) {\n\t            return;\n\t        }\n\t        compatItemStyle(seriesOpt);\n\t        compatItemStyle(seriesOpt.markPoint);\n\t        compatItemStyle(seriesOpt.markLine);\n\t        var data = seriesOpt.data;\n\t        if (data) {\n\t            for (var i = 0; i < data.length; i++) {\n\t                compatItemStyle(data[i]);\n\t            }\n\t            // mark point data\n\t            var markPoint = seriesOpt.markPoint;\n\t            if (markPoint && markPoint.data) {\n\t                var mpData = markPoint.data;\n\t                for (var i = 0; i < mpData.length; i++) {\n\t                    compatItemStyle(mpData[i]);\n\t                }\n\t            }\n\t            // mark line data\n\t            var markLine = seriesOpt.markLine;\n\t            if (markLine && markLine.data) {\n\t                var mlData = markLine.data;\n\t                for (var i = 0; i < mlData.length; i++) {\n\t                    if (zrUtil.isArray(mlData[i])) {\n\t                        compatItemStyle(mlData[i][0]);\n\t                        compatItemStyle(mlData[i][1]);\n\t                    }\n\t                    else {\n\t                        compatItemStyle(mlData[i]);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    };\n\n\n/***/ },\n/* 579 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var graphic = __webpack_require__(525);\n\t    var zrUtil = __webpack_require__(483);\n\t    var PI = Math.PI;\n\t    /**\n\t     * @param {module:echarts/ExtensionAPI} api\n\t     * @param {Object} [opts]\n\t     * @param {string} [opts.text]\n\t     * @param {string} [opts.color]\n\t     * @param {string} [opts.textColor]\n\t     * @return {module:zrender/Element}\n\t     */\n\t    module.exports = function (api, opts) {\n\t        opts = opts || {};\n\t        zrUtil.defaults(opts, {\n\t            text: 'loading',\n\t            color: '#c23531',\n\t            textColor: '#000',\n\t            maskColor: 'rgba(255, 255, 255, 0.8)',\n\t            zlevel: 0\n\t        });\n\t        var mask = new graphic.Rect({\n\t            style: {\n\t                fill: opts.maskColor\n\t            },\n\t            zlevel: opts.zlevel,\n\t            z: 10000\n\t        });\n\t        var arc = new graphic.Arc({\n\t            shape: {\n\t                startAngle: -PI / 2,\n\t                endAngle: -PI / 2 + 0.1,\n\t                r: 10\n\t            },\n\t            style: {\n\t                stroke: opts.color,\n\t                lineCap: 'round',\n\t                lineWidth: 5\n\t            },\n\t            zlevel: opts.zlevel,\n\t            z: 10001\n\t        });\n\t        var labelRect = new graphic.Rect({\n\t            style: {\n\t                fill: 'none',\n\t                text: opts.text,\n\t                textPosition: 'right',\n\t                textDistance: 10,\n\t                textFill: opts.textColor\n\t            },\n\t            zlevel: opts.zlevel,\n\t            z: 10001\n\t        });\n\t\n\t        arc.animateShape(true)\n\t            .when(1000, {\n\t                endAngle: PI * 3 / 2\n\t            })\n\t            .start('circularInOut');\n\t        arc.animateShape(true)\n\t            .when(1000, {\n\t                startAngle: PI * 3 / 2\n\t            })\n\t            .delay(300)\n\t            .start('circularInOut');\n\t\n\t        var group = new graphic.Group();\n\t        group.add(arc);\n\t        group.add(labelRect);\n\t        group.add(mask);\n\t        // Inject resize\n\t        group.resize = function () {\n\t            var cx = api.getWidth() / 2;\n\t            var cy = api.getHeight() / 2;\n\t            arc.setShape({\n\t                cx: cx,\n\t                cy: cy\n\t            });\n\t            var r = arc.shape.r;\n\t            labelRect.setShape({\n\t                x: cx - r,\n\t                y: cy - r,\n\t                width: r * 2,\n\t                height: r * 2\n\t            });\n\t\n\t            mask.setShape({\n\t                x: 0,\n\t                y: 0,\n\t                width: api.getWidth(),\n\t                height: api.getHeight()\n\t            });\n\t        };\n\t        group.resize();\n\t        return group;\n\t    };\n\n\n/***/ },\n/* 580 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * List for data storage\n\t * @module echarts/data/List\n\t */\n\t\n\t\n\t    var UNDEFINED = 'undefined';\n\t    var globalObj = typeof window === 'undefined' ? global : window;\n\t    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n\t        ? Array : globalObj.Float64Array;\n\t    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n\t        ? Array : globalObj.Int32Array;\n\t\n\t    var dataCtors = {\n\t        'float': Float64Array,\n\t        'int': Int32Array,\n\t        // Ordinal data type can be string or int\n\t        'ordinal': Array,\n\t        'number': Array,\n\t        'time': Array\n\t    };\n\t\n\t    var Model = __webpack_require__(494);\n\t    var DataDiffer = __webpack_require__(581);\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var modelUtil = __webpack_require__(487);\n\t    var isObject = zrUtil.isObject;\n\t\n\t    var TRANSFERABLE_PROPERTIES = [\n\t        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n\t    ];\n\t\n\t    var transferProperties = function (a, b) {\n\t        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n\t            if (b.hasOwnProperty(propName)) {\n\t                a[propName] = b[propName];\n\t            }\n\t        });\n\t\n\t        a.__wrappedMethods = b.__wrappedMethods;\n\t    };\n\t\n\t    /**\n\t     * @constructor\n\t     * @alias module:echarts/data/List\n\t     *\n\t     * @param {Array.<string>} dimensions\n\t     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n\t     * @param {module:echarts/model/Model} hostModel\n\t     */\n\t    var List = function (dimensions, hostModel) {\n\t\n\t        dimensions = dimensions || ['x', 'y'];\n\t\n\t        var dimensionInfos = {};\n\t        var dimensionNames = [];\n\t        for (var i = 0; i < dimensions.length; i++) {\n\t            var dimensionName;\n\t            var dimensionInfo = {};\n\t            if (typeof dimensions[i] === 'string') {\n\t                dimensionName = dimensions[i];\n\t                dimensionInfo = {\n\t                    name: dimensionName,\n\t                    stackable: false,\n\t                    // Type can be 'float', 'int', 'number'\n\t                    // Default is number, Precision of float may not enough\n\t                    type: 'number'\n\t                };\n\t            }\n\t            else {\n\t                dimensionInfo = dimensions[i];\n\t                dimensionName = dimensionInfo.name;\n\t                dimensionInfo.type = dimensionInfo.type || 'number';\n\t            }\n\t            dimensionNames.push(dimensionName);\n\t            dimensionInfos[dimensionName] = dimensionInfo;\n\t        }\n\t        /**\n\t         * @readOnly\n\t         * @type {Array.<string>}\n\t         */\n\t        this.dimensions = dimensionNames;\n\t\n\t        /**\n\t         * Infomation of each data dimension, like data type.\n\t         * @type {Object}\n\t         */\n\t        this._dimensionInfos = dimensionInfos;\n\t\n\t        /**\n\t         * @type {module:echarts/model/Model}\n\t         */\n\t        this.hostModel = hostModel;\n\t\n\t        /**\n\t         * @type {module:echarts/model/Model}\n\t         */\n\t        this.dataType;\n\t\n\t        /**\n\t         * Indices stores the indices of data subset after filtered.\n\t         * This data subset will be used in chart.\n\t         * @type {Array.<number>}\n\t         * @readOnly\n\t         */\n\t        this.indices = [];\n\t\n\t        /**\n\t         * Data storage\n\t         * @type {Object.<key, TypedArray|Array>}\n\t         * @private\n\t         */\n\t        this._storage = {};\n\t\n\t        /**\n\t         * @type {Array.<string>}\n\t         */\n\t        this._nameList = [];\n\t        /**\n\t         * @type {Array.<string>}\n\t         */\n\t        this._idList = [];\n\t        /**\n\t         * Models of data option is stored sparse for optimizing memory cost\n\t         * @type {Array.<module:echarts/model/Model>}\n\t         * @private\n\t         */\n\t        this._optionModels = [];\n\t\n\t        /**\n\t         * @param {module:echarts/data/List}\n\t         */\n\t        this.stackedOn = null;\n\t\n\t        /**\n\t         * Global visual properties after visual coding\n\t         * @type {Object}\n\t         * @private\n\t         */\n\t        this._visual = {};\n\t\n\t        /**\n\t         * Globel layout properties.\n\t         * @type {Object}\n\t         * @private\n\t         */\n\t        this._layout = {};\n\t\n\t        /**\n\t         * Item visual properties after visual coding\n\t         * @type {Array.<Object>}\n\t         * @private\n\t         */\n\t        this._itemVisuals = [];\n\t\n\t        /**\n\t         * Item layout properties after layout\n\t         * @type {Array.<Object>}\n\t         * @private\n\t         */\n\t        this._itemLayouts = [];\n\t\n\t        /**\n\t         * Graphic elemnents\n\t         * @type {Array.<module:zrender/Element>}\n\t         * @private\n\t         */\n\t        this._graphicEls = [];\n\t\n\t        /**\n\t         * @type {Array.<Array|Object>}\n\t         * @private\n\t         */\n\t        this._rawData;\n\t\n\t        /**\n\t         * @type {Object}\n\t         * @private\n\t         */\n\t        this._extent;\n\t    };\n\t\n\t    var listProto = List.prototype;\n\t\n\t    listProto.type = 'list';\n\t    /**\n\t     * If each data item has it's own option\n\t     * @type {boolean}\n\t     */\n\t    listProto.hasItemOption = true;\n\t\n\t    /**\n\t     * Get dimension name\n\t     * @param {string|number} dim\n\t     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n\t     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n\t     * @return {string} Concrete dim name.\n\t     */\n\t    listProto.getDimension = function (dim) {\n\t        if (!isNaN(dim)) {\n\t            dim = this.dimensions[dim] || dim;\n\t        }\n\t        return dim;\n\t    };\n\t    /**\n\t     * Get type and stackable info of particular dimension\n\t     * @param {string|number} dim\n\t     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n\t     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n\t     */\n\t    listProto.getDimensionInfo = function (dim) {\n\t        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n\t    };\n\t\n\t    /**\n\t     * Initialize from data\n\t     * @param {Array.<Object|number|Array>} data\n\t     * @param {Array.<string>} [nameList]\n\t     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n\t     */\n\t    listProto.initData = function (data, nameList, dimValueGetter) {\n\t        data = data || [];\n\t\n\t        if (__DEV__) {\n\t            if (!zrUtil.isArray(data)) {\n\t                throw new Error('Invalid data.');\n\t            }\n\t        }\n\t\n\t        this._rawData = data;\n\t\n\t        // Clear\n\t        var storage = this._storage = {};\n\t        var indices = this.indices = [];\n\t\n\t        var dimensions = this.dimensions;\n\t        var size = data.length;\n\t        var dimensionInfoMap = this._dimensionInfos;\n\t\n\t        var idList = [];\n\t        var nameRepeatCount = {};\n\t\n\t        nameList = nameList || [];\n\t\n\t        // Init storage\n\t        for (var i = 0; i < dimensions.length; i++) {\n\t            var dimInfo = dimensionInfoMap[dimensions[i]];\n\t            var DataCtor = dataCtors[dimInfo.type];\n\t            storage[dimensions[i]] = new DataCtor(size);\n\t        }\n\t\n\t        var self = this;\n\t        if (!dimValueGetter) {\n\t            self.hasItemOption = false;\n\t        }\n\t        // Default dim value getter\n\t        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n\t            var value = modelUtil.getDataItemValue(dataItem);\n\t            // If any dataItem is like { value: 10 }\n\t            if (modelUtil.isDataItemOption(dataItem)) {\n\t                self.hasItemOption = true;\n\t            }\n\t            return modelUtil.converDataValue(\n\t                (value instanceof Array)\n\t                    ? value[dimIndex]\n\t                    // If value is a single number or something else not array.\n\t                    : value,\n\t                dimensionInfoMap[dimName]\n\t            );\n\t        };\n\t\n\t        for (var idx = 0; idx < data.length; idx++) {\n\t            var dataItem = data[idx];\n\t            // Each data item is value\n\t            // [1, 2]\n\t            // 2\n\t            // Bar chart, line chart which uses category axis\n\t            // only gives the 'y' value. 'x' value is the indices of cateogry\n\t            // Use a tempValue to normalize the value to be a (x, y) value\n\t\n\t            // Store the data by dimensions\n\t            for (var k = 0; k < dimensions.length; k++) {\n\t                var dim = dimensions[k];\n\t                var dimStorage = storage[dim];\n\t                // PENDING NULL is empty or zero\n\t                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n\t            }\n\t\n\t            indices.push(idx);\n\t        }\n\t\n\t        // Use the name in option and create id\n\t        for (var i = 0; i < data.length; i++) {\n\t            if (!nameList[i]) {\n\t                if (data[i] && data[i].name != null) {\n\t                    nameList[i] = data[i].name;\n\t                }\n\t            }\n\t            var name = nameList[i] || '';\n\t            // Try using the id in option\n\t            var id = data[i] && data[i].id;\n\t\n\t            if (!id && name) {\n\t                // Use name as id and add counter to avoid same name\n\t                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n\t                id = name;\n\t                if (nameRepeatCount[name] > 0) {\n\t                    id += '__ec__' + nameRepeatCount[name];\n\t                }\n\t                nameRepeatCount[name]++;\n\t            }\n\t            id && (idList[i] = id);\n\t        }\n\t\n\t        this._nameList = nameList;\n\t        this._idList = idList;\n\t    };\n\t\n\t    /**\n\t     * @return {number}\n\t     */\n\t    listProto.count = function () {\n\t        return this.indices.length;\n\t    };\n\t\n\t    /**\n\t     * Get value. Return NaN if idx is out of range.\n\t     * @param {string} dim Dim must be concrete name.\n\t     * @param {number} idx\n\t     * @param {boolean} stack\n\t     * @return {number}\n\t     */\n\t    listProto.get = function (dim, idx, stack) {\n\t        var storage = this._storage;\n\t        var dataIndex = this.indices[idx];\n\t\n\t        // If value not exists\n\t        if (dataIndex == null) {\n\t            return NaN;\n\t        }\n\t\n\t        var value = storage[dim] && storage[dim][dataIndex];\n\t        // FIXME ordinal data type is not stackable\n\t        if (stack) {\n\t            var dimensionInfo = this._dimensionInfos[dim];\n\t            if (dimensionInfo && dimensionInfo.stackable) {\n\t                var stackedOn = this.stackedOn;\n\t                while (stackedOn) {\n\t                    // Get no stacked data of stacked on\n\t                    var stackedValue = stackedOn.get(dim, idx);\n\t                    // Considering positive stack, negative stack and empty data\n\t                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n\t                        || (value <= 0 && stackedValue < 0) // Negative stack\n\t                    ) {\n\t                        value += stackedValue;\n\t                    }\n\t                    stackedOn = stackedOn.stackedOn;\n\t                }\n\t            }\n\t        }\n\t        return value;\n\t    };\n\t\n\t    /**\n\t     * Get value for multi dimensions.\n\t     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n\t     * @param {number} idx\n\t     * @param {boolean} stack\n\t     * @return {number}\n\t     */\n\t    listProto.getValues = function (dimensions, idx, stack) {\n\t        var values = [];\n\t\n\t        if (!zrUtil.isArray(dimensions)) {\n\t            stack = idx;\n\t            idx = dimensions;\n\t            dimensions = this.dimensions;\n\t        }\n\t\n\t        for (var i = 0, len = dimensions.length; i < len; i++) {\n\t            values.push(this.get(dimensions[i], idx, stack));\n\t        }\n\t\n\t        return values;\n\t    };\n\t\n\t    /**\n\t     * If value is NaN. Inlcuding '-'\n\t     * @param {string} dim\n\t     * @param {number} idx\n\t     * @return {number}\n\t     */\n\t    listProto.hasValue = function (idx) {\n\t        var dimensions = this.dimensions;\n\t        var dimensionInfos = this._dimensionInfos;\n\t        for (var i = 0, len = dimensions.length; i < len; i++) {\n\t            if (\n\t                // Ordinal type can be string or number\n\t                dimensionInfos[dimensions[i]].type !== 'ordinal'\n\t                && isNaN(this.get(dimensions[i], idx))\n\t            ) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t\n\t    /**\n\t     * Get extent of data in one dimension\n\t     * @param {string} dim\n\t     * @param {boolean} stack\n\t     */\n\t    listProto.getDataExtent = function (dim, stack) {\n\t        dim = this.getDimension(dim);\n\t        var dimData = this._storage[dim];\n\t        var dimInfo = this.getDimensionInfo(dim);\n\t        stack = (dimInfo && dimInfo.stackable) && stack;\n\t        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n\t        var value;\n\t        if (dimExtent) {\n\t            return dimExtent;\n\t        }\n\t        // var dimInfo = this._dimensionInfos[dim];\n\t        if (dimData) {\n\t            var min = Infinity;\n\t            var max = -Infinity;\n\t            // var isOrdinal = dimInfo.type === 'ordinal';\n\t            for (var i = 0, len = this.count(); i < len; i++) {\n\t                value = this.get(dim, i, stack);\n\t                // FIXME\n\t                // if (isOrdinal && typeof value === 'string') {\n\t                //     value = zrUtil.indexOf(dimData, value);\n\t                // }\n\t                value < min && (min = value);\n\t                value > max && (max = value);\n\t            }\n\t            return (this._extent[dim + !!stack] = [min, max]);\n\t        }\n\t        else {\n\t            return [Infinity, -Infinity];\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Get sum of data in one dimension\n\t     * @param {string} dim\n\t     * @param {boolean} stack\n\t     */\n\t    listProto.getSum = function (dim, stack) {\n\t        var dimData = this._storage[dim];\n\t        var sum = 0;\n\t        if (dimData) {\n\t            for (var i = 0, len = this.count(); i < len; i++) {\n\t                var value = this.get(dim, i, stack);\n\t                if (!isNaN(value)) {\n\t                    sum += value;\n\t                }\n\t            }\n\t        }\n\t        return sum;\n\t    };\n\t\n\t    /**\n\t     * Retreive the index with given value\n\t     * @param {number} idx\n\t     * @param {number} value\n\t     * @return {number}\n\t     */\n\t    // FIXME Precision of float value\n\t    listProto.indexOf = function (dim, value) {\n\t        var storage = this._storage;\n\t        var dimData = storage[dim];\n\t        var indices = this.indices;\n\t\n\t        if (dimData) {\n\t            for (var i = 0, len = indices.length; i < len; i++) {\n\t                var rawIndex = indices[i];\n\t                if (dimData[rawIndex] === value) {\n\t                    return i;\n\t                }\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t\n\t    /**\n\t     * Retreive the index with given name\n\t     * @param {number} idx\n\t     * @param {number} name\n\t     * @return {number}\n\t     */\n\t    listProto.indexOfName = function (name) {\n\t        var indices = this.indices;\n\t        var nameList = this._nameList;\n\t\n\t        for (var i = 0, len = indices.length; i < len; i++) {\n\t            var rawIndex = indices[i];\n\t            if (nameList[rawIndex] === name) {\n\t                return i;\n\t            }\n\t        }\n\t\n\t        return -1;\n\t    };\n\t\n\t    /**\n\t     * Retreive the index with given raw data index\n\t     * @param {number} idx\n\t     * @param {number} name\n\t     * @return {number}\n\t     */\n\t    listProto.indexOfRawIndex = function (rawIndex) {\n\t        // Indices are ascending\n\t        var indices = this.indices;\n\t\n\t        // If rawIndex === dataIndex\n\t        var rawDataIndex = indices[rawIndex];\n\t        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n\t            return rawIndex;\n\t        }\n\t\n\t        var left = 0;\n\t        var right = indices.length - 1;\n\t        while (left <= right) {\n\t            var mid = (left + right) / 2 | 0;\n\t            if (indices[mid] < rawIndex) {\n\t                left = mid + 1;\n\t            }\n\t            else if (indices[mid] > rawIndex) {\n\t                right = mid - 1;\n\t            }\n\t            else {\n\t                return mid;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t\n\t    /**\n\t     * Retreive the index of nearest value\n\t     * @param {string} dim\n\t     * @param {number} value\n\t     * @param {boolean} stack If given value is after stacked\n\t     * @param {number} [maxDistance=Infinity]\n\t     * @return {number}\n\t     */\n\t    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n\t        var storage = this._storage;\n\t        var dimData = storage[dim];\n\t\n\t        if (maxDistance == null) {\n\t            maxDistance = Infinity;\n\t        }\n\t\n\t        var nearestIdx = -1;\n\t        if (dimData) {\n\t            var minDist = Number.MAX_VALUE;\n\t            for (var i = 0, len = this.count(); i < len; i++) {\n\t                var diff = value - this.get(dim, i, stack);\n\t                var dist = Math.abs(diff);\n\t                if (\n\t                    diff <= maxDistance\n\t                    && (dist < minDist\n\t                        // For the case of two data are same on xAxis, which has sequence data.\n\t                        // Show the nearest index\n\t                        // https://github.com/ecomfe/echarts/issues/2869\n\t                        || (dist === minDist && diff > 0)\n\t                    )\n\t                ) {\n\t                    minDist = dist;\n\t                    nearestIdx = i;\n\t                }\n\t            }\n\t        }\n\t        return nearestIdx;\n\t    };\n\t\n\t    /**\n\t     * Get raw data index\n\t     * @param {number} idx\n\t     * @return {number}\n\t     */\n\t    listProto.getRawIndex = function (idx) {\n\t        var rawIdx = this.indices[idx];\n\t        return rawIdx == null ? -1 : rawIdx;\n\t    };\n\t\n\t    /**\n\t     * Get raw data item\n\t     * @param {number} idx\n\t     * @return {number}\n\t     */\n\t    listProto.getRawDataItem = function (idx) {\n\t        return this._rawData[this.getRawIndex(idx)];\n\t    };\n\t\n\t    /**\n\t     * @param {number} idx\n\t     * @param {boolean} [notDefaultIdx=false]\n\t     * @return {string}\n\t     */\n\t    listProto.getName = function (idx) {\n\t        return this._nameList[this.indices[idx]] || '';\n\t    };\n\t\n\t    /**\n\t     * @param {number} idx\n\t     * @param {boolean} [notDefaultIdx=false]\n\t     * @return {string}\n\t     */\n\t    listProto.getId = function (idx) {\n\t        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n\t    };\n\t\n\t\n\t    function normalizeDimensions(dimensions) {\n\t        if (!zrUtil.isArray(dimensions)) {\n\t            dimensions = [dimensions];\n\t        }\n\t        return dimensions;\n\t    }\n\t\n\t    /**\n\t     * Data iteration\n\t     * @param {string|Array.<string>}\n\t     * @param {Function} cb\n\t     * @param {boolean} [stack=false]\n\t     * @param {*} [context=this]\n\t     *\n\t     * @example\n\t     *  list.each('x', function (x, idx) {});\n\t     *  list.each(['x', 'y'], function (x, y, idx) {});\n\t     *  list.each(function (idx) {})\n\t     */\n\t    listProto.each = function (dims, cb, stack, context) {\n\t        if (typeof dims === 'function') {\n\t            context = stack;\n\t            stack = cb;\n\t            cb = dims;\n\t            dims = [];\n\t        }\n\t\n\t        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\t\n\t        var value = [];\n\t        var dimSize = dims.length;\n\t        var indices = this.indices;\n\t\n\t        context = context || this;\n\t\n\t        for (var i = 0; i < indices.length; i++) {\n\t            // Simple optimization\n\t            switch (dimSize) {\n\t                case 0:\n\t                    cb.call(context, i);\n\t                    break;\n\t                case 1:\n\t                    cb.call(context, this.get(dims[0], i, stack), i);\n\t                    break;\n\t                case 2:\n\t                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n\t                    break;\n\t                default:\n\t                    for (var k = 0; k < dimSize; k++) {\n\t                        value[k] = this.get(dims[k], i, stack);\n\t                    }\n\t                    // Index\n\t                    value[k] = i;\n\t                    cb.apply(context, value);\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Data filter\n\t     * @param {string|Array.<string>}\n\t     * @param {Function} cb\n\t     * @param {boolean} [stack=false]\n\t     * @param {*} [context=this]\n\t     */\n\t    listProto.filterSelf = function (dimensions, cb, stack, context) {\n\t        if (typeof dimensions === 'function') {\n\t            context = stack;\n\t            stack = cb;\n\t            cb = dimensions;\n\t            dimensions = [];\n\t        }\n\t\n\t        dimensions = zrUtil.map(\n\t            normalizeDimensions(dimensions), this.getDimension, this\n\t        );\n\t\n\t        var newIndices = [];\n\t        var value = [];\n\t        var dimSize = dimensions.length;\n\t        var indices = this.indices;\n\t\n\t        context = context || this;\n\t\n\t        for (var i = 0; i < indices.length; i++) {\n\t            var keep;\n\t            // Simple optimization\n\t            if (dimSize === 1) {\n\t                keep = cb.call(\n\t                    context, this.get(dimensions[0], i, stack), i\n\t                );\n\t            }\n\t            else {\n\t                for (var k = 0; k < dimSize; k++) {\n\t                    value[k] = this.get(dimensions[k], i, stack);\n\t                }\n\t                value[k] = i;\n\t                keep = cb.apply(context, value);\n\t            }\n\t            if (keep) {\n\t                newIndices.push(indices[i]);\n\t            }\n\t        }\n\t\n\t        this.indices = newIndices;\n\t\n\t        // Reset data extent\n\t        this._extent = {};\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Data mapping to a plain array\n\t     * @param {string|Array.<string>} [dimensions]\n\t     * @param {Function} cb\n\t     * @param {boolean} [stack=false]\n\t     * @param {*} [context=this]\n\t     * @return {Array}\n\t     */\n\t    listProto.mapArray = function (dimensions, cb, stack, context) {\n\t        if (typeof dimensions === 'function') {\n\t            context = stack;\n\t            stack = cb;\n\t            cb = dimensions;\n\t            dimensions = [];\n\t        }\n\t\n\t        var result = [];\n\t        this.each(dimensions, function () {\n\t            result.push(cb && cb.apply(this, arguments));\n\t        }, stack, context);\n\t        return result;\n\t    };\n\t\n\t    function cloneListForMapAndSample(original, excludeDimensions) {\n\t        var allDimensions = original.dimensions;\n\t        var list = new List(\n\t            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n\t            original.hostModel\n\t        );\n\t        // FIXME If needs stackedOn, value may already been stacked\n\t        transferProperties(list, original);\n\t\n\t        var storage = list._storage = {};\n\t        var originalStorage = original._storage;\n\t        // Init storage\n\t        for (var i = 0; i < allDimensions.length; i++) {\n\t            var dim = allDimensions[i];\n\t            var dimStore = originalStorage[dim];\n\t            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n\t                storage[dim] = new dimStore.constructor(\n\t                    originalStorage[dim].length\n\t                );\n\t            }\n\t            else {\n\t                // Direct reference for other dimensions\n\t                storage[dim] = originalStorage[dim];\n\t            }\n\t        }\n\t        return list;\n\t    }\n\t\n\t    /**\n\t     * Data mapping to a new List with given dimensions\n\t     * @param {string|Array.<string>} dimensions\n\t     * @param {Function} cb\n\t     * @param {boolean} [stack=false]\n\t     * @param {*} [context=this]\n\t     * @return {Array}\n\t     */\n\t    listProto.map = function (dimensions, cb, stack, context) {\n\t        dimensions = zrUtil.map(\n\t            normalizeDimensions(dimensions), this.getDimension, this\n\t        );\n\t\n\t        var list = cloneListForMapAndSample(this, dimensions);\n\t        // Following properties are all immutable.\n\t        // So we can reference to the same value\n\t        var indices = list.indices = this.indices;\n\t\n\t        var storage = list._storage;\n\t\n\t        var tmpRetValue = [];\n\t        this.each(dimensions, function () {\n\t            var idx = arguments[arguments.length - 1];\n\t            var retValue = cb && cb.apply(this, arguments);\n\t            if (retValue != null) {\n\t                // a number\n\t                if (typeof retValue === 'number') {\n\t                    tmpRetValue[0] = retValue;\n\t                    retValue = tmpRetValue;\n\t                }\n\t                for (var i = 0; i < retValue.length; i++) {\n\t                    var dim = dimensions[i];\n\t                    var dimStore = storage[dim];\n\t                    var rawIdx = indices[idx];\n\t                    if (dimStore) {\n\t                        dimStore[rawIdx] = retValue[i];\n\t                    }\n\t                }\n\t            }\n\t        }, stack, context);\n\t\n\t        return list;\n\t    };\n\t\n\t    /**\n\t     * Large data down sampling on given dimension\n\t     * @param {string} dimension\n\t     * @param {number} rate\n\t     * @param {Function} sampleValue\n\t     * @param {Function} sampleIndex Sample index for name and id\n\t     */\n\t    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n\t        var list = cloneListForMapAndSample(this, [dimension]);\n\t        var storage = this._storage;\n\t        var targetStorage = list._storage;\n\t\n\t        var originalIndices = this.indices;\n\t        var indices = list.indices = [];\n\t\n\t        var frameValues = [];\n\t        var frameIndices = [];\n\t        var frameSize = Math.floor(1 / rate);\n\t\n\t        var dimStore = targetStorage[dimension];\n\t        var len = this.count();\n\t        // Copy data from original data\n\t        for (var i = 0; i < storage[dimension].length; i++) {\n\t            targetStorage[dimension][i] = storage[dimension][i];\n\t        }\n\t        for (var i = 0; i < len; i += frameSize) {\n\t            // Last frame\n\t            if (frameSize > len - i) {\n\t                frameSize = len - i;\n\t                frameValues.length = frameSize;\n\t            }\n\t            for (var k = 0; k < frameSize; k++) {\n\t                var idx = originalIndices[i + k];\n\t                frameValues[k] = dimStore[idx];\n\t                frameIndices[k] = idx;\n\t            }\n\t            var value = sampleValue(frameValues);\n\t            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n\t            // Only write value on the filtered data\n\t            dimStore[idx] = value;\n\t            indices.push(idx);\n\t        }\n\t\n\t        return list;\n\t    };\n\t\n\t    /**\n\t     * Get model of one data item.\n\t     *\n\t     * @param {number} idx\n\t     */\n\t    // FIXME Model proxy ?\n\t    listProto.getItemModel = function (idx) {\n\t        var hostModel = this.hostModel;\n\t        idx = this.indices[idx];\n\t        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n\t    };\n\t\n\t    /**\n\t     * Create a data differ\n\t     * @param {module:echarts/data/List} otherList\n\t     * @return {module:echarts/data/DataDiffer}\n\t     */\n\t    listProto.diff = function (otherList) {\n\t        var idList = this._idList;\n\t        var otherIdList = otherList && otherList._idList;\n\t        var val;\n\t        // Use prefix to avoid index to be the same as otherIdList[idx],\n\t        // which will cause weird udpate animation.\n\t        var prefix = 'e\\0\\0';\n\t\n\t        return new DataDiffer(\n\t            otherList ? otherList.indices : [],\n\t            this.indices,\n\t            function (idx) {\n\t                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n\t            },\n\t            function (idx) {\n\t                return (val = idList[idx]) != null ? val : prefix + idx;\n\t            }\n\t        );\n\t    };\n\t    /**\n\t     * Get visual property.\n\t     * @param {string} key\n\t     */\n\t    listProto.getVisual = function (key) {\n\t        var visual = this._visual;\n\t        return visual && visual[key];\n\t    };\n\t\n\t    /**\n\t     * Set visual property\n\t     * @param {string|Object} key\n\t     * @param {*} [value]\n\t     *\n\t     * @example\n\t     *  setVisual('color', color);\n\t     *  setVisual({\n\t     *      'color': color\n\t     *  });\n\t     */\n\t    listProto.setVisual = function (key, val) {\n\t        if (isObject(key)) {\n\t            for (var name in key) {\n\t                if (key.hasOwnProperty(name)) {\n\t                    this.setVisual(name, key[name]);\n\t                }\n\t            }\n\t            return;\n\t        }\n\t        this._visual = this._visual || {};\n\t        this._visual[key] = val;\n\t    };\n\t\n\t    /**\n\t     * Set layout property.\n\t     * @param {string} key\n\t     * @param {*} [val]\n\t     */\n\t    listProto.setLayout = function (key, val) {\n\t        if (isObject(key)) {\n\t            for (var name in key) {\n\t                if (key.hasOwnProperty(name)) {\n\t                    this.setLayout(name, key[name]);\n\t                }\n\t            }\n\t            return;\n\t        }\n\t        this._layout[key] = val;\n\t    };\n\t\n\t    /**\n\t     * Get layout property.\n\t     * @param  {string} key.\n\t     * @return {*}\n\t     */\n\t    listProto.getLayout = function (key) {\n\t        return this._layout[key];\n\t    };\n\t\n\t    /**\n\t     * Get layout of single data item\n\t     * @param {number} idx\n\t     */\n\t    listProto.getItemLayout = function (idx) {\n\t        return this._itemLayouts[idx];\n\t    };\n\t\n\t    /**\n\t     * Set layout of single data item\n\t     * @param {number} idx\n\t     * @param {Object} layout\n\t     * @param {boolean=} [merge=false]\n\t     */\n\t    listProto.setItemLayout = function (idx, layout, merge) {\n\t        this._itemLayouts[idx] = merge\n\t            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n\t            : layout;\n\t    };\n\t\n\t    /**\n\t     * Clear all layout of single data item\n\t     */\n\t    listProto.clearItemLayouts = function () {\n\t        this._itemLayouts.length = 0;\n\t    };\n\t\n\t    /**\n\t     * Get visual property of single data item\n\t     * @param {number} idx\n\t     * @param {string} key\n\t     * @param {boolean} ignoreParent\n\t     */\n\t    listProto.getItemVisual = function (idx, key, ignoreParent) {\n\t        var itemVisual = this._itemVisuals[idx];\n\t        var val = itemVisual && itemVisual[key];\n\t        if (val == null && !ignoreParent) {\n\t            // Use global visual property\n\t            return this.getVisual(key);\n\t        }\n\t        return val;\n\t    };\n\t\n\t    /**\n\t     * Set visual property of single data item\n\t     *\n\t     * @param {number} idx\n\t     * @param {string|Object} key\n\t     * @param {*} [value]\n\t     *\n\t     * @example\n\t     *  setItemVisual(0, 'color', color);\n\t     *  setItemVisual(0, {\n\t     *      'color': color\n\t     *  });\n\t     */\n\t    listProto.setItemVisual = function (idx, key, value) {\n\t        var itemVisual = this._itemVisuals[idx] || {};\n\t        this._itemVisuals[idx] = itemVisual;\n\t\n\t        if (isObject(key)) {\n\t            for (var name in key) {\n\t                if (key.hasOwnProperty(name)) {\n\t                    itemVisual[name] = key[name];\n\t                }\n\t            }\n\t            return;\n\t        }\n\t        itemVisual[key] = value;\n\t    };\n\t\n\t    /**\n\t     * Clear itemVisuals and list visual.\n\t     */\n\t    listProto.clearAllVisual = function () {\n\t        this._visual = {};\n\t        this._itemVisuals = [];\n\t    };\n\t\n\t    var setItemDataAndSeriesIndex = function (child) {\n\t        child.seriesIndex = this.seriesIndex;\n\t        child.dataIndex = this.dataIndex;\n\t        child.dataType = this.dataType;\n\t    };\n\t    /**\n\t     * Set graphic element relative to data. It can be set as null\n\t     * @param {number} idx\n\t     * @param {module:zrender/Element} [el]\n\t     */\n\t    listProto.setItemGraphicEl = function (idx, el) {\n\t        var hostModel = this.hostModel;\n\t\n\t        if (el) {\n\t            // Add data index and series index for indexing the data by element\n\t            // Useful in tooltip\n\t            el.dataIndex = idx;\n\t            el.dataType = this.dataType;\n\t            el.seriesIndex = hostModel && hostModel.seriesIndex;\n\t            if (el.type === 'group') {\n\t                el.traverse(setItemDataAndSeriesIndex, el);\n\t            }\n\t        }\n\t\n\t        this._graphicEls[idx] = el;\n\t    };\n\t\n\t    /**\n\t     * @param {number} idx\n\t     * @return {module:zrender/Element}\n\t     */\n\t    listProto.getItemGraphicEl = function (idx) {\n\t        return this._graphicEls[idx];\n\t    };\n\t\n\t    /**\n\t     * @param {Function} cb\n\t     * @param {*} context\n\t     */\n\t    listProto.eachItemGraphicEl = function (cb, context) {\n\t        zrUtil.each(this._graphicEls, function (el, idx) {\n\t            if (el) {\n\t                cb && cb.call(context, el, idx);\n\t            }\n\t        });\n\t    };\n\t\n\t    /**\n\t     * Shallow clone a new list except visual and layout properties, and graph elements.\n\t     * New list only change the indices.\n\t     */\n\t    listProto.cloneShallow = function () {\n\t        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n\t        var list = new List(dimensionInfoList, this.hostModel);\n\t\n\t        // FIXME\n\t        list._storage = this._storage;\n\t\n\t        transferProperties(list, this);\n\t\n\t\n\t        // Clone will not change the data extent and indices\n\t        list.indices = this.indices.slice();\n\t\n\t        if (this._extent) {\n\t            list._extent = zrUtil.extend({}, this._extent);\n\t        }\n\t\n\t        return list;\n\t    };\n\t\n\t    /**\n\t     * Wrap some method to add more feature\n\t     * @param {string} methodName\n\t     * @param {Function} injectFunction\n\t     */\n\t    listProto.wrapMethod = function (methodName, injectFunction) {\n\t        var originalMethod = this[methodName];\n\t        if (typeof originalMethod !== 'function') {\n\t            return;\n\t        }\n\t        this.__wrappedMethods = this.__wrappedMethods || [];\n\t        this.__wrappedMethods.push(methodName);\n\t        this[methodName] = function () {\n\t            var res = originalMethod.apply(this, arguments);\n\t            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n\t        };\n\t    };\n\t\n\t    // Methods that create a new list based on this list should be listed here.\n\t    // Notice that those method should `RETURN` the new list.\n\t    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n\t    // Methods that change indices of this list should be listed here.\n\t    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\t\n\t    module.exports = List;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 581 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t\n\t    function defaultKeyGetter(item) {\n\t        return item;\n\t    }\n\t\n\t    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n\t        this._old = oldArr;\n\t        this._new = newArr;\n\t\n\t        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n\t        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\t    }\n\t\n\t    DataDiffer.prototype = {\n\t\n\t        constructor: DataDiffer,\n\t\n\t        /**\n\t         * Callback function when add a data\n\t         */\n\t        add: function (func) {\n\t            this._add = func;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * Callback function when update a data\n\t         */\n\t        update: function (func) {\n\t            this._update = func;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * Callback function when remove a data\n\t         */\n\t        remove: function (func) {\n\t            this._remove = func;\n\t            return this;\n\t        },\n\t\n\t        execute: function () {\n\t            var oldArr = this._old;\n\t            var newArr = this._new;\n\t            var oldKeyGetter = this._oldKeyGetter;\n\t            var newKeyGetter = this._newKeyGetter;\n\t\n\t            var oldDataIndexMap = {};\n\t            var newDataIndexMap = {};\n\t            var oldDataKeyArr = [];\n\t            var newDataKeyArr = [];\n\t            var i;\n\t\n\t            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n\t            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\t\n\t            // Travel by inverted order to make sure order consistency\n\t            // when duplicate keys exists (consider newDataIndex.pop() below).\n\t            // For performance consideration, these code below do not look neat.\n\t            for (i = 0; i < oldArr.length; i++) {\n\t                var key = oldDataKeyArr[i];\n\t                var idx = newDataIndexMap[key];\n\t\n\t                // idx can never be empty array here. see 'set null' logic below.\n\t                if (idx != null) {\n\t                    // Consider there is duplicate key (for example, use dataItem.name as key).\n\t                    // We should make sure every item in newArr and oldArr can be visited.\n\t                    var len = idx.length;\n\t                    if (len) {\n\t                        len === 1 && (newDataIndexMap[key] = null);\n\t                        idx = idx.unshift();\n\t                    }\n\t                    else {\n\t                        newDataIndexMap[key] = null;\n\t                    }\n\t                    this._update && this._update(idx, i);\n\t                }\n\t                else {\n\t                    this._remove && this._remove(i);\n\t                }\n\t            }\n\t\n\t            for (var i = 0; i < newDataKeyArr.length; i++) {\n\t                var key = newDataKeyArr[i];\n\t                if (newDataIndexMap.hasOwnProperty(key)) {\n\t                    var idx = newDataIndexMap[key];\n\t                    if (idx == null) {\n\t                        continue;\n\t                    }\n\t                    // idx can never be empty array here. see 'set null' logic above.\n\t                    if (!idx.length) {\n\t                        this._add && this._add(idx);\n\t                    }\n\t                    else {\n\t                        for (var j = 0, len = idx.length; j < len; j++) {\n\t                            this._add && this._add(idx[j]);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    function initIndexMap(arr, map, keyArr, keyGetter) {\n\t        for (var i = 0; i < arr.length; i++) {\n\t            var key = keyGetter(arr[i], i);\n\t            var existence = map[key];\n\t            if (existence == null) {\n\t                keyArr.push(key);\n\t                map[key] = i;\n\t            }\n\t            else {\n\t                if (!existence.length) {\n\t                    map[key] = existence = [existence];\n\t                }\n\t                existence.push(i);\n\t            }\n\t        }\n\t    }\n\t\n\t    module.exports = DataDiffer;\n\n\n/***/ },\n/* 582 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var createListFromArray = __webpack_require__(583);\n\t    var SeriesModel = __webpack_require__(510);\n\t\n\t    module.exports = SeriesModel.extend({\n\t\n\t        type: 'series.line',\n\t\n\t        dependencies: ['grid', 'polar'],\n\t\n\t        getInitialData: function (option, ecModel) {\n\t            if (__DEV__) {\n\t                var coordSys = option.coordinateSystem;\n\t                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n\t                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n\t                }\n\t            }\n\t            return createListFromArray(option.data, this, ecModel);\n\t        },\n\t\n\t        defaultOption: {\n\t            zlevel: 0,                  // 一级层叠\n\t            z: 2,                       // 二级层叠\n\t            coordinateSystem: 'cartesian2d',\n\t            legendHoverLink: true,\n\t\n\t            hoverAnimation: true,\n\t            // stack: null\n\t            // xAxisIndex: 0,\n\t            // yAxisIndex: 0,\n\t\n\t            // polarIndex: 0,\n\t\n\t            // If clip the overflow value\n\t            clipOverflow: true,\n\t\n\t            label: {\n\t                normal: {\n\t                    position: 'top'\n\t                }\n\t            },\n\t            // itemStyle: {\n\t            //     normal: {},\n\t            //     emphasis: {}\n\t            // },\n\t            lineStyle: {\n\t                normal: {\n\t                    width: 2,\n\t                    type: 'solid'\n\t                }\n\t            },\n\t            // areaStyle: {},\n\t            // false, 'start', 'end', 'middle'\n\t            step: false,\n\t\n\t            // Disabled if step is true\n\t            smooth: false,\n\t            smoothMonotone: null,\n\t            // 拐点图形类型\n\t            symbol: 'emptyCircle',\n\t            // 拐点图形大小\n\t            symbolSize: 4,\n\t            // 拐点图形旋转控制\n\t            symbolRotate: null,\n\t\n\t            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n\t            showSymbol: true,\n\t            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n\t            showAllSymbol: false,\n\t\n\t            // 是否连接断点\n\t            connectNulls: false,\n\t\n\t            // 数据过滤，'average', 'max', 'min', 'sum'\n\t            sampling: 'none',\n\t\n\t            animationEasing: 'linear',\n\t\n\t            // Disable progressive\n\t            progressive: 0,\n\t            hoverLayerThreshold: Infinity\n\t        }\n\t    });\n\n\n/***/ },\n/* 583 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var List = __webpack_require__(580);\n\t    var completeDimensions = __webpack_require__(584);\n\t    var zrUtil = __webpack_require__(483);\n\t    var modelUtil = __webpack_require__(487);\n\t    var CoordinateSystem = __webpack_require__(508);\n\t    var getDataItemValue = modelUtil.getDataItemValue;\n\t    var converDataValue = modelUtil.converDataValue;\n\t\n\t    function firstDataNotNull(data) {\n\t        var i = 0;\n\t        while (i < data.length && data[i] == null) {\n\t            i++;\n\t        }\n\t        return data[i];\n\t    }\n\t    function ifNeedCompleteOrdinalData(data) {\n\t        var sampleItem = firstDataNotNull(data);\n\t        return sampleItem != null\n\t            && !zrUtil.isArray(getDataItemValue(sampleItem));\n\t    }\n\t\n\t    /**\n\t     * Helper function to create a list from option data\n\t     */\n\t    function createListFromArray(data, seriesModel, ecModel) {\n\t        // If data is undefined\n\t        data = data || [];\n\t\n\t        if (__DEV__) {\n\t            if (!zrUtil.isArray(data)) {\n\t                throw new Error('Invalid data.');\n\t            }\n\t        }\n\t\n\t        var coordSysName = seriesModel.get('coordinateSystem');\n\t        var creator = creators[coordSysName];\n\t        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n\t        // FIXME\n\t        var axesInfo = creator && creator(data, seriesModel, ecModel);\n\t        var dimensions = axesInfo && axesInfo.dimensions;\n\t        if (!dimensions) {\n\t            // Get dimensions from registered coordinate system\n\t            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n\t            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n\t        }\n\t        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\t\n\t        var list = new List(dimensions, seriesModel);\n\t\n\t        var nameList = createNameList(axesInfo, data);\n\t\n\t        var categories = {};\n\t        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n\t            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n\t                // If any dataItem is like { value: 10 }\n\t                if (modelUtil.isDataItemOption(itemOpt)) {\n\t                    list.hasItemOption = true;\n\t                }\n\t\n\t                // Use dataIndex as ordinal value in categoryAxis\n\t                return dimIndex === categoryIndex\n\t                    ? dataIndex\n\t                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n\t            }\n\t            : function (itemOpt, dimName, dataIndex, dimIndex) {\n\t                var value = getDataItemValue(itemOpt);\n\t                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n\t                // If any dataItem is like { value: 10 }\n\t                if (modelUtil.isDataItemOption(itemOpt)) {\n\t                    list.hasItemOption = true;\n\t                }\n\t\n\t                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\t                if (categoryAxesModels && categoryAxesModels[dimName]) {\n\t                    // If given value is a category string\n\t                    if (typeof val === 'string') {\n\t                        // Lazy get categories\n\t                        categories[dimName] = categories[dimName]\n\t                            || categoryAxesModels[dimName].getCategories();\n\t                        val = zrUtil.indexOf(categories[dimName], val);\n\t                        if (val < 0 && !isNaN(val)) {\n\t                            // In case some one write '1', '2' istead of 1, 2\n\t                            val = +val;\n\t                        }\n\t                    }\n\t                }\n\t                return val;\n\t            };\n\t\n\t        list.hasItemOption = false;\n\t        list.initData(data, nameList, dimValueGetter);\n\t\n\t        return list;\n\t    }\n\t\n\t    function isStackable(axisType) {\n\t        return axisType !== 'category' && axisType !== 'time';\n\t    }\n\t\n\t    function getDimTypeByAxis(axisType) {\n\t        return axisType === 'category'\n\t            ? 'ordinal'\n\t            : axisType === 'time'\n\t            ? 'time'\n\t            : 'float';\n\t    }\n\t\n\t    /**\n\t     * Creaters for each coord system.\n\t     */\n\t    var creators = {\n\t\n\t        cartesian2d: function (data, seriesModel, ecModel) {\n\t\n\t            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n\t                return ecModel.queryComponents({\n\t                    mainType: name,\n\t                    index: seriesModel.get(name + 'Index'),\n\t                    id: seriesModel.get(name + 'Id')\n\t                })[0];\n\t            });\n\t            var xAxisModel = axesModels[0];\n\t            var yAxisModel = axesModels[1];\n\t\n\t            if (__DEV__) {\n\t                if (!xAxisModel) {\n\t                    throw new Error('xAxis \"' + zrUtil.retrieve(\n\t                        seriesModel.get('xAxisIndex'),\n\t                        seriesModel.get('xAxisId'),\n\t                        0\n\t                    ) + '\" not found');\n\t                }\n\t                if (!yAxisModel) {\n\t                    throw new Error('yAxis \"' + zrUtil.retrieve(\n\t                        seriesModel.get('xAxisIndex'),\n\t                        seriesModel.get('yAxisId'),\n\t                        0\n\t                    ) + '\" not found');\n\t                }\n\t            }\n\t\n\t            var xAxisType = xAxisModel.get('type');\n\t            var yAxisType = yAxisModel.get('type');\n\t\n\t            var dimensions = [\n\t                {\n\t                    name: 'x',\n\t                    type: getDimTypeByAxis(xAxisType),\n\t                    stackable: isStackable(xAxisType)\n\t                },\n\t                {\n\t                    name: 'y',\n\t                    // If two category axes\n\t                    type: getDimTypeByAxis(yAxisType),\n\t                    stackable: isStackable(yAxisType)\n\t                }\n\t            ];\n\t\n\t            var isXAxisCateogry = xAxisType === 'category';\n\t            var isYAxisCategory = yAxisType === 'category';\n\t\n\t            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\t\n\t            var categoryAxesModels = {};\n\t            if (isXAxisCateogry) {\n\t                categoryAxesModels.x = xAxisModel;\n\t            }\n\t            if (isYAxisCategory) {\n\t                categoryAxesModels.y = yAxisModel;\n\t            }\n\t            return {\n\t                dimensions: dimensions,\n\t                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n\t                categoryAxesModels: categoryAxesModels\n\t            };\n\t        },\n\t\n\t        polar: function (data, seriesModel, ecModel) {\n\t            var polarModel = ecModel.queryComponents({\n\t                mainType: 'polar',\n\t                index: seriesModel.get('polarIndex'),\n\t                id: seriesModel.get('polarId')\n\t            })[0];\n\t\n\t            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n\t            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\t\n\t            if (__DEV__) {\n\t                if (!angleAxisModel) {\n\t                    throw new Error('angleAxis option not found');\n\t                }\n\t                if (!radiusAxisModel) {\n\t                    throw new Error('radiusAxis option not found');\n\t                }\n\t            }\n\t\n\t            var radiusAxisType = radiusAxisModel.get('type');\n\t            var angleAxisType = angleAxisModel.get('type');\n\t\n\t            var dimensions = [\n\t                {\n\t                    name: 'radius',\n\t                    type: getDimTypeByAxis(radiusAxisType),\n\t                    stackable: isStackable(radiusAxisType)\n\t                },\n\t                {\n\t                    name: 'angle',\n\t                    type: getDimTypeByAxis(angleAxisType),\n\t                    stackable: isStackable(angleAxisType)\n\t                }\n\t            ];\n\t            var isAngleAxisCateogry = angleAxisType === 'category';\n\t            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\t\n\t            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\t\n\t            var categoryAxesModels = {};\n\t            if (isRadiusAxisCateogry) {\n\t                categoryAxesModels.radius = radiusAxisModel;\n\t            }\n\t            if (isAngleAxisCateogry) {\n\t                categoryAxesModels.angle = angleAxisModel;\n\t            }\n\t            return {\n\t                dimensions: dimensions,\n\t                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n\t                categoryAxesModels: categoryAxesModels\n\t            };\n\t        },\n\t\n\t        geo: function (data, seriesModel, ecModel) {\n\t            // TODO Region\n\t            // 多个散点图系列在同一个地区的时候\n\t            return {\n\t                dimensions: completeDimensions([\n\t                    {name: 'lng'},\n\t                    {name: 'lat'}\n\t                ], data, ['lng', 'lat', 'value'])\n\t            };\n\t        }\n\t    };\n\t\n\t    function createNameList(result, data) {\n\t        var nameList = [];\n\t\n\t        var categoryDim = result && result.dimensions[result.categoryIndex];\n\t        var categoryAxisModel;\n\t        if (categoryDim) {\n\t            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n\t        }\n\t\n\t        if (categoryAxisModel) {\n\t            // FIXME Two category axis\n\t            var categories = categoryAxisModel.getCategories();\n\t            if (categories) {\n\t                var dataLen = data.length;\n\t                // Ordered data is given explicitly like\n\t                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n\t                // or given scatter data,\n\t                // pick the category\n\t                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n\t                    nameList = [];\n\t                    for (var i = 0; i < dataLen; i++) {\n\t                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n\t                    }\n\t                }\n\t                else {\n\t                    nameList = categories.slice(0);\n\t                }\n\t            }\n\t        }\n\t\n\t        return nameList;\n\t    }\n\t\n\t    module.exports = createListFromArray;\n\t\n\n\n/***/ },\n/* 584 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Complete dimensions by data (guess dimension).\n\t */\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    /**\n\t     * Complete the dimensions array guessed from the data structure.\n\t     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n\t     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n\t     * @param  {Array.<string>} defaultNames    Default names to fill not necessary dimensions, like ['value']\n\t     * @param  {string} extraPrefix             Prefix of name when filling the left dimensions.\n\t     * @return {Array.<string>}\n\t     */\n\t    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n\t        if (!data) {\n\t            return dimensions;\n\t        }\n\t\n\t        var value0 = retrieveValue(data[0]);\n\t        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\t\n\t        defaultNames = defaultNames || [];\n\t        extraPrefix = extraPrefix || 'extra';\n\t        for (var i = 0; i < dimSize; i++) {\n\t            if (!dimensions[i]) {\n\t                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n\t                dimensions[i] = guessOrdinal(data, i)\n\t                    ? {type: 'ordinal', name: name}\n\t                    : name;\n\t            }\n\t        }\n\t\n\t        return dimensions;\n\t    }\n\t\n\t    // The rule should not be complex, otherwise user might not\n\t    // be able to known where the data is wrong.\n\t    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n\t        for (var i = 0, len = data.length; i < len; i++) {\n\t            var value = retrieveValue(data[i]);\n\t\n\t            if (!zrUtil.isArray(value)) {\n\t                return false;\n\t            }\n\t\n\t            var value = value[dimIndex];\n\t            if (value != null && isFinite(value)) {\n\t                return false;\n\t            }\n\t            else if (zrUtil.isString(value) && value !== '-') {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t\n\t    function retrieveValue(o) {\n\t        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n\t    }\n\t\n\t    module.exports = completeDimensions;\n\t\n\n\n/***/ },\n/* 585 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// FIXME step not support polar\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var SymbolDraw = __webpack_require__(586);\n\t    var Symbol = __webpack_require__(587);\n\t    var lineAnimationDiff = __webpack_require__(589);\n\t    var graphic = __webpack_require__(525);\n\t    var modelUtil = __webpack_require__(487);\n\t    var polyHelper = __webpack_require__(590);\n\t    var ChartView = __webpack_require__(524);\n\t\n\t    function isPointsSame(points1, points2) {\n\t        if (points1.length !== points2.length) {\n\t            return;\n\t        }\n\t        for (var i = 0; i < points1.length; i++) {\n\t            var p1 = points1[i];\n\t            var p2 = points2[i];\n\t            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n\t                return;\n\t            }\n\t        }\n\t        return true;\n\t    }\n\t\n\t    function getSmooth(smooth) {\n\t        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n\t    }\n\t\n\t    function getAxisExtentWithGap(axis) {\n\t        var extent = axis.getGlobalExtent();\n\t        if (axis.onBand) {\n\t            // Remove extra 1px to avoid line miter in clipped edge\n\t            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n\t            var dir = extent[1] > extent[0] ? 1 : -1;\n\t            extent[0] += dir * halfBandWidth;\n\t            extent[1] -= dir * halfBandWidth;\n\t        }\n\t        return extent;\n\t    }\n\t\n\t    function sign(val) {\n\t        return val >= 0 ? 1 : -1;\n\t    }\n\t    /**\n\t     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n\t     * @param {module:echarts/data/List} data\n\t     * @param {Array.<Array.<number>>} points\n\t     * @private\n\t     */\n\t    function getStackedOnPoints(coordSys, data) {\n\t        var baseAxis = coordSys.getBaseAxis();\n\t        var valueAxis = coordSys.getOtherAxis(baseAxis);\n\t        var valueStart = baseAxis.onZero\n\t            ? 0 : valueAxis.scale.getExtent()[0];\n\t\n\t        var valueDim = valueAxis.dim;\n\t\n\t        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\t\n\t        return data.mapArray([valueDim], function (val, idx) {\n\t            var stackedOnSameSign;\n\t            var stackedOn = data.stackedOn;\n\t            // Find first stacked value with same sign\n\t            while (stackedOn &&\n\t                sign(stackedOn.get(valueDim, idx)) === sign(val)\n\t            ) {\n\t                stackedOnSameSign = stackedOn;\n\t                break;\n\t            }\n\t            var stackedData = [];\n\t            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n\t            stackedData[1 - baseDataOffset] = stackedOnSameSign\n\t                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\t\n\t            return coordSys.dataToPoint(stackedData);\n\t        }, true);\n\t    }\n\t\n\t    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n\t        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n\t        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n\t        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\t\n\t        var x = Math.min(xExtent[0], xExtent[1]);\n\t        var y = Math.min(yExtent[0], yExtent[1]);\n\t        var width = Math.max(xExtent[0], xExtent[1]) - x;\n\t        var height = Math.max(yExtent[0], yExtent[1]) - y;\n\t        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n\t        // Expand clip shape to avoid clipping when line value exceeds axis\n\t        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\t        if (isHorizontal) {\n\t            y -= expandSize;\n\t            height += expandSize * 2;\n\t        }\n\t        else {\n\t            x -= expandSize;\n\t            width += expandSize * 2;\n\t        }\n\t\n\t        var clipPath = new graphic.Rect({\n\t            shape: {\n\t                x: x,\n\t                y: y,\n\t                width: width,\n\t                height: height\n\t            }\n\t        });\n\t\n\t        if (hasAnimation) {\n\t            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n\t            graphic.initProps(clipPath, {\n\t                shape: {\n\t                    width: width,\n\t                    height: height\n\t                }\n\t            }, seriesModel);\n\t        }\n\t\n\t        return clipPath;\n\t    }\n\t\n\t    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n\t        var angleAxis = polar.getAngleAxis();\n\t        var radiusAxis = polar.getRadiusAxis();\n\t\n\t        var radiusExtent = radiusAxis.getExtent();\n\t        var angleExtent = angleAxis.getExtent();\n\t\n\t        var RADIAN = Math.PI / 180;\n\t\n\t        var clipPath = new graphic.Sector({\n\t            shape: {\n\t                cx: polar.cx,\n\t                cy: polar.cy,\n\t                r0: radiusExtent[0],\n\t                r: radiusExtent[1],\n\t                startAngle: -angleExtent[0] * RADIAN,\n\t                endAngle: -angleExtent[1] * RADIAN,\n\t                clockwise: angleAxis.inverse\n\t            }\n\t        });\n\t\n\t        if (hasAnimation) {\n\t            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n\t            graphic.initProps(clipPath, {\n\t                shape: {\n\t                    endAngle: -angleExtent[1] * RADIAN\n\t                }\n\t            }, seriesModel);\n\t        }\n\t\n\t        return clipPath;\n\t    }\n\t\n\t    function createClipShape(coordSys, hasAnimation, seriesModel) {\n\t        return coordSys.type === 'polar'\n\t            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n\t            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n\t    }\n\t\n\t    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n\t        var baseAxis = coordSys.getBaseAxis();\n\t        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\t\n\t        var stepPoints = [];\n\t        for (var i = 0; i < points.length - 1; i++) {\n\t            var nextPt = points[i + 1];\n\t            var pt = points[i];\n\t            stepPoints.push(pt);\n\t\n\t            var stepPt = [];\n\t            switch (stepTurnAt) {\n\t                case 'end':\n\t                    stepPt[baseIndex] = nextPt[baseIndex];\n\t                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n\t                    // default is start\n\t                    stepPoints.push(stepPt);\n\t                    break;\n\t                case 'middle':\n\t                    // default is start\n\t                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n\t                    var stepPt2 = [];\n\t                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n\t                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n\t                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n\t                    stepPoints.push(stepPt);\n\t                    stepPoints.push(stepPt2);\n\t                    break;\n\t                default:\n\t                    stepPt[baseIndex] = pt[baseIndex];\n\t                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n\t                    // default is start\n\t                    stepPoints.push(stepPt);\n\t            }\n\t        }\n\t        // Last points\n\t        points[i] && stepPoints.push(points[i]);\n\t        return stepPoints;\n\t    }\n\t\n\t    function getVisualGradient(data, coordSys) {\n\t        var visualMetaList = data.getVisual('visualMeta');\n\t        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n\t            // When data.count() is 0, gradient range can not be calculated.\n\t            return;\n\t        }\n\t\n\t        var visualMeta;\n\t        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n\t            // Can only be x or y\n\t            if (visualMetaList[i].dimension < 2) {\n\t                visualMeta = visualMetaList[i];\n\t                break;\n\t            }\n\t        }\n\t        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n\t            if (__DEV__) {\n\t                console.warn('Visual map on line style only support x or y dimension.');\n\t            }\n\t            return;\n\t        }\n\t\n\t        // If the area to be rendered is bigger than area defined by LinearGradient,\n\t        // the canvas spec prescribes that the color of the first stop and the last\n\t        // stop should be used. But if two stops are added at offset 0, in effect\n\t        // browsers use the color of the second stop to render area outside\n\t        // LinearGradient. So we can only infinitesimally extend area defined in\n\t        // LinearGradient to render `outerColors`.\n\t\n\t        var dimension = visualMeta.dimension;\n\t        var dimName = data.dimensions[dimension];\n\t        var axis = coordSys.getAxis(dimName);\n\t\n\t        // dataToCoor mapping may not be linear, but must be monotonic.\n\t        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n\t            return {\n\t                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n\t                color: stop.color\n\t            };\n\t        });\n\t        var stopLen = colorStops.length;\n\t        var outerColors = visualMeta.outerColors.slice();\n\t\n\t        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n\t            colorStops.reverse();\n\t            outerColors.reverse();\n\t        }\n\t\n\t        var tinyExtent = 10; // Arbitrary value: 10px\n\t        var minCoord = colorStops[0].coord - tinyExtent;\n\t        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n\t        var coordSpan = maxCoord - minCoord;\n\t\n\t        if (coordSpan < 1e-3) {\n\t            return 'transparent';\n\t        }\n\t\n\t        zrUtil.each(colorStops, function (stop) {\n\t            stop.offset = (stop.coord - minCoord) / coordSpan;\n\t        });\n\t        colorStops.push({\n\t            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n\t            color: outerColors[1] || 'transparent'\n\t        });\n\t        colorStops.unshift({ // notice colorStops.length have been changed.\n\t            offset: stopLen ? colorStops[0].offset : 0.5,\n\t            color: outerColors[0] || 'transparent'\n\t        });\n\t\n\t        // zrUtil.each(colorStops, function (colorStop) {\n\t        //     // Make sure each offset has rounded px to avoid not sharp edge\n\t        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n\t        // });\n\t\n\t        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n\t        gradient[dimName] = minCoord;\n\t        gradient[dimName + '2'] = maxCoord;\n\t\n\t        return gradient;\n\t    }\n\t\n\t    module.exports = ChartView.extend({\n\t\n\t        type: 'line',\n\t\n\t        init: function () {\n\t            var lineGroup = new graphic.Group();\n\t\n\t            var symbolDraw = new SymbolDraw();\n\t            this.group.add(symbolDraw.group);\n\t\n\t            this._symbolDraw = symbolDraw;\n\t            this._lineGroup = lineGroup;\n\t        },\n\t\n\t        render: function (seriesModel, ecModel, api) {\n\t            var coordSys = seriesModel.coordinateSystem;\n\t            var group = this.group;\n\t            var data = seriesModel.getData();\n\t            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n\t            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\t\n\t            var points = data.mapArray(data.getItemLayout, true);\n\t\n\t            var isCoordSysPolar = coordSys.type === 'polar';\n\t            var prevCoordSys = this._coordSys;\n\t\n\t            var symbolDraw = this._symbolDraw;\n\t            var polyline = this._polyline;\n\t            var polygon = this._polygon;\n\t\n\t            var lineGroup = this._lineGroup;\n\t\n\t            var hasAnimation = seriesModel.get('animation');\n\t\n\t            var isAreaChart = !areaStyleModel.isEmpty();\n\t            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\t\n\t            var showSymbol = seriesModel.get('showSymbol');\n\t\n\t            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n\t                && this._getSymbolIgnoreFunc(data, coordSys);\n\t\n\t            // Remove temporary symbols\n\t            var oldData = this._data;\n\t            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n\t                if (el.__temp) {\n\t                    group.remove(el);\n\t                    oldData.setItemGraphicEl(idx, null);\n\t                }\n\t            });\n\t\n\t            // Remove previous created symbols if showSymbol changed to false\n\t            if (!showSymbol) {\n\t                symbolDraw.remove();\n\t            }\n\t\n\t            group.add(lineGroup);\n\t\n\t            // FIXME step not support polar\n\t            var step = !isCoordSysPolar && seriesModel.get('step');\n\t            // Initialization animation or coordinate system changed\n\t            if (\n\t                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n\t            ) {\n\t                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\t\n\t                if (step) {\n\t                    // TODO If stacked series is not step\n\t                    points = turnPointsIntoStep(points, coordSys, step);\n\t                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n\t                }\n\t\n\t                polyline = this._newPolyline(points, coordSys, hasAnimation);\n\t                if (isAreaChart) {\n\t                    polygon = this._newPolygon(\n\t                        points, stackedOnPoints,\n\t                        coordSys, hasAnimation\n\t                    );\n\t                }\n\t                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n\t            }\n\t            else {\n\t                if (isAreaChart && !polygon) {\n\t                    // If areaStyle is added\n\t                    polygon = this._newPolygon(\n\t                        points, stackedOnPoints,\n\t                        coordSys, hasAnimation\n\t                    );\n\t                }\n\t                else if (polygon && !isAreaChart) {\n\t                    // If areaStyle is removed\n\t                    lineGroup.remove(polygon);\n\t                    polygon = this._polygon = null;\n\t                }\n\t\n\t                // Update clipPath\n\t                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\t\n\t                // Always update, or it is wrong in the case turning on legend\n\t                // because points are not changed\n\t                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\t\n\t                // Stop symbol animation and sync with line points\n\t                // FIXME performance?\n\t                data.eachItemGraphicEl(function (el) {\n\t                    el.stopAnimation(true);\n\t                });\n\t\n\t                // In the case data zoom triggerred refreshing frequently\n\t                // Data may not change if line has a category axis. So it should animate nothing\n\t                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n\t                    || !isPointsSame(this._points, points)\n\t                ) {\n\t                    if (hasAnimation) {\n\t                        this._updateAnimation(\n\t                            data, stackedOnPoints, coordSys, api, step\n\t                        );\n\t                    }\n\t                    else {\n\t                        // Not do it in update with animation\n\t                        if (step) {\n\t                            // TODO If stacked series is not step\n\t                            points = turnPointsIntoStep(points, coordSys, step);\n\t                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n\t                        }\n\t\n\t                        polyline.setShape({\n\t                            points: points\n\t                        });\n\t                        polygon && polygon.setShape({\n\t                            points: points,\n\t                            stackedOnPoints: stackedOnPoints\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t\n\t            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\t\n\t            polyline.useStyle(zrUtil.defaults(\n\t                // Use color in lineStyle first\n\t                lineStyleModel.getLineStyle(),\n\t                {\n\t                    fill: 'none',\n\t                    stroke: visualColor,\n\t                    lineJoin: 'bevel'\n\t                }\n\t            ));\n\t\n\t            var smooth = seriesModel.get('smooth');\n\t            smooth = getSmooth(seriesModel.get('smooth'));\n\t            polyline.setShape({\n\t                smooth: smooth,\n\t                smoothMonotone: seriesModel.get('smoothMonotone'),\n\t                connectNulls: seriesModel.get('connectNulls')\n\t            });\n\t\n\t            if (polygon) {\n\t                var stackedOn = data.stackedOn;\n\t                var stackedOnSmooth = 0;\n\t\n\t                polygon.useStyle(zrUtil.defaults(\n\t                    areaStyleModel.getAreaStyle(),\n\t                    {\n\t                        fill: visualColor,\n\t                        opacity: 0.7,\n\t                        lineJoin: 'bevel'\n\t                    }\n\t                ));\n\t\n\t                if (stackedOn) {\n\t                    var stackedOnSeries = stackedOn.hostModel;\n\t                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n\t                }\n\t\n\t                polygon.setShape({\n\t                    smooth: smooth,\n\t                    stackedOnSmooth: stackedOnSmooth,\n\t                    smoothMonotone: seriesModel.get('smoothMonotone'),\n\t                    connectNulls: seriesModel.get('connectNulls')\n\t                });\n\t            }\n\t\n\t            this._data = data;\n\t            // Save the coordinate system for transition animation when data changed\n\t            this._coordSys = coordSys;\n\t            this._stackedOnPoints = stackedOnPoints;\n\t            this._points = points;\n\t            this._step = step;\n\t        },\n\t\n\t        dispose: function () {},\n\t\n\t        highlight: function (seriesModel, ecModel, api, payload) {\n\t            var data = seriesModel.getData();\n\t            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\t\n\t            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n\t                var symbol = data.getItemGraphicEl(dataIndex);\n\t                if (!symbol) {\n\t                    // Create a temporary symbol if it is not exists\n\t                    var pt = data.getItemLayout(dataIndex);\n\t                    if (!pt) {\n\t                        // Null data\n\t                        return;\n\t                    }\n\t                    symbol = new Symbol(data, dataIndex);\n\t                    symbol.position = pt;\n\t                    symbol.setZ(\n\t                        seriesModel.get('zlevel'),\n\t                        seriesModel.get('z')\n\t                    );\n\t                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n\t                    symbol.__temp = true;\n\t                    data.setItemGraphicEl(dataIndex, symbol);\n\t\n\t                    // Stop scale animation\n\t                    symbol.stopSymbolAnimation(true);\n\t\n\t                    this.group.add(symbol);\n\t                }\n\t                symbol.highlight();\n\t            }\n\t            else {\n\t                // Highlight whole series\n\t                ChartView.prototype.highlight.call(\n\t                    this, seriesModel, ecModel, api, payload\n\t                );\n\t            }\n\t        },\n\t\n\t        downplay: function (seriesModel, ecModel, api, payload) {\n\t            var data = seriesModel.getData();\n\t            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\t            if (dataIndex != null && dataIndex >= 0) {\n\t                var symbol = data.getItemGraphicEl(dataIndex);\n\t                if (symbol) {\n\t                    if (symbol.__temp) {\n\t                        data.setItemGraphicEl(dataIndex, null);\n\t                        this.group.remove(symbol);\n\t                    }\n\t                    else {\n\t                        symbol.downplay();\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                // Downplay whole series\n\t                ChartView.prototype.downplay.call(\n\t                    this, seriesModel, ecModel, api, payload\n\t                );\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {module:zrender/container/Group} group\n\t         * @param {Array.<Array.<number>>} points\n\t         * @private\n\t         */\n\t        _newPolyline: function (points) {\n\t            var polyline = this._polyline;\n\t            // Remove previous created polyline\n\t            if (polyline) {\n\t                this._lineGroup.remove(polyline);\n\t            }\n\t\n\t            polyline = new polyHelper.Polyline({\n\t                shape: {\n\t                    points: points\n\t                },\n\t                silent: true,\n\t                z2: 10\n\t            });\n\t\n\t            this._lineGroup.add(polyline);\n\t\n\t            this._polyline = polyline;\n\t\n\t            return polyline;\n\t        },\n\t\n\t        /**\n\t         * @param {module:zrender/container/Group} group\n\t         * @param {Array.<Array.<number>>} stackedOnPoints\n\t         * @param {Array.<Array.<number>>} points\n\t         * @private\n\t         */\n\t        _newPolygon: function (points, stackedOnPoints) {\n\t            var polygon = this._polygon;\n\t            // Remove previous created polygon\n\t            if (polygon) {\n\t                this._lineGroup.remove(polygon);\n\t            }\n\t\n\t            polygon = new polyHelper.Polygon({\n\t                shape: {\n\t                    points: points,\n\t                    stackedOnPoints: stackedOnPoints\n\t                },\n\t                silent: true\n\t            });\n\t\n\t            this._lineGroup.add(polygon);\n\t\n\t            this._polygon = polygon;\n\t            return polygon;\n\t        },\n\t        /**\n\t         * @private\n\t         */\n\t        _getSymbolIgnoreFunc: function (data, coordSys) {\n\t            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\t            // `getLabelInterval` is provided by echarts/component/axis\n\t            if (categoryAxis && categoryAxis.isLabelIgnored) {\n\t                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         */\n\t        // FIXME Two value axis\n\t        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n\t            var polyline = this._polyline;\n\t            var polygon = this._polygon;\n\t            var seriesModel = data.hostModel;\n\t\n\t            var diff = lineAnimationDiff(\n\t                this._data, data,\n\t                this._stackedOnPoints, stackedOnPoints,\n\t                this._coordSys, coordSys\n\t            );\n\t\n\t            var current = diff.current;\n\t            var stackedOnCurrent = diff.stackedOnCurrent;\n\t            var next = diff.next;\n\t            var stackedOnNext = diff.stackedOnNext;\n\t            if (step) {\n\t                // TODO If stacked series is not step\n\t                current = turnPointsIntoStep(diff.current, coordSys, step);\n\t                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n\t                next = turnPointsIntoStep(diff.next, coordSys, step);\n\t                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n\t            }\n\t            // `diff.current` is subset of `current` (which should be ensured by\n\t            // turnPointsIntoStep), so points in `__points` can be updated when\n\t            // points in `current` are update during animation.\n\t            polyline.shape.__points = diff.current;\n\t            polyline.shape.points = current;\n\t\n\t            graphic.updateProps(polyline, {\n\t                shape: {\n\t                    points: next\n\t                }\n\t            }, seriesModel);\n\t\n\t            if (polygon) {\n\t                polygon.setShape({\n\t                    points: current,\n\t                    stackedOnPoints: stackedOnCurrent\n\t                });\n\t                graphic.updateProps(polygon, {\n\t                    shape: {\n\t                        points: next,\n\t                        stackedOnPoints: stackedOnNext\n\t                    }\n\t                }, seriesModel);\n\t            }\n\t\n\t            var updatedDataInfo = [];\n\t            var diffStatus = diff.status;\n\t\n\t            for (var i = 0; i < diffStatus.length; i++) {\n\t                var cmd = diffStatus[i].cmd;\n\t                if (cmd === '=') {\n\t                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\t                    if (el) {\n\t                        updatedDataInfo.push({\n\t                            el: el,\n\t                            ptIdx: i    // Index of points\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (polyline.animators && polyline.animators.length) {\n\t                polyline.animators[0].during(function () {\n\t                    for (var i = 0; i < updatedDataInfo.length; i++) {\n\t                        var el = updatedDataInfo[i].el;\n\t                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n\t                    }\n\t                });\n\t            }\n\t        },\n\t\n\t        remove: function (ecModel) {\n\t            var group = this.group;\n\t            var oldData = this._data;\n\t            this._lineGroup.removeAll();\n\t            this._symbolDraw.remove(true);\n\t            // Remove temporary created elements when highlighting\n\t            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n\t                if (el.__temp) {\n\t                    group.remove(el);\n\t                    oldData.setItemGraphicEl(idx, null);\n\t                }\n\t            });\n\t\n\t            this._polyline =\n\t            this._polygon =\n\t            this._coordSys =\n\t            this._points =\n\t            this._stackedOnPoints =\n\t            this._data = null;\n\t        }\n\t    });\n\n\n/***/ },\n/* 586 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module echarts/chart/helper/SymbolDraw\n\t */\n\t\n\t\n\t    var graphic = __webpack_require__(525);\n\t    var Symbol = __webpack_require__(587);\n\t\n\t    /**\n\t     * @constructor\n\t     * @alias module:echarts/chart/helper/SymbolDraw\n\t     * @param {module:zrender/graphic/Group} [symbolCtor]\n\t     */\n\t    function SymbolDraw(symbolCtor) {\n\t        this.group = new graphic.Group();\n\t\n\t        this._symbolCtor = symbolCtor || Symbol;\n\t    }\n\t\n\t    var symbolDrawProto = SymbolDraw.prototype;\n\t\n\t    function symbolNeedsDraw(data, idx, isIgnore) {\n\t        var point = data.getItemLayout(idx);\n\t        // Is an object\n\t        // if (point && point.hasOwnProperty('point')) {\n\t        //     point = point.point;\n\t        // }\n\t        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n\t                    && data.getItemVisual(idx, 'symbol') !== 'none';\n\t    }\n\t    /**\n\t     * Update symbols draw by new data\n\t     * @param {module:echarts/data/List} data\n\t     * @param {Array.<boolean>} [isIgnore]\n\t     */\n\t    symbolDrawProto.updateData = function (data, isIgnore) {\n\t        var group = this.group;\n\t        var seriesModel = data.hostModel;\n\t        var oldData = this._data;\n\t\n\t        var SymbolCtor = this._symbolCtor;\n\t\n\t        var seriesScope = {\n\t            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n\t            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n\t            symbolRotate: seriesModel.get('symbolRotate'),\n\t            symbolOffset: seriesModel.get('symbolOffset'),\n\t            hoverAnimation: seriesModel.get('hoverAnimation'),\n\t\n\t            labelModel: seriesModel.getModel('label.normal'),\n\t            hoverLabelModel: seriesModel.getModel('label.emphasis')\n\t        };\n\t\n\t        data.diff(oldData)\n\t            .add(function (newIdx) {\n\t                var point = data.getItemLayout(newIdx);\n\t                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n\t                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n\t                    symbolEl.attr('position', point);\n\t                    data.setItemGraphicEl(newIdx, symbolEl);\n\t                    group.add(symbolEl);\n\t                }\n\t            })\n\t            .update(function (newIdx, oldIdx) {\n\t                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\t                var point = data.getItemLayout(newIdx);\n\t                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n\t                    group.remove(symbolEl);\n\t                    return;\n\t                }\n\t                if (!symbolEl) {\n\t                    symbolEl = new SymbolCtor(data, newIdx);\n\t                    symbolEl.attr('position', point);\n\t                }\n\t                else {\n\t                    symbolEl.updateData(data, newIdx, seriesScope);\n\t                    graphic.updateProps(symbolEl, {\n\t                        position: point\n\t                    }, seriesModel);\n\t                }\n\t\n\t                // Add back\n\t                group.add(symbolEl);\n\t\n\t                data.setItemGraphicEl(newIdx, symbolEl);\n\t            })\n\t            .remove(function (oldIdx) {\n\t                var el = oldData.getItemGraphicEl(oldIdx);\n\t                el && el.fadeOut(function () {\n\t                    group.remove(el);\n\t                });\n\t            })\n\t            .execute();\n\t\n\t        this._data = data;\n\t    };\n\t\n\t    symbolDrawProto.updateLayout = function () {\n\t        var data = this._data;\n\t        if (data) {\n\t            // Not use animation\n\t            data.eachItemGraphicEl(function (el, idx) {\n\t                var point = data.getItemLayout(idx);\n\t                el.attr('position', point);\n\t            });\n\t        }\n\t    };\n\t\n\t    symbolDrawProto.remove = function (enableAnimation) {\n\t        var group = this.group;\n\t        var data = this._data;\n\t        if (data) {\n\t            if (enableAnimation) {\n\t                data.eachItemGraphicEl(function (el) {\n\t                    el.fadeOut(function () {\n\t                        group.remove(el);\n\t                    });\n\t                });\n\t            }\n\t            else {\n\t                group.removeAll();\n\t            }\n\t        }\n\t    };\n\t\n\t    module.exports = SymbolDraw;\n\n\n/***/ },\n/* 587 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module echarts/chart/helper/Symbol\n\t */\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var symbolUtil = __webpack_require__(588);\n\t    var graphic = __webpack_require__(525);\n\t    var numberUtil = __webpack_require__(489);\n\t\n\t    function normalizeSymbolSize(symbolSize) {\n\t        symbolSize = symbolSize instanceof Array\n\t            ? symbolSize.slice()\n\t            : [+symbolSize, +symbolSize];\n\t        symbolSize[0] /= 2;\n\t        symbolSize[1] /= 2;\n\t        return symbolSize;\n\t    }\n\t\n\t    /**\n\t     * @constructor\n\t     * @alias {module:echarts/chart/helper/Symbol}\n\t     * @param {module:echarts/data/List} data\n\t     * @param {number} idx\n\t     * @extends {module:zrender/graphic/Group}\n\t     */\n\t    function Symbol(data, idx, seriesScope) {\n\t        graphic.Group.call(this);\n\t\n\t        this.updateData(data, idx, seriesScope);\n\t    }\n\t\n\t    var symbolProto = Symbol.prototype;\n\t\n\t    function driftSymbol(dx, dy) {\n\t        this.parent.drift(dx, dy);\n\t    }\n\t\n\t    symbolProto._createSymbol = function (symbolType, data, idx) {\n\t        // Remove paths created before\n\t        this.removeAll();\n\t\n\t        var seriesModel = data.hostModel;\n\t        var color = data.getItemVisual(idx, 'color');\n\t\n\t        // var symbolPath = symbolUtil.createSymbol(\n\t        //     symbolType, -0.5, -0.5, 1, 1, color\n\t        // );\n\t        // If width/height are set too small (e.g., set to 1) on ios10\n\t        // and macOS Sierra, a circle stroke become a rect, no matter what\n\t        // the scale is set. So we set width/height as 2. See #4150.\n\t        var symbolPath = symbolUtil.createSymbol(\n\t            symbolType, -1, -1, 2, 2, color\n\t        );\n\t\n\t        symbolPath.attr({\n\t            z2: 100,\n\t            culling: true,\n\t            scale: [0, 0]\n\t        });\n\t        // Rewrite drift method\n\t        symbolPath.drift = driftSymbol;\n\t\n\t        var size = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n\t\n\t        graphic.initProps(symbolPath, {\n\t            scale: size\n\t        }, seriesModel, idx);\n\t        this._symbolType = symbolType;\n\t\n\t        this.add(symbolPath);\n\t    };\n\t\n\t    /**\n\t     * Stop animation\n\t     * @param {boolean} toLastFrame\n\t     */\n\t    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n\t        this.childAt(0).stopAnimation(toLastFrame);\n\t    };\n\t\n\t    /**\n\t     * Get symbol path element\n\t     */\n\t    symbolProto.getSymbolPath = function () {\n\t        return this.childAt(0);\n\t    };\n\t\n\t    /**\n\t     * Get scale(aka, current symbol size).\n\t     * Including the change caused by animation\n\t     */\n\t    symbolProto.getScale = function () {\n\t        return this.childAt(0).scale;\n\t    };\n\t\n\t    /**\n\t     * Highlight symbol\n\t     */\n\t    symbolProto.highlight = function () {\n\t        this.childAt(0).trigger('emphasis');\n\t    };\n\t\n\t    /**\n\t     * Downplay symbol\n\t     */\n\t    symbolProto.downplay = function () {\n\t        this.childAt(0).trigger('normal');\n\t    };\n\t\n\t    /**\n\t     * @param {number} zlevel\n\t     * @param {number} z\n\t     */\n\t    symbolProto.setZ = function (zlevel, z) {\n\t        var symbolPath = this.childAt(0);\n\t        symbolPath.zlevel = zlevel;\n\t        symbolPath.z = z;\n\t    };\n\t\n\t    symbolProto.setDraggable = function (draggable) {\n\t        var symbolPath = this.childAt(0);\n\t        symbolPath.draggable = draggable;\n\t        symbolPath.cursor = draggable ? 'move' : 'pointer';\n\t    };\n\t\n\t    /**\n\t     * Update symbol properties\n\t     * @param  {module:echarts/data/List} data\n\t     * @param  {number} idx\n\t     */\n\t    symbolProto.updateData = function (data, idx, seriesScope) {\n\t        this.silent = false;\n\t\n\t        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n\t        var seriesModel = data.hostModel;\n\t        var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n\t        if (symbolType !== this._symbolType) {\n\t            this._createSymbol(symbolType, data, idx);\n\t        }\n\t        else {\n\t            var symbolPath = this.childAt(0);\n\t            graphic.updateProps(symbolPath, {\n\t                scale: symbolSize\n\t            }, seriesModel, idx);\n\t        }\n\t        this._updateCommon(data, idx, symbolSize, seriesScope);\n\t        this._seriesModel = seriesModel;\n\t    };\n\t\n\t    // Update common properties\n\t    var normalStyleAccessPath = ['itemStyle', 'normal'];\n\t    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\t    var normalLabelAccessPath = ['label', 'normal'];\n\t    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\t\n\t    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n\t        var symbolPath = this.childAt(0);\n\t        var seriesModel = data.hostModel;\n\t        var color = data.getItemVisual(idx, 'color');\n\t\n\t        // Reset style\n\t        if (symbolPath.type !== 'image') {\n\t            symbolPath.useStyle({\n\t                strokeNoScale: true\n\t            });\n\t        }\n\t\n\t        seriesScope = seriesScope || null;\n\t\n\t        var itemStyle = seriesScope && seriesScope.itemStyle;\n\t        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n\t        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n\t        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n\t        var labelModel = seriesScope && seriesScope.labelModel;\n\t        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n\t        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\t\n\t        if (!seriesScope || data.hasItemOption) {\n\t            var itemModel = data.getItemModel(idx);\n\t\n\t            // Color must be excluded.\n\t            // Because symbol provide setColor individually to set fill and stroke\n\t            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n\t            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\t\n\t            symbolRotate = itemModel.getShallow('symbolRotate');\n\t            symbolOffset = itemModel.getShallow('symbolOffset');\n\t\n\t            labelModel = itemModel.getModel(normalLabelAccessPath);\n\t            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n\t            hoverAnimation = itemModel.getShallow('hoverAnimation');\n\t        }\n\t        else {\n\t            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n\t        }\n\t\n\t        var elStyle = symbolPath.style;\n\t\n\t        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\t\n\t        if (symbolOffset) {\n\t            symbolPath.attr('position', [\n\t                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n\t                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n\t            ]);\n\t        }\n\t\n\t        // PENDING setColor before setStyle!!!\n\t        symbolPath.setColor(color);\n\t\n\t        symbolPath.setStyle(itemStyle);\n\t\n\t        var opacity = data.getItemVisual(idx, 'opacity');\n\t        if (opacity != null) {\n\t            elStyle.opacity = opacity;\n\t        }\n\t\n\t        // Get last value dim\n\t        var dimensions = data.dimensions.slice();\n\t        var valueDim;\n\t        var dataType;\n\t        while (dimensions.length && (\n\t            valueDim = dimensions.pop(),\n\t            dataType = data.getDimensionInfo(valueDim).type,\n\t            dataType === 'ordinal' || dataType === 'time'\n\t        )) {} // jshint ignore:line\n\t\n\t        if (valueDim != null && labelModel.getShallow('show')) {\n\t            graphic.setText(elStyle, labelModel, color);\n\t            elStyle.text = zrUtil.retrieve(\n\t                seriesModel.getFormattedLabel(idx, 'normal'),\n\t                data.get(valueDim, idx)\n\t            );\n\t        }\n\t        else {\n\t            elStyle.text = '';\n\t        }\n\t\n\t        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n\t            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n\t            hoverItemStyle.text = zrUtil.retrieve(\n\t                seriesModel.getFormattedLabel(idx, 'emphasis'),\n\t                data.get(valueDim, idx)\n\t            );\n\t        }\n\t        else {\n\t            hoverItemStyle.text = '';\n\t        }\n\t\n\t        var size = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n\t\n\t        symbolPath.off('mouseover')\n\t            .off('mouseout')\n\t            .off('emphasis')\n\t            .off('normal');\n\t\n\t        symbolPath.hoverStyle = hoverItemStyle;\n\t\n\t        graphic.setHoverStyle(symbolPath);\n\t\n\t        if (hoverAnimation && seriesModel.ifEnableAnimation()) {\n\t            var onEmphasis = function() {\n\t                var ratio = size[1] / size[0];\n\t                this.animateTo({\n\t                    scale: [\n\t                        Math.max(size[0] * 1.1, size[0] + 3),\n\t                        Math.max(size[1] * 1.1, size[1] + 3 * ratio)\n\t                    ]\n\t                }, 400, 'elasticOut');\n\t            };\n\t            var onNormal = function() {\n\t                this.animateTo({\n\t                    scale: size\n\t                }, 400, 'elasticOut');\n\t            };\n\t            symbolPath.on('mouseover', onEmphasis)\n\t                .on('mouseout', onNormal)\n\t                .on('emphasis', onEmphasis)\n\t                .on('normal', onNormal);\n\t        }\n\t    };\n\t\n\t    symbolProto.fadeOut = function (cb) {\n\t        var symbolPath = this.childAt(0);\n\t        // Avoid mistaken hover when fading out\n\t        this.silent = true;\n\t        // Not show text when animating\n\t        symbolPath.style.text = '';\n\t        graphic.updateProps(symbolPath, {\n\t            scale: [0, 0]\n\t        }, this._seriesModel, this.dataIndex, cb);\n\t    };\n\t\n\t    zrUtil.inherits(Symbol, graphic.Group);\n\t\n\t    module.exports = Symbol;\n\n\n/***/ },\n/* 588 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// Symbol factory\n\t\n\t\n\t    var graphic = __webpack_require__(525);\n\t    var BoundingRect = __webpack_require__(491);\n\t\n\t    /**\n\t     * Triangle shape\n\t     * @inner\n\t     */\n\t    var Triangle = graphic.extendShape({\n\t        type: 'triangle',\n\t        shape: {\n\t            cx: 0,\n\t            cy: 0,\n\t            width: 0,\n\t            height: 0\n\t        },\n\t        buildPath: function (path, shape) {\n\t            var cx = shape.cx;\n\t            var cy = shape.cy;\n\t            var width = shape.width / 2;\n\t            var height = shape.height / 2;\n\t            path.moveTo(cx, cy - height);\n\t            path.lineTo(cx + width, cy + height);\n\t            path.lineTo(cx - width, cy + height);\n\t            path.closePath();\n\t        }\n\t    });\n\t    /**\n\t     * Diamond shape\n\t     * @inner\n\t     */\n\t    var Diamond = graphic.extendShape({\n\t        type: 'diamond',\n\t        shape: {\n\t            cx: 0,\n\t            cy: 0,\n\t            width: 0,\n\t            height: 0\n\t        },\n\t        buildPath: function (path, shape) {\n\t            var cx = shape.cx;\n\t            var cy = shape.cy;\n\t            var width = shape.width / 2;\n\t            var height = shape.height / 2;\n\t            path.moveTo(cx, cy - height);\n\t            path.lineTo(cx + width, cy);\n\t            path.lineTo(cx, cy + height);\n\t            path.lineTo(cx - width, cy);\n\t            path.closePath();\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Pin shape\n\t     * @inner\n\t     */\n\t    var Pin = graphic.extendShape({\n\t        type: 'pin',\n\t        shape: {\n\t            // x, y on the cusp\n\t            x: 0,\n\t            y: 0,\n\t            width: 0,\n\t            height: 0\n\t        },\n\t\n\t        buildPath: function (path, shape) {\n\t            var x = shape.x;\n\t            var y = shape.y;\n\t            var w = shape.width / 5 * 3;\n\t            // Height must be larger than width\n\t            var h = Math.max(w, shape.height);\n\t            var r = w / 2;\n\t\n\t            // Dist on y with tangent point and circle center\n\t            var dy = r * r / (h - r);\n\t            var cy = y - h + r + dy;\n\t            var angle = Math.asin(dy / r);\n\t            // Dist on x with tangent point and circle center\n\t            var dx = Math.cos(angle) * r;\n\t\n\t            var tanX = Math.sin(angle);\n\t            var tanY = Math.cos(angle);\n\t\n\t            path.arc(\n\t                x, cy, r,\n\t                Math.PI - angle,\n\t                Math.PI * 2 + angle\n\t            );\n\t\n\t            var cpLen = r * 0.6;\n\t            var cpLen2 = r * 0.7;\n\t            path.bezierCurveTo(\n\t                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n\t                x, y - cpLen2,\n\t                x, y\n\t            );\n\t            path.bezierCurveTo(\n\t                x, y - cpLen2,\n\t                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n\t                x - dx, cy + dy\n\t            );\n\t            path.closePath();\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Arrow shape\n\t     * @inner\n\t     */\n\t    var Arrow = graphic.extendShape({\n\t\n\t        type: 'arrow',\n\t\n\t        shape: {\n\t            x: 0,\n\t            y: 0,\n\t            width: 0,\n\t            height: 0\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var height = shape.height;\n\t            var width = shape.width;\n\t            var x = shape.x;\n\t            var y = shape.y;\n\t            var dx = width / 3 * 2;\n\t            ctx.moveTo(x, y);\n\t            ctx.lineTo(x + dx, y + height);\n\t            ctx.lineTo(x, y + height / 4 * 3);\n\t            ctx.lineTo(x - dx, y + height);\n\t            ctx.lineTo(x, y);\n\t            ctx.closePath();\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Map of path contructors\n\t     * @type {Object.<string, module:zrender/graphic/Path>}\n\t     */\n\t    var symbolCtors = {\n\t        line: graphic.Line,\n\t\n\t        rect: graphic.Rect,\n\t\n\t        roundRect: graphic.Rect,\n\t\n\t        square: graphic.Rect,\n\t\n\t        circle: graphic.Circle,\n\t\n\t        diamond: Diamond,\n\t\n\t        pin: Pin,\n\t\n\t        arrow: Arrow,\n\t\n\t        triangle: Triangle\n\t    };\n\t\n\t    var symbolShapeMakers = {\n\t\n\t        line: function (x, y, w, h, shape) {\n\t            // FIXME\n\t            shape.x1 = x;\n\t            shape.y1 = y + h / 2;\n\t            shape.x2 = x + w;\n\t            shape.y2 = y + h / 2;\n\t        },\n\t\n\t        rect: function (x, y, w, h, shape) {\n\t            shape.x = x;\n\t            shape.y = y;\n\t            shape.width = w;\n\t            shape.height = h;\n\t        },\n\t\n\t        roundRect: function (x, y, w, h, shape) {\n\t            shape.x = x;\n\t            shape.y = y;\n\t            shape.width = w;\n\t            shape.height = h;\n\t            shape.r = Math.min(w, h) / 4;\n\t        },\n\t\n\t        square: function (x, y, w, h, shape) {\n\t            var size = Math.min(w, h);\n\t            shape.x = x;\n\t            shape.y = y;\n\t            shape.width = size;\n\t            shape.height = size;\n\t        },\n\t\n\t        circle: function (x, y, w, h, shape) {\n\t            // Put circle in the center of square\n\t            shape.cx = x + w / 2;\n\t            shape.cy = y + h / 2;\n\t            shape.r = Math.min(w, h) / 2;\n\t        },\n\t\n\t        diamond: function (x, y, w, h, shape) {\n\t            shape.cx = x + w / 2;\n\t            shape.cy = y + h / 2;\n\t            shape.width = w;\n\t            shape.height = h;\n\t        },\n\t\n\t        pin: function (x, y, w, h, shape) {\n\t            shape.x = x + w / 2;\n\t            shape.y = y + h / 2;\n\t            shape.width = w;\n\t            shape.height = h;\n\t        },\n\t\n\t        arrow: function (x, y, w, h, shape) {\n\t            shape.x = x + w / 2;\n\t            shape.y = y + h / 2;\n\t            shape.width = w;\n\t            shape.height = h;\n\t        },\n\t\n\t        triangle: function (x, y, w, h, shape) {\n\t            shape.cx = x + w / 2;\n\t            shape.cy = y + h / 2;\n\t            shape.width = w;\n\t            shape.height = h;\n\t        }\n\t    };\n\t\n\t    var symbolBuildProxies = {};\n\t    for (var name in symbolCtors) {\n\t        if (symbolCtors.hasOwnProperty(name)) {\n\t            symbolBuildProxies[name] = new symbolCtors[name]();\n\t        }\n\t    }\n\t\n\t    var Symbol = graphic.extendShape({\n\t\n\t        type: 'symbol',\n\t\n\t        shape: {\n\t            symbolType: '',\n\t            x: 0,\n\t            y: 0,\n\t            width: 0,\n\t            height: 0\n\t        },\n\t\n\t        beforeBrush: function () {\n\t            var style = this.style;\n\t            var shape = this.shape;\n\t            // FIXME\n\t            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n\t                style.textPosition = ['50%', '40%'];\n\t                style.textAlign = 'center';\n\t                style.textVerticalAlign = 'middle';\n\t            }\n\t        },\n\t\n\t        buildPath: function (ctx, shape, inBundle) {\n\t            var symbolType = shape.symbolType;\n\t            var proxySymbol = symbolBuildProxies[symbolType];\n\t            if (shape.symbolType !== 'none') {\n\t                if (!proxySymbol) {\n\t                    // Default rect\n\t                    symbolType = 'rect';\n\t                    proxySymbol = symbolBuildProxies[symbolType];\n\t                }\n\t                symbolShapeMakers[symbolType](\n\t                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n\t                );\n\t                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n\t            }\n\t        }\n\t    });\n\t\n\t    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\t    var symbolPathSetColor = function (color) {\n\t        if (this.type !== 'image') {\n\t            var symbolStyle = this.style;\n\t            var symbolShape = this.shape;\n\t            if (symbolShape && symbolShape.symbolType === 'line') {\n\t                symbolStyle.stroke = color;\n\t            }\n\t            else if (this.__isEmptyBrush) {\n\t                symbolStyle.stroke = color;\n\t                symbolStyle.fill = '#fff';\n\t            }\n\t            else {\n\t                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n\t                symbolStyle.fill && (symbolStyle.fill = color);\n\t                symbolStyle.stroke && (symbolStyle.stroke = color);\n\t            }\n\t            this.dirty(false);\n\t        }\n\t    };\n\t\n\t    var symbolUtil = {\n\t        /**\n\t         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n\t         * @param {string} symbolType\n\t         * @param {number} x\n\t         * @param {number} y\n\t         * @param {number} w\n\t         * @param {number} h\n\t         * @param {string} color\n\t         */\n\t        createSymbol: function (symbolType, x, y, w, h, color) {\n\t            var isEmpty = symbolType.indexOf('empty') === 0;\n\t            if (isEmpty) {\n\t                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n\t            }\n\t            var symbolPath;\n\t\n\t            if (symbolType.indexOf('image://') === 0) {\n\t                symbolPath = new graphic.Image({\n\t                    style: {\n\t                        image: symbolType.slice(8),\n\t                        x: x,\n\t                        y: y,\n\t                        width: w,\n\t                        height: h\n\t                    }\n\t                });\n\t            }\n\t            else if (symbolType.indexOf('path://') === 0) {\n\t                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n\t            }\n\t            else {\n\t                symbolPath = new Symbol({\n\t                    shape: {\n\t                        symbolType: symbolType,\n\t                        x: x,\n\t                        y: y,\n\t                        width: w,\n\t                        height: h\n\t                    }\n\t                });\n\t            }\n\t\n\t            symbolPath.__isEmptyBrush = isEmpty;\n\t\n\t            symbolPath.setColor = symbolPathSetColor;\n\t\n\t            symbolPath.setColor(color);\n\t\n\t            return symbolPath;\n\t        }\n\t    };\n\t\n\t    module.exports = symbolUtil;\n\n\n/***/ },\n/* 589 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n\t    // 'zrender/core/arrayDiff' has been used before, but it did\n\t    // not do well in performance when roam with fixed dataZoom window.\n\t\n\t    function sign(val) {\n\t        return val >= 0 ? 1 : -1;\n\t    }\n\t\n\t    function getStackedOnPoint(coordSys, data, idx) {\n\t        var baseAxis = coordSys.getBaseAxis();\n\t        var valueAxis = coordSys.getOtherAxis(baseAxis);\n\t        var valueStart = baseAxis.onZero\n\t            ? 0 : valueAxis.scale.getExtent()[0];\n\t\n\t        var valueDim = valueAxis.dim;\n\t        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\t\n\t        var stackedOnSameSign;\n\t        var stackedOn = data.stackedOn;\n\t        var val = data.get(valueDim, idx);\n\t        // Find first stacked value with same sign\n\t        while (stackedOn &&\n\t            sign(stackedOn.get(valueDim, idx)) === sign(val)\n\t        ) {\n\t            stackedOnSameSign = stackedOn;\n\t            break;\n\t        }\n\t        var stackedData = [];\n\t        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n\t        stackedData[1 - baseDataOffset] = stackedOnSameSign\n\t            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\t\n\t        return coordSys.dataToPoint(stackedData);\n\t    }\n\t\n\t    // function convertToIntId(newIdList, oldIdList) {\n\t    //     // Generate int id instead of string id.\n\t    //     // Compare string maybe slow in score function of arrDiff\n\t\n\t    //     // Assume id in idList are all unique\n\t    //     var idIndicesMap = {};\n\t    //     var idx = 0;\n\t    //     for (var i = 0; i < newIdList.length; i++) {\n\t    //         idIndicesMap[newIdList[i]] = idx;\n\t    //         newIdList[i] = idx++;\n\t    //     }\n\t    //     for (var i = 0; i < oldIdList.length; i++) {\n\t    //         var oldId = oldIdList[i];\n\t    //         // Same with newIdList\n\t    //         if (idIndicesMap[oldId]) {\n\t    //             oldIdList[i] = idIndicesMap[oldId];\n\t    //         }\n\t    //         else {\n\t    //             oldIdList[i] = idx++;\n\t    //         }\n\t    //     }\n\t    // }\n\t\n\t    function diffData(oldData, newData) {\n\t        var diffResult = [];\n\t\n\t        newData.diff(oldData)\n\t            .add(function (idx) {\n\t                diffResult.push({cmd: '+', idx: idx});\n\t            })\n\t            .update(function (newIdx, oldIdx) {\n\t                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n\t            })\n\t            .remove(function (idx) {\n\t                diffResult.push({cmd: '-', idx: idx});\n\t            })\n\t            .execute();\n\t\n\t        return diffResult;\n\t    }\n\t\n\t    module.exports = function (\n\t        oldData, newData,\n\t        oldStackedOnPoints, newStackedOnPoints,\n\t        oldCoordSys, newCoordSys\n\t    ) {\n\t        var diff = diffData(oldData, newData);\n\t\n\t        // var newIdList = newData.mapArray(newData.getId);\n\t        // var oldIdList = oldData.mapArray(oldData.getId);\n\t\n\t        // convertToIntId(newIdList, oldIdList);\n\t\n\t        // // FIXME One data ?\n\t        // diff = arrayDiff(oldIdList, newIdList);\n\t\n\t        var currPoints = [];\n\t        var nextPoints = [];\n\t        // Points for stacking base line\n\t        var currStackedPoints = [];\n\t        var nextStackedPoints = [];\n\t\n\t        var status = [];\n\t        var sortedIndices = [];\n\t        var rawIndices = [];\n\t        var dims = newCoordSys.dimensions;\n\t        for (var i = 0; i < diff.length; i++) {\n\t            var diffItem = diff[i];\n\t            var pointAdded = true;\n\t\n\t            // FIXME, animation is not so perfect when dataZoom window moves fast\n\t            // Which is in case remvoing or add more than one data in the tail or head\n\t            switch (diffItem.cmd) {\n\t                case '=':\n\t                    var currentPt = oldData.getItemLayout(diffItem.idx);\n\t                    var nextPt = newData.getItemLayout(diffItem.idx1);\n\t                    // If previous data is NaN, use next point directly\n\t                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n\t                        currentPt = nextPt.slice();\n\t                    }\n\t                    currPoints.push(currentPt);\n\t                    nextPoints.push(nextPt);\n\t\n\t                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n\t                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\t\n\t                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n\t                    break;\n\t                case '+':\n\t                    var idx = diffItem.idx;\n\t                    currPoints.push(\n\t                        oldCoordSys.dataToPoint([\n\t                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n\t                        ])\n\t                    );\n\t\n\t                    nextPoints.push(newData.getItemLayout(idx).slice());\n\t\n\t                    currStackedPoints.push(\n\t                        getStackedOnPoint(oldCoordSys, newData, idx)\n\t                    );\n\t                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\t\n\t                    rawIndices.push(newData.getRawIndex(idx));\n\t                    break;\n\t                case '-':\n\t                    var idx = diffItem.idx;\n\t                    var rawIndex = oldData.getRawIndex(idx);\n\t                    // Data is replaced. In the case of dynamic data queue\n\t                    // FIXME FIXME FIXME\n\t                    if (rawIndex !== idx) {\n\t                        currPoints.push(oldData.getItemLayout(idx));\n\t                        nextPoints.push(newCoordSys.dataToPoint([\n\t                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n\t                        ]));\n\t\n\t                        currStackedPoints.push(oldStackedOnPoints[idx]);\n\t                        nextStackedPoints.push(\n\t                            getStackedOnPoint(\n\t                                newCoordSys, oldData, idx\n\t                            )\n\t                        );\n\t\n\t                        rawIndices.push(rawIndex);\n\t                    }\n\t                    else {\n\t                        pointAdded = false;\n\t                    }\n\t            }\n\t\n\t            // Original indices\n\t            if (pointAdded) {\n\t                status.push(diffItem);\n\t                sortedIndices.push(sortedIndices.length);\n\t            }\n\t        }\n\t\n\t        // Diff result may be crossed if all items are changed\n\t        // Sort by data index\n\t        sortedIndices.sort(function (a, b) {\n\t            return rawIndices[a] - rawIndices[b];\n\t        });\n\t\n\t        var sortedCurrPoints = [];\n\t        var sortedNextPoints = [];\n\t\n\t        var sortedCurrStackedPoints = [];\n\t        var sortedNextStackedPoints = [];\n\t\n\t        var sortedStatus = [];\n\t        for (var i = 0; i < sortedIndices.length; i++) {\n\t            var idx = sortedIndices[i];\n\t            sortedCurrPoints[i] = currPoints[idx];\n\t            sortedNextPoints[i] = nextPoints[idx];\n\t\n\t            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n\t            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\t\n\t            sortedStatus[i] = status[idx];\n\t        }\n\t\n\t        return {\n\t            current: sortedCurrPoints,\n\t            next: sortedNextPoints,\n\t\n\t            stackedOnCurrent: sortedCurrStackedPoints,\n\t            stackedOnNext: sortedNextStackedPoints,\n\t\n\t            status: sortedStatus\n\t        };\n\t    };\n\n\n/***/ },\n/* 590 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Poly path support NaN point\n\t\n\t\n\t    var Path = __webpack_require__(527);\n\t    var vec2 = __webpack_require__(492);\n\t\n\t    var vec2Min = vec2.min;\n\t    var vec2Max = vec2.max;\n\t\n\t    var scaleAndAdd = vec2.scaleAndAdd;\n\t    var v2Copy = vec2.copy;\n\t\n\t    // Temporary variable\n\t    var v = [];\n\t    var cp0 = [];\n\t    var cp1 = [];\n\t\n\t    function isPointNull(p) {\n\t        return isNaN(p[0]) || isNaN(p[1]);\n\t    }\n\t\n\t    function drawSegment(\n\t        ctx, points, start, segLen, allLen,\n\t        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n\t    ) {\n\t        var prevIdx = 0;\n\t        var idx = start;\n\t        for (var k = 0; k < segLen; k++) {\n\t            var p = points[idx];\n\t            if (idx >= allLen || idx < 0) {\n\t                break;\n\t            }\n\t            if (isPointNull(p)) {\n\t                if (connectNulls) {\n\t                    idx += dir;\n\t                    continue;\n\t                }\n\t                break;\n\t            }\n\t\n\t            if (idx === start) {\n\t                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n\t                v2Copy(cp0, p);\n\t            }\n\t            else {\n\t                if (smooth > 0) {\n\t                    var nextIdx = idx + dir;\n\t                    var nextP = points[nextIdx];\n\t                    if (connectNulls) {\n\t                        // Find next point not null\n\t                        while (nextP && isPointNull(points[nextIdx])) {\n\t                            nextIdx += dir;\n\t                            nextP = points[nextIdx];\n\t                        }\n\t                    }\n\t\n\t                    var ratioNextSeg = 0.5;\n\t                    var prevP = points[prevIdx];\n\t                    var nextP = points[nextIdx];\n\t                    // Last point\n\t                    if (!nextP || isPointNull(nextP)) {\n\t                        v2Copy(cp1, p);\n\t                    }\n\t                    else {\n\t                        // If next data is null in not connect case\n\t                        if (isPointNull(nextP) && !connectNulls) {\n\t                            nextP = p;\n\t                        }\n\t\n\t                        vec2.sub(v, nextP, prevP);\n\t\n\t                        var lenPrevSeg;\n\t                        var lenNextSeg;\n\t                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n\t                            var dim = smoothMonotone === 'x' ? 0 : 1;\n\t                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n\t                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n\t                        }\n\t                        else {\n\t                            lenPrevSeg = vec2.dist(p, prevP);\n\t                            lenNextSeg = vec2.dist(p, nextP);\n\t                        }\n\t\n\t                        // Use ratio of seg length\n\t                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\t\n\t                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n\t                    }\n\t                    // Smooth constraint\n\t                    vec2Min(cp0, cp0, smoothMax);\n\t                    vec2Max(cp0, cp0, smoothMin);\n\t                    vec2Min(cp1, cp1, smoothMax);\n\t                    vec2Max(cp1, cp1, smoothMin);\n\t\n\t                    ctx.bezierCurveTo(\n\t                        cp0[0], cp0[1],\n\t                        cp1[0], cp1[1],\n\t                        p[0], p[1]\n\t                    );\n\t                    // cp0 of next segment\n\t                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n\t                }\n\t                else {\n\t                    ctx.lineTo(p[0], p[1]);\n\t                }\n\t            }\n\t\n\t            prevIdx = idx;\n\t            idx += dir;\n\t        }\n\t\n\t        return k;\n\t    }\n\t\n\t    function getBoundingBox(points, smoothConstraint) {\n\t        var ptMin = [Infinity, Infinity];\n\t        var ptMax = [-Infinity, -Infinity];\n\t        if (smoothConstraint) {\n\t            for (var i = 0; i < points.length; i++) {\n\t                var pt = points[i];\n\t                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n\t                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n\t                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n\t                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n\t            }\n\t        }\n\t        return {\n\t            min: smoothConstraint ? ptMin : ptMax,\n\t            max: smoothConstraint ? ptMax : ptMin\n\t        };\n\t    }\n\t\n\t    module.exports = {\n\t\n\t        Polyline: Path.extend({\n\t\n\t            type: 'ec-polyline',\n\t\n\t            shape: {\n\t                points: [],\n\t\n\t                smooth: 0,\n\t\n\t                smoothConstraint: true,\n\t\n\t                smoothMonotone: null,\n\t\n\t                connectNulls: false\n\t            },\n\t\n\t            style: {\n\t                fill: null,\n\t\n\t                stroke: '#000'\n\t            },\n\t\n\t            buildPath: function (ctx, shape) {\n\t                var points = shape.points;\n\t\n\t                var i = 0;\n\t                var len = points.length;\n\t\n\t                var result = getBoundingBox(points, shape.smoothConstraint);\n\t\n\t                if (shape.connectNulls) {\n\t                    // Must remove first and last null values avoid draw error in polygon\n\t                    for (; len > 0; len--) {\n\t                        if (!isPointNull(points[len - 1])) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    for (; i < len; i++) {\n\t                        if (!isPointNull(points[i])) {\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                while (i < len) {\n\t                    i += drawSegment(\n\t                        ctx, points, i, len, len,\n\t                        1, result.min, result.max, shape.smooth,\n\t                        shape.smoothMonotone, shape.connectNulls\n\t                    ) + 1;\n\t                }\n\t            }\n\t        }),\n\t\n\t        Polygon: Path.extend({\n\t\n\t            type: 'ec-polygon',\n\t\n\t            shape: {\n\t                points: [],\n\t\n\t                // Offset between stacked base points and points\n\t                stackedOnPoints: [],\n\t\n\t                smooth: 0,\n\t\n\t                stackedOnSmooth: 0,\n\t\n\t                smoothConstraint: true,\n\t\n\t                smoothMonotone: null,\n\t\n\t                connectNulls: false\n\t            },\n\t\n\t            buildPath: function (ctx, shape) {\n\t                var points = shape.points;\n\t                var stackedOnPoints = shape.stackedOnPoints;\n\t\n\t                var i = 0;\n\t                var len = points.length;\n\t                var smoothMonotone = shape.smoothMonotone;\n\t                var bbox = getBoundingBox(points, shape.smoothConstraint);\n\t                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\t\n\t                if (shape.connectNulls) {\n\t                    // Must remove first and last null values avoid draw error in polygon\n\t                    for (; len > 0; len--) {\n\t                        if (!isPointNull(points[len - 1])) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    for (; i < len; i++) {\n\t                        if (!isPointNull(points[i])) {\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                while (i < len) {\n\t                    var k = drawSegment(\n\t                        ctx, points, i, len, len,\n\t                        1, bbox.min, bbox.max, shape.smooth,\n\t                        smoothMonotone, shape.connectNulls\n\t                    );\n\t                    drawSegment(\n\t                        ctx, stackedOnPoints, i + k - 1, k, len,\n\t                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n\t                        smoothMonotone, shape.connectNulls\n\t                    );\n\t                    i += k + 1;\n\t\n\t                    ctx.closePath();\n\t                }\n\t            }\n\t        })\n\t    };\n\n\n/***/ },\n/* 591 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\t\n\t        // Encoding visual for all series include which is filtered for legend drawing\n\t        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n\t            var data = seriesModel.getData();\n\t\n\t            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n\t            var symbolSize = seriesModel.get('symbolSize');\n\t\n\t            data.setVisual({\n\t                legendSymbol: legendSymbol || symbolType,\n\t                symbol: symbolType,\n\t                symbolSize: symbolSize\n\t            });\n\t\n\t            // Only visible series has each data be visual encoded\n\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\n\t                if (typeof symbolSize === 'function') {\n\t                    data.each(function (idx) {\n\t                        var rawValue = seriesModel.getRawValue(idx);\n\t                        // FIXME\n\t                        var params = seriesModel.getDataParams(idx);\n\t                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n\t                    });\n\t                }\n\t                data.each(function (idx) {\n\t                    var itemModel = data.getItemModel(idx);\n\t                    var itemSymbolType = itemModel.getShallow('symbol', true);\n\t                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n\t                    // If has item symbol\n\t                    if (itemSymbolType != null) {\n\t                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n\t                    }\n\t                    if (itemSymbolSize != null) {\n\t                        // PENDING Transform symbolSize ?\n\t                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n\t                    }\n\t                });\n\t            }\n\t        });\n\t    };\n\n\n/***/ },\n/* 592 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    module.exports = function (seriesType, ecModel) {\n\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\t            var data = seriesModel.getData();\n\t            var coordSys = seriesModel.coordinateSystem;\n\t\n\t            if (coordSys) {\n\t                var dims = coordSys.dimensions;\n\t\n\t                if (coordSys.type === 'singleAxis') {\n\t                    data.each(dims[0], function (x, idx) {\n\t                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n\t                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n\t                    });\n\t                }\n\t                else {\n\t                    data.each(dims, function (x, y, idx) {\n\t                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n\t                        data.setItemLayout(\n\t                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n\t                        );\n\t                    }, true);\n\t                }\n\t            }\n\t        });\n\t    };\n\n\n/***/ },\n/* 593 */\n/***/ function(module, exports) {\n\n\t\n\t    var samplers = {\n\t        average: function (frame) {\n\t            var sum = 0;\n\t            var count = 0;\n\t            for (var i = 0; i < frame.length; i++) {\n\t                if (!isNaN(frame[i])) {\n\t                    sum += frame[i];\n\t                    count++;\n\t                }\n\t            }\n\t            // Return NaN if count is 0\n\t            return count === 0 ? NaN : sum / count;\n\t        },\n\t        sum: function (frame) {\n\t            var sum = 0;\n\t            for (var i = 0; i < frame.length; i++) {\n\t                // Ignore NaN\n\t                sum += frame[i] || 0;\n\t            }\n\t            return sum;\n\t        },\n\t        max: function (frame) {\n\t            var max = -Infinity;\n\t            for (var i = 0; i < frame.length; i++) {\n\t                frame[i] > max && (max = frame[i]);\n\t            }\n\t            return max;\n\t        },\n\t        min: function (frame) {\n\t            var min = Infinity;\n\t            for (var i = 0; i < frame.length; i++) {\n\t                frame[i] < min && (min = frame[i]);\n\t            }\n\t            return min;\n\t        },\n\t        // TODO\n\t        // Median\n\t        nearest: function (frame) {\n\t            return frame[0];\n\t        }\n\t    };\n\t\n\t    var indexSampler = function (frame, value) {\n\t        return Math.round(frame.length / 2);\n\t    };\n\t    module.exports = function (seriesType, ecModel, api) {\n\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\t            var data = seriesModel.getData();\n\t            var sampling = seriesModel.get('sampling');\n\t            var coordSys = seriesModel.coordinateSystem;\n\t            // Only cartesian2d support down sampling\n\t            if (coordSys.type === 'cartesian2d' && sampling) {\n\t                var baseAxis = coordSys.getBaseAxis();\n\t                var valueAxis = coordSys.getOtherAxis(baseAxis);\n\t                var extent = baseAxis.getExtent();\n\t                // Coordinste system has been resized\n\t                var size = extent[1] - extent[0];\n\t                var rate = Math.round(data.count() / size);\n\t                if (rate > 1) {\n\t                    var sampler;\n\t                    if (typeof sampling === 'string') {\n\t                        sampler = samplers[sampling];\n\t                    }\n\t                    else if (typeof sampling === 'function') {\n\t                        sampler = sampling;\n\t                    }\n\t                    if (sampler) {\n\t                        data = data.downSample(\n\t                            valueAxis.dim, 1 / rate, sampler, indexSampler\n\t                        );\n\t                        seriesModel.setData(data);\n\t                    }\n\t                }\n\t            }\n\t        }, this);\n\t    };\n\n\n/***/ },\n/* 594 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var graphic = __webpack_require__(525);\n\t    var zrUtil = __webpack_require__(483);\n\t    var echarts = __webpack_require__(484);\n\t\n\t    __webpack_require__(595);\n\t\n\t    __webpack_require__(613);\n\t\n\t    // Grid view\n\t    echarts.extendComponentView({\n\t\n\t        type: 'grid',\n\t\n\t        render: function (gridModel, ecModel) {\n\t            this.group.removeAll();\n\t            if (gridModel.get('show')) {\n\t                this.group.add(new graphic.Rect({\n\t                    shape: gridModel.coordinateSystem.getRect(),\n\t                    style: zrUtil.defaults({\n\t                        fill: gridModel.get('backgroundColor')\n\t                    }, gridModel.getItemStyle()),\n\t                    silent: true,\n\t                    z2: -1\n\t                }));\n\t            }\n\t        }\n\t\n\t    });\n\t\n\t    echarts.registerPreprocessor(function (option) {\n\t        // Only create grid when need\n\t        if (option.xAxis && option.yAxis && !option.grid) {\n\t            option.grid = {};\n\t        }\n\t    });\n\n\n/***/ },\n/* 595 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Grid is a region which contains at most 4 cartesian systems\n\t *\n\t * TODO Default cartesian\n\t */\n\tvar factory = exports;\n\t\n\t    var layout = __webpack_require__(503);\n\t    var axisHelper = __webpack_require__(596);\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var Cartesian2D = __webpack_require__(602);\n\t    var Axis2D = __webpack_require__(604);\n\t\n\t    var each = zrUtil.each;\n\t\n\t    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n\t    var niceScaleExtent = axisHelper.niceScaleExtent;\n\t\n\t    // 依赖 GridModel, AxisModel 做预处理\n\t    __webpack_require__(607);\n\t\n\t    /**\n\t     * Check if the axis is used in the specified grid\n\t     * @inner\n\t     */\n\t    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n\t        return axisModel.findGridModel() === gridModel;\n\t    }\n\t\n\t    function getLabelUnionRect(axis) {\n\t        var axisModel = axis.model;\n\t        var labels = axisModel.getFormattedLabels();\n\t        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n\t        var rect;\n\t        var step = 1;\n\t        var labelCount = labels.length;\n\t        if (labelCount > 40) {\n\t            // Simple optimization for large amount of labels\n\t            step = Math.ceil(labelCount / 40);\n\t        }\n\t        for (var i = 0; i < labelCount; i += step) {\n\t            if (!axis.isLabelIgnored(i)) {\n\t                var singleRect = textStyleModel.getTextRect(labels[i]);\n\t                // FIXME consider label rotate\n\t                rect ? rect.union(singleRect) : (rect = singleRect);\n\t            }\n\t        }\n\t        return rect;\n\t    }\n\t\n\t    function Grid(gridModel, ecModel, api) {\n\t        /**\n\t         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n\t         * @private\n\t         */\n\t        this._coordsMap = {};\n\t\n\t        /**\n\t         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n\t         * @private\n\t         */\n\t        this._coordsList = [];\n\t\n\t        /**\n\t         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n\t         * @private\n\t         */\n\t        this._axesMap = {};\n\t\n\t        /**\n\t         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n\t         * @private\n\t         */\n\t        this._axesList = [];\n\t\n\t        this._initCartesian(gridModel, ecModel, api);\n\t\n\t        this._model = gridModel;\n\t    }\n\t\n\t    var gridProto = Grid.prototype;\n\t\n\t    gridProto.type = 'grid';\n\t\n\t    gridProto.getRect = function () {\n\t        return this._rect;\n\t    };\n\t\n\t    gridProto.update = function (ecModel, api) {\n\t\n\t        var axesMap = this._axesMap;\n\t\n\t        this._updateScale(ecModel, this._model);\n\t\n\t        function ifAxisCanNotOnZero(otherAxisDim) {\n\t            var axes = axesMap[otherAxisDim];\n\t            for (var idx in axes) {\n\t                if (axes.hasOwnProperty(idx)) {\n\t                    var axis = axes[idx];\n\t                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        each(axesMap.x, function (xAxis) {\n\t            niceScaleExtent(xAxis, xAxis.model);\n\t        });\n\t        each(axesMap.y, function (yAxis) {\n\t            niceScaleExtent(yAxis, yAxis.model);\n\t        });\n\t        // Fix configuration\n\t        each(axesMap.x, function (xAxis) {\n\t            // onZero can not be enabled in these two situations\n\t            // 1. When any other axis is a category axis\n\t            // 2. When any other axis not across 0 point\n\t            if (ifAxisCanNotOnZero('y')) {\n\t                xAxis.onZero = false;\n\t            }\n\t        });\n\t        each(axesMap.y, function (yAxis) {\n\t            if (ifAxisCanNotOnZero('x')) {\n\t                yAxis.onZero = false;\n\t            }\n\t        });\n\t\n\t        // Resize again if containLabel is enabled\n\t        // FIXME It may cause getting wrong grid size in data processing stage\n\t        this.resize(this._model, api);\n\t    };\n\t\n\t    /**\n\t     * Resize the grid\n\t     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n\t     * @param {module:echarts/ExtensionAPI} api\n\t     */\n\t    gridProto.resize = function (gridModel, api) {\n\t\n\t        var gridRect = layout.getLayoutRect(\n\t            gridModel.getBoxLayoutParams(), {\n\t                width: api.getWidth(),\n\t                height: api.getHeight()\n\t            });\n\t\n\t        this._rect = gridRect;\n\t\n\t        var axesList = this._axesList;\n\t\n\t        adjustAxes();\n\t\n\t        // Minus label size\n\t        if (gridModel.get('containLabel')) {\n\t            each(axesList, function (axis) {\n\t                if (!axis.model.get('axisLabel.inside')) {\n\t                    var labelUnionRect = getLabelUnionRect(axis);\n\t                    if (labelUnionRect) {\n\t                        var dim = axis.isHorizontal() ? 'height' : 'width';\n\t                        var margin = axis.model.get('axisLabel.margin');\n\t                        gridRect[dim] -= labelUnionRect[dim] + margin;\n\t                        if (axis.position === 'top') {\n\t                            gridRect.y += labelUnionRect.height + margin;\n\t                        }\n\t                        else if (axis.position === 'left')  {\n\t                            gridRect.x += labelUnionRect.width + margin;\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t\n\t            adjustAxes();\n\t        }\n\t\n\t        function adjustAxes() {\n\t            each(axesList, function (axis) {\n\t                var isHorizontal = axis.isHorizontal();\n\t                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n\t                var idx = axis.inverse ? 1 : 0;\n\t                axis.setExtent(extent[idx], extent[1 - idx]);\n\t                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n\t            });\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @param {string} axisType\n\t     * @param {ndumber} [axisIndex]\n\t     */\n\t    gridProto.getAxis = function (axisType, axisIndex) {\n\t        var axesMapOnDim = this._axesMap[axisType];\n\t        if (axesMapOnDim != null) {\n\t            if (axisIndex == null) {\n\t                // Find first axis\n\t                for (var name in axesMapOnDim) {\n\t                    if (axesMapOnDim.hasOwnProperty(name)) {\n\t                        return axesMapOnDim[name];\n\t                    }\n\t                }\n\t            }\n\t            return axesMapOnDim[axisIndex];\n\t        }\n\t    };\n\t\n\t    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n\t        if (xAxisIndex != null && yAxisIndex != null) {\n\t            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n\t            return this._coordsMap[key];\n\t        }\n\t        else {\n\t            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\t            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n\t                if (coordList[i].getAxis('x').index === xAxisIndex\n\t                    || coordList[i].getAxis('y').index === yAxisIndex\n\t                ) {\n\t                    return coordList[i];\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @implements\n\t     * see {module:echarts/CoodinateSystem}\n\t     */\n\t    gridProto.convertToPixel = function (ecModel, finder, value) {\n\t        var target = this._findConvertTarget(ecModel, finder);\n\t\n\t        return target.cartesian\n\t            ? target.cartesian.dataToPoint(value)\n\t            : target.axis\n\t            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n\t            : null;\n\t    };\n\t\n\t    /**\n\t     * @implements\n\t     * see {module:echarts/CoodinateSystem}\n\t     */\n\t    gridProto.convertFromPixel = function (ecModel, finder, value) {\n\t        var target = this._findConvertTarget(ecModel, finder);\n\t\n\t        return target.cartesian\n\t            ? target.cartesian.pointToData(value)\n\t            : target.axis\n\t            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n\t            : null;\n\t    };\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    gridProto._findConvertTarget = function (ecModel, finder) {\n\t        var seriesModel = finder.seriesModel;\n\t        var xAxisModel = finder.xAxisModel\n\t            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n\t        var yAxisModel = finder.yAxisModel\n\t            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n\t        var gridModel = finder.gridModel;\n\t        var coordsList = this._coordsList;\n\t        var cartesian;\n\t        var axis;\n\t\n\t        if (seriesModel) {\n\t            cartesian = seriesModel.coordinateSystem;\n\t            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n\t        }\n\t        else if (xAxisModel && yAxisModel) {\n\t            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n\t        }\n\t        else if (xAxisModel) {\n\t            axis = this.getAxis('x', xAxisModel.componentIndex);\n\t        }\n\t        else if (yAxisModel) {\n\t            axis = this.getAxis('y', yAxisModel.componentIndex);\n\t        }\n\t        // Lowest priority.\n\t        else if (gridModel) {\n\t            var grid = gridModel.coordinateSystem;\n\t            if (grid === this) {\n\t                cartesian = this._coordsList[0];\n\t            }\n\t        }\n\t\n\t        return {cartesian: cartesian, axis: axis};\n\t    };\n\t\n\t    /**\n\t     * @implements\n\t     * see {module:echarts/CoodinateSystem}\n\t     */\n\t    gridProto.containPoint = function (point) {\n\t        var coord = this._coordsList[0];\n\t        if (coord) {\n\t            return coord.containPoint(point);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Initialize cartesian coordinate systems\n\t     * @private\n\t     */\n\t    gridProto._initCartesian = function (gridModel, ecModel, api) {\n\t        var axisPositionUsed = {\n\t            left: false,\n\t            right: false,\n\t            top: false,\n\t            bottom: false\n\t        };\n\t\n\t        var axesMap = {\n\t            x: {},\n\t            y: {}\n\t        };\n\t        var axesCount = {\n\t            x: 0,\n\t            y: 0\n\t        };\n\t\n\t        /// Create axis\n\t        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n\t        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\t\n\t        if (!axesCount.x || !axesCount.y) {\n\t            // Roll back when there no either x or y axis\n\t            this._axesMap = {};\n\t            this._axesList = [];\n\t            return;\n\t        }\n\t\n\t        this._axesMap = axesMap;\n\t\n\t        /// Create cartesian2d\n\t        each(axesMap.x, function (xAxis, xAxisIndex) {\n\t            each(axesMap.y, function (yAxis, yAxisIndex) {\n\t                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n\t                var cartesian = new Cartesian2D(key);\n\t\n\t                cartesian.grid = this;\n\t\n\t                this._coordsMap[key] = cartesian;\n\t                this._coordsList.push(cartesian);\n\t\n\t                cartesian.addAxis(xAxis);\n\t                cartesian.addAxis(yAxis);\n\t            }, this);\n\t        }, this);\n\t\n\t        function createAxisCreator(axisType) {\n\t            return function (axisModel, idx) {\n\t                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n\t                    return;\n\t                }\n\t\n\t                var axisPosition = axisModel.get('position');\n\t                if (axisType === 'x') {\n\t                    // Fix position\n\t                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n\t                        // Default bottom of X\n\t                        axisPosition = 'bottom';\n\t                        if (axisPositionUsed[axisPosition]) {\n\t                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                    // Fix position\n\t                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n\t                        // Default left of Y\n\t                        axisPosition = 'left';\n\t                        if (axisPositionUsed[axisPosition]) {\n\t                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n\t                        }\n\t                    }\n\t                }\n\t                axisPositionUsed[axisPosition] = true;\n\t\n\t                var axis = new Axis2D(\n\t                    axisType, axisHelper.createScaleByModel(axisModel),\n\t                    [0, 0],\n\t                    axisModel.get('type'),\n\t                    axisPosition\n\t                );\n\t\n\t                var isCategory = axis.type === 'category';\n\t                axis.onBand = isCategory && axisModel.get('boundaryGap');\n\t                axis.inverse = axisModel.get('inverse');\n\t\n\t                axis.onZero = axisModel.get('axisLine.onZero');\n\t\n\t                // Inject axis into axisModel\n\t                axisModel.axis = axis;\n\t\n\t                // Inject axisModel into axis\n\t                axis.model = axisModel;\n\t\n\t                // Inject grid info axis\n\t                axis.grid = this;\n\t\n\t                // Index of axis, can be used as key\n\t                axis.index = idx;\n\t\n\t                this._axesList.push(axis);\n\t\n\t                axesMap[axisType][idx] = axis;\n\t                axesCount[axisType]++;\n\t            };\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Update cartesian properties from series\n\t     * @param  {module:echarts/model/Option} option\n\t     * @private\n\t     */\n\t    gridProto._updateScale = function (ecModel, gridModel) {\n\t        // Reset scale\n\t        zrUtil.each(this._axesList, function (axis) {\n\t            axis.scale.setExtent(Infinity, -Infinity);\n\t        });\n\t        ecModel.eachSeries(function (seriesModel) {\n\t            if (isCartesian2D(seriesModel)) {\n\t                var axesModels = findAxesModels(seriesModel, ecModel);\n\t                var xAxisModel = axesModels[0];\n\t                var yAxisModel = axesModels[1];\n\t\n\t                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n\t                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n\t                 ) {\n\t                    return;\n\t                }\n\t\n\t                var cartesian = this.getCartesian(\n\t                    xAxisModel.componentIndex, yAxisModel.componentIndex\n\t                );\n\t                var data = seriesModel.getData();\n\t                var xAxis = cartesian.getAxis('x');\n\t                var yAxis = cartesian.getAxis('y');\n\t\n\t                if (data.type === 'list') {\n\t                    unionExtent(data, xAxis, seriesModel);\n\t                    unionExtent(data, yAxis, seriesModel);\n\t                }\n\t            }\n\t        }, this);\n\t\n\t        function unionExtent(data, axis, seriesModel) {\n\t            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n\t                axis.scale.unionExtent(data.getDataExtent(\n\t                    dim, axis.scale.type !== 'ordinal'\n\t                ));\n\t            });\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function updateAxisTransfrom(axis, coordBase) {\n\t        var axisExtent = axis.getExtent();\n\t        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\t\n\t        // Fast transform\n\t        axis.toGlobalCoord = axis.dim === 'x'\n\t            ? function (coord) {\n\t                return coord + coordBase;\n\t            }\n\t            : function (coord) {\n\t                return axisExtentSum - coord + coordBase;\n\t            };\n\t        axis.toLocalCoord = axis.dim === 'x'\n\t            ? function (coord) {\n\t                return coord - coordBase;\n\t            }\n\t            : function (coord) {\n\t                return axisExtentSum - coord + coordBase;\n\t            };\n\t    }\n\t\n\t    var axesTypes = ['xAxis', 'yAxis'];\n\t    /**\n\t     * @inner\n\t     */\n\t    function findAxesModels(seriesModel, ecModel) {\n\t        return zrUtil.map(axesTypes, function (axisType) {\n\t            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\t\n\t            if (__DEV__) {\n\t                if (!axisModel) {\n\t                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n\t                        seriesModel.get(axisType + 'Index'),\n\t                        seriesModel.get(axisType + 'Id'),\n\t                        0\n\t                    ) + '\" not found');\n\t                }\n\t            }\n\t            return axisModel;\n\t        });\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function isCartesian2D(seriesModel) {\n\t        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n\t    }\n\t\n\t    Grid.create = function (ecModel, api) {\n\t        var grids = [];\n\t        ecModel.eachComponent('grid', function (gridModel, idx) {\n\t            var grid = new Grid(gridModel, ecModel, api);\n\t            grid.name = 'grid_' + idx;\n\t            grid.resize(gridModel, api);\n\t\n\t            gridModel.coordinateSystem = grid;\n\t\n\t            grids.push(grid);\n\t        });\n\t\n\t        // Inject the coordinateSystems into seriesModel\n\t        ecModel.eachSeries(function (seriesModel) {\n\t            if (!isCartesian2D(seriesModel)) {\n\t                return;\n\t            }\n\t\n\t            var axesModels = findAxesModels(seriesModel, ecModel);\n\t            var xAxisModel = axesModels[0];\n\t            var yAxisModel = axesModels[1];\n\t\n\t            var gridModel = xAxisModel.findGridModel();\n\t\n\t            if (__DEV__) {\n\t                if (!gridModel) {\n\t                    throw new Error(\n\t                        'Grid \"' + zrUtil.retrieve(\n\t                            xAxisModel.get('gridIndex'),\n\t                            xAxisModel.get('gridId'),\n\t                            0\n\t                        ) + '\" not found'\n\t                    );\n\t                }\n\t                if (xAxisModel.findGridModel() !== yAxisModel.findGridModel()) {\n\t                    throw new Error('xAxis and yAxis must use the same grid');\n\t                }\n\t            }\n\t\n\t            var grid = gridModel.coordinateSystem;\n\t\n\t            seriesModel.coordinateSystem = grid.getCartesian(\n\t                xAxisModel.componentIndex, yAxisModel.componentIndex\n\t            );\n\t        });\n\t\n\t        return grids;\n\t    };\n\t\n\t    // For deciding which dimensions to use when creating list data\n\t    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\t\n\t    __webpack_require__(508).register('cartesian2d', Grid);\n\t\n\t    module.exports = Grid;\n\n\n/***/ },\n/* 596 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var OrdinalScale = __webpack_require__(597);\n\t    var IntervalScale = __webpack_require__(599);\n\t    __webpack_require__(600);\n\t    __webpack_require__(601);\n\t    var Scale = __webpack_require__(598);\n\t\n\t    var numberUtil = __webpack_require__(489);\n\t    var zrUtil = __webpack_require__(483);\n\t    var textContain = __webpack_require__(490);\n\t    var axisHelper = {};\n\t\n\t    /**\n\t     * Get axis scale extent before niced.\n\t     */\n\t    axisHelper.getScaleExtent = function (axis, model) {\n\t        var scale = axis.scale;\n\t        var originalExtent = scale.getExtent();\n\t        var span = originalExtent[1] - originalExtent[0];\n\t        if (scale.type === 'ordinal') {\n\t            // If series has no data, scale extent may be wrong\n\t            if (!isFinite(span)) {\n\t                return [0, 0];\n\t            }\n\t            else {\n\t                return originalExtent;\n\t            }\n\t        }\n\t        var min = model.getMin ? model.getMin() : model.get('min');\n\t        var max = model.getMax ? model.getMax() : model.get('max');\n\t        var crossZero = model.getNeedCrossZero\n\t            ? model.getNeedCrossZero() : !model.get('scale');\n\t        var boundaryGap = model.get('boundaryGap');\n\t        if (!zrUtil.isArray(boundaryGap)) {\n\t            boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n\t        }\n\t        boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n\t        boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n\t        var fixMin = true;\n\t        var fixMax = true;\n\t        // Add boundary gap\n\t        if (min == null) {\n\t            min = originalExtent[0] - boundaryGap[0] * span;\n\t            fixMin = false;\n\t        }\n\t        if (max == null) {\n\t            max = originalExtent[1] + boundaryGap[1] * span;\n\t            fixMax = false;\n\t        }\n\t        if (min === 'dataMin') {\n\t            min = originalExtent[0];\n\t        }\n\t        if (max === 'dataMax') {\n\t            max = originalExtent[1];\n\t        }\n\t        // Evaluate if axis needs cross zero\n\t        if (crossZero) {\n\t            // Axis is over zero and min is not set\n\t            if (min > 0 && max > 0 && !fixMin) {\n\t                min = 0;\n\t            }\n\t            // Axis is under zero and max is not set\n\t            if (min < 0 && max < 0 && !fixMax) {\n\t                max = 0;\n\t            }\n\t        }\n\t        return [min, max];\n\t    };\n\t\n\t    axisHelper.niceScaleExtent = function (axis, model) {\n\t        var scale = axis.scale;\n\t        var extent = axisHelper.getScaleExtent(axis, model);\n\t        var fixMin = (model.getMin ? model.getMin() : model.get('min')) != null;\n\t        var fixMax = (model.getMax ? model.getMax() : model.get('max')) != null;\n\t        var splitNumber = model.get('splitNumber');\n\t\n\t        if (scale.type === 'log') {\n\t            scale.base = model.get('logBase');\n\t        }\n\t\n\t        scale.setExtent(extent[0], extent[1]);\n\t        scale.niceExtent(splitNumber, fixMin, fixMax);\n\t\n\t        // Use minInterval to constraint the calculated interval.\n\t        // If calculated interval is less than minInterval. increase the interval quantity until\n\t        // it is larger than minInterval.\n\t        // For example:\n\t        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n\t        //  an integer axis.\n\t        var minInterval = model.get('minInterval');\n\t        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n\t            var interval = scale.getInterval();\n\t            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n\t            // while (interval < minInterval) {\n\t            //     var quantity = numberUtil.quantity(interval);\n\t            //     interval = quantity * 10;\n\t            //     scaleQuantity *= 10;\n\t            // }\n\t            extent = scale.getExtent();\n\t            var origin = (extent[1] + extent[0]) / 2;\n\t            scale.setExtent(\n\t                intervalScale * (extent[0] - origin) + origin,\n\t                intervalScale * (extent[1] - origin) + origin\n\t            );\n\t            scale.niceExtent(splitNumber);\n\t        }\n\t\n\t        // If some one specified the min, max. And the default calculated interval\n\t        // is not good enough. He can specify the interval. It is often appeared\n\t        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n\t        // to be 60.\n\t        // FIXME\n\t        var interval = model.get('interval');\n\t        if (interval != null) {\n\t            scale.setInterval && scale.setInterval(interval);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @param {module:echarts/model/Model} model\n\t     * @param {string} [axisType] Default retrieve from model.type\n\t     * @return {module:echarts/scale/*}\n\t     */\n\t    axisHelper.createScaleByModel = function(model, axisType) {\n\t        axisType = axisType || model.get('type');\n\t        if (axisType) {\n\t            switch (axisType) {\n\t                // Buildin scale\n\t                case 'category':\n\t                    return new OrdinalScale(\n\t                        model.getCategories(), [Infinity, -Infinity]\n\t                    );\n\t                case 'value':\n\t                    return new IntervalScale();\n\t                // Extended scale, like time and log\n\t                default:\n\t                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Check if the axis corss 0\n\t     */\n\t    axisHelper.ifAxisCrossZero = function (axis) {\n\t        var dataExtent = axis.scale.getExtent();\n\t        var min = dataExtent[0];\n\t        var max = dataExtent[1];\n\t        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n\t    };\n\t\n\t    /**\n\t     * @param {Array.<number>} tickCoords In axis self coordinate.\n\t     * @param {Array.<string>} labels\n\t     * @param {string} font\n\t     * @param {boolean} isAxisHorizontal\n\t     * @return {number}\n\t     */\n\t    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n\t        // FIXME\n\t        // 不同角的axis和label，不只是horizontal和vertical.\n\t\n\t        var textSpaceTakenRect;\n\t        var autoLabelInterval = 0;\n\t        var accumulatedLabelInterval = 0;\n\t\n\t        var step = 1;\n\t        if (labels.length > 40) {\n\t            // Simple optimization for large amount of labels\n\t            step = Math.floor(labels.length / 40);\n\t        }\n\t\n\t        for (var i = 0; i < tickCoords.length; i += step) {\n\t            var tickCoord = tickCoords[i];\n\t            var rect = textContain.getBoundingRect(\n\t                labels[i], font, 'center', 'top'\n\t            );\n\t            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n\t            // FIXME Magic number 1.5\n\t            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n\t            if (!textSpaceTakenRect) {\n\t                textSpaceTakenRect = rect.clone();\n\t            }\n\t            // There is no space for current label;\n\t            else if (textSpaceTakenRect.intersect(rect)) {\n\t                accumulatedLabelInterval++;\n\t                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n\t            }\n\t            else {\n\t                textSpaceTakenRect.union(rect);\n\t                // Reset\n\t                accumulatedLabelInterval = 0;\n\t            }\n\t        }\n\t        if (autoLabelInterval === 0 && step > 1) {\n\t            return step;\n\t        }\n\t        return (autoLabelInterval + 1) * step - 1;\n\t    };\n\t\n\t    /**\n\t     * @param {Object} axis\n\t     * @param {Function} labelFormatter\n\t     * @return {Array.<string>}\n\t     */\n\t    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n\t        var scale = axis.scale;\n\t        var labels = scale.getTicksLabels();\n\t        var ticks = scale.getTicks();\n\t        if (typeof labelFormatter === 'string') {\n\t            labelFormatter = (function (tpl) {\n\t                return function (val) {\n\t                    return tpl.replace('{value}', val != null ? val : '');\n\t                };\n\t            })(labelFormatter);\n\t            // Consider empty array\n\t            return zrUtil.map(labels, labelFormatter);\n\t        }\n\t        else if (typeof labelFormatter === 'function') {\n\t            return zrUtil.map(ticks, function (tick, idx) {\n\t                return labelFormatter(\n\t                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n\t                    idx\n\t                );\n\t            }, this);\n\t        }\n\t        else {\n\t            return labels;\n\t        }\n\t    };\n\t\n\t    module.exports = axisHelper;\n\n\n/***/ },\n/* 597 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Linear continuous scale\n\t * @module echarts/coord/scale/Ordinal\n\t *\n\t * http://en.wikipedia.org/wiki/Level_of_measurement\n\t */\n\t\n\t// FIXME only one data\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var Scale = __webpack_require__(598);\n\t\n\t    var scaleProto = Scale.prototype;\n\t\n\t    var OrdinalScale = Scale.extend({\n\t\n\t        type: 'ordinal',\n\t\n\t        init: function (data, extent) {\n\t            this._data = data;\n\t            this._extent = extent || [0, data.length - 1];\n\t        },\n\t\n\t        parse: function (val) {\n\t            return typeof val === 'string'\n\t                ? zrUtil.indexOf(this._data, val)\n\t                // val might be float.\n\t                : Math.round(val);\n\t        },\n\t\n\t        contain: function (rank) {\n\t            rank = this.parse(rank);\n\t            return scaleProto.contain.call(this, rank)\n\t                && this._data[rank] != null;\n\t        },\n\t\n\t        /**\n\t         * Normalize given rank or name to linear [0, 1]\n\t         * @param {number|string} [val]\n\t         * @return {number}\n\t         */\n\t        normalize: function (val) {\n\t            return scaleProto.normalize.call(this, this.parse(val));\n\t        },\n\t\n\t        scale: function (val) {\n\t            return Math.round(scaleProto.scale.call(this, val));\n\t        },\n\t\n\t        /**\n\t         * @return {Array}\n\t         */\n\t        getTicks: function () {\n\t            var ticks = [];\n\t            var extent = this._extent;\n\t            var rank = extent[0];\n\t\n\t            while (rank <= extent[1]) {\n\t                ticks.push(rank);\n\t                rank++;\n\t            }\n\t\n\t            return ticks;\n\t        },\n\t\n\t        /**\n\t         * Get item on rank n\n\t         * @param {number} n\n\t         * @return {string}\n\t         */\n\t        getLabel: function (n) {\n\t            return this._data[n];\n\t        },\n\t\n\t        /**\n\t         * @return {number}\n\t         */\n\t        count: function () {\n\t            return this._extent[1] - this._extent[0] + 1;\n\t        },\n\t\n\t        niceTicks: zrUtil.noop,\n\t        niceExtent: zrUtil.noop\n\t    });\n\t\n\t    /**\n\t     * @return {module:echarts/scale/Time}\n\t     */\n\t    OrdinalScale.create = function () {\n\t        return new OrdinalScale();\n\t    };\n\t\n\t    module.exports = OrdinalScale;\n\n\n/***/ },\n/* 598 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * // Scale class management\n\t * @module echarts/scale/Scale\n\t */\n\t\n\t\n\t    var clazzUtil = __webpack_require__(495);\n\t\n\t    function Scale() {\n\t        /**\n\t         * Extent\n\t         * @type {Array.<number>}\n\t         * @protected\n\t         */\n\t        this._extent = [Infinity, -Infinity];\n\t\n\t        /**\n\t         * Step is calculated in adjustExtent\n\t         * @type {Array.<number>}\n\t         * @protected\n\t         */\n\t        this._interval = 0;\n\t\n\t        this.init && this.init.apply(this, arguments);\n\t    }\n\t\n\t    var scaleProto = Scale.prototype;\n\t\n\t    /**\n\t     * Parse input val to valid inner number.\n\t     * @param {*} val\n\t     * @return {number}\n\t     */\n\t    scaleProto.parse = function (val) {\n\t        // Notice: This would be a trap here, If the implementation\n\t        // of this method depends on extent, and this method is used\n\t        // before extent set (like in dataZoom), it would be wrong.\n\t        // Nevertheless, parse does not depend on extent generally.\n\t        return val;\n\t    };\n\t\n\t    scaleProto.contain = function (val) {\n\t        var extent = this._extent;\n\t        return val >= extent[0] && val <= extent[1];\n\t    };\n\t\n\t    /**\n\t     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n\t     * @param {number} val\n\t     * @return {number}\n\t     */\n\t    scaleProto.normalize = function (val) {\n\t        var extent = this._extent;\n\t        if (extent[1] === extent[0]) {\n\t            return 0.5;\n\t        }\n\t        return (val - extent[0]) / (extent[1] - extent[0]);\n\t    };\n\t\n\t    /**\n\t     * Scale normalized value\n\t     * @param {number} val\n\t     * @return {number}\n\t     */\n\t    scaleProto.scale = function (val) {\n\t        var extent = this._extent;\n\t        return val * (extent[1] - extent[0]) + extent[0];\n\t    };\n\t\n\t    /**\n\t     * Set extent from data\n\t     * @param {Array.<number>} other\n\t     */\n\t    scaleProto.unionExtent = function (other) {\n\t        var extent = this._extent;\n\t        other[0] < extent[0] && (extent[0] = other[0]);\n\t        other[1] > extent[1] && (extent[1] = other[1]);\n\t        // not setExtent because in log axis it may transformed to power\n\t        // this.setExtent(extent[0], extent[1]);\n\t    };\n\t\n\t    /**\n\t     * Get extent\n\t     * @return {Array.<number>}\n\t     */\n\t    scaleProto.getExtent = function () {\n\t        return this._extent.slice();\n\t    };\n\t\n\t    /**\n\t     * Set extent\n\t     * @param {number} start\n\t     * @param {number} end\n\t     */\n\t    scaleProto.setExtent = function (start, end) {\n\t        var thisExtent = this._extent;\n\t        if (!isNaN(start)) {\n\t            thisExtent[0] = start;\n\t        }\n\t        if (!isNaN(end)) {\n\t            thisExtent[1] = end;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @return {Array.<string>}\n\t     */\n\t    scaleProto.getTicksLabels = function () {\n\t        var labels = [];\n\t        var ticks = this.getTicks();\n\t        for (var i = 0; i < ticks.length; i++) {\n\t            labels.push(this.getLabel(ticks[i]));\n\t        }\n\t        return labels;\n\t    };\n\t\n\t    clazzUtil.enableClassExtend(Scale);\n\t    clazzUtil.enableClassManagement(Scale, {\n\t        registerWhenExtend: true\n\t    });\n\t\n\t    module.exports = Scale;\n\n\n/***/ },\n/* 599 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Interval scale\n\t * @module echarts/scale/Interval\n\t */\n\t\n\t\n\t\n\t    var numberUtil = __webpack_require__(489);\n\t    var formatUtil = __webpack_require__(488);\n\t    var Scale = __webpack_require__(598);\n\t\n\t    var mathFloor = Math.floor;\n\t    var mathCeil = Math.ceil;\n\t\n\t    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n\t    var roundingErrorFix = numberUtil.round;\n\t    /**\n\t     * @alias module:echarts/coord/scale/Interval\n\t     * @constructor\n\t     */\n\t    var IntervalScale = Scale.extend({\n\t\n\t        type: 'interval',\n\t\n\t        _interval: 0,\n\t\n\t        setExtent: function (start, end) {\n\t            var thisExtent = this._extent;\n\t            //start,end may be a Number like '25',so...\n\t            if (!isNaN(start)) {\n\t                thisExtent[0] = parseFloat(start);\n\t            }\n\t            if (!isNaN(end)) {\n\t                thisExtent[1] = parseFloat(end);\n\t            }\n\t        },\n\t\n\t        unionExtent: function (other) {\n\t            var extent = this._extent;\n\t            other[0] < extent[0] && (extent[0] = other[0]);\n\t            other[1] > extent[1] && (extent[1] = other[1]);\n\t\n\t            // unionExtent may called by it's sub classes\n\t            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n\t        },\n\t        /**\n\t         * Get interval\n\t         */\n\t        getInterval: function () {\n\t            if (!this._interval) {\n\t                this.niceTicks();\n\t            }\n\t            return this._interval;\n\t        },\n\t\n\t        /**\n\t         * Set interval\n\t         */\n\t        setInterval: function (interval) {\n\t            this._interval = interval;\n\t            // Dropped auto calculated niceExtent and use user setted extent\n\t            // We assume user wan't to set both interval, min, max to get a better result\n\t            this._niceExtent = this._extent.slice();\n\t        },\n\t\n\t        /**\n\t         * @return {Array.<number>}\n\t         */\n\t        getTicks: function () {\n\t            if (!this._interval) {\n\t                this.niceTicks();\n\t            }\n\t            var interval = this._interval;\n\t            var extent = this._extent;\n\t            var ticks = [];\n\t\n\t            // Consider this case: using dataZoom toolbox, zoom and zoom.\n\t            var safeLimit = 10000;\n\t\n\t            if (interval) {\n\t                var niceExtent = this._niceExtent;\n\t                var precision = getPrecisionSafe(interval) + 2;\n\t\n\t                if (extent[0] < niceExtent[0]) {\n\t                    ticks.push(extent[0]);\n\t                }\n\t                var tick = niceExtent[0];\n\t\n\t                while (tick <= niceExtent[1]) {\n\t                    ticks.push(tick);\n\t                    // Avoid rounding error\n\t                    tick = roundingErrorFix(tick + interval, precision);\n\t                    if (ticks.length > safeLimit) {\n\t                        return [];\n\t                    }\n\t                }\n\t                // Consider this case: the last item of ticks is smaller\n\t                // than niceExtent[1] and niceExtent[1] === extent[1].\n\t                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n\t                    ticks.push(extent[1]);\n\t                }\n\t            }\n\t\n\t            return ticks;\n\t        },\n\t\n\t        /**\n\t         * @return {Array.<string>}\n\t         */\n\t        getTicksLabels: function () {\n\t            var labels = [];\n\t            var ticks = this.getTicks();\n\t            for (var i = 0; i < ticks.length; i++) {\n\t                labels.push(this.getLabel(ticks[i]));\n\t            }\n\t            return labels;\n\t        },\n\t\n\t        /**\n\t         * @param {number} n\n\t         * @return {number}\n\t         */\n\t        getLabel: function (data) {\n\t            return formatUtil.addCommas(data);\n\t        },\n\t\n\t        /**\n\t         * Update interval and extent of intervals for nice ticks\n\t         *\n\t         * @param {number} [splitNumber = 5] Desired number of ticks\n\t         */\n\t        niceTicks: function (splitNumber) {\n\t            splitNumber = splitNumber || 5;\n\t            var extent = this._extent;\n\t            var span = extent[1] - extent[0];\n\t            if (!isFinite(span)) {\n\t                return;\n\t            }\n\t            // User may set axis min 0 and data are all negative\n\t            // FIXME If it needs to reverse ?\n\t            if (span < 0) {\n\t                span = -span;\n\t                extent.reverse();\n\t            }\n\t\n\t            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n\t            // var niceSpan = numberUtil.nice(span, false);\n\t            var step = roundingErrorFix(\n\t                numberUtil.nice(span / splitNumber, true),\n\t                Math.max(\n\t                    getPrecisionSafe(extent[0]),\n\t                    getPrecisionSafe(extent[1])\n\t                // extent may be [0, 1], and step should have 1 more digits.\n\t                // To make it safe we add 2 more digits\n\t                ) + 2\n\t            );\n\t\n\t            var precision = getPrecisionSafe(step) + 2;\n\t            // Niced extent inside original extent\n\t            var niceExtent = [\n\t                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n\t                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n\t            ];\n\t\n\t            this._interval = step;\n\t            this._niceExtent = niceExtent;\n\t        },\n\t\n\t        /**\n\t         * Nice extent.\n\t         * @param {number} [splitNumber = 5] Given approx tick number\n\t         * @param {boolean} [fixMin=false]\n\t         * @param {boolean} [fixMax=false]\n\t         */\n\t        niceExtent: function (splitNumber, fixMin, fixMax) {\n\t            var extent = this._extent;\n\t            // If extent start and end are same, expand them\n\t            if (extent[0] === extent[1]) {\n\t                if (extent[0] !== 0) {\n\t                    // Expand extent\n\t                    var expandSize = extent[0];\n\t                    // In the fowllowing case\n\t                    //      Axis has been fixed max 100\n\t                    //      Plus data are all 100 and axis extent are [100, 100].\n\t                    // Extend to the both side will cause expanded max is larger than fixed max.\n\t                    // So only expand to the smaller side.\n\t                    if (!fixMax) {\n\t                        extent[1] += expandSize / 2;\n\t                        extent[0] -= expandSize / 2;\n\t                    }\n\t                    else {\n\t                        extent[0] -= expandSize / 2;\n\t                    }\n\t                }\n\t                else {\n\t                    extent[1] = 1;\n\t                }\n\t            }\n\t            var span = extent[1] - extent[0];\n\t            // If there are no data and extent are [Infinity, -Infinity]\n\t            if (!isFinite(span)) {\n\t                extent[0] = 0;\n\t                extent[1] = 1;\n\t            }\n\t\n\t            this.niceTicks(splitNumber);\n\t\n\t            // var extent = this._extent;\n\t            var interval = this._interval;\n\t\n\t            if (!fixMin) {\n\t                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n\t            }\n\t            if (!fixMax) {\n\t                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n\t            }\n\t        }\n\t    });\n\t\n\t    /**\n\t     * @return {module:echarts/scale/Time}\n\t     */\n\t    IntervalScale.create = function () {\n\t        return new IntervalScale();\n\t    };\n\t\n\t    module.exports = IntervalScale;\n\t\n\n\n/***/ },\n/* 600 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Interval scale\n\t * @module echarts/coord/scale/Time\n\t */\n\t\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var numberUtil = __webpack_require__(489);\n\t    var formatUtil = __webpack_require__(488);\n\t\n\t    var IntervalScale = __webpack_require__(599);\n\t\n\t    var intervalScaleProto = IntervalScale.prototype;\n\t\n\t    var mathCeil = Math.ceil;\n\t    var mathFloor = Math.floor;\n\t    var ONE_SECOND = 1000;\n\t    var ONE_MINUTE = ONE_SECOND * 60;\n\t    var ONE_HOUR = ONE_MINUTE * 60;\n\t    var ONE_DAY = ONE_HOUR * 24;\n\t\n\t    // FIXME 公用？\n\t    var bisect = function (a, x, lo, hi) {\n\t        while (lo < hi) {\n\t            var mid = lo + hi >>> 1;\n\t            if (a[mid][2] < x) {\n\t                lo = mid + 1;\n\t            }\n\t            else {\n\t                hi  = mid;\n\t            }\n\t        }\n\t        return lo;\n\t    };\n\t\n\t    /**\n\t     * @alias module:echarts/coord/scale/Time\n\t     * @constructor\n\t     */\n\t    var TimeScale = IntervalScale.extend({\n\t        type: 'time',\n\t\n\t        // Overwrite\n\t        getLabel: function (val) {\n\t            var stepLvl = this._stepLvl;\n\t\n\t            var date = new Date(val);\n\t\n\t            return formatUtil.formatTime(stepLvl[0], date);\n\t        },\n\t\n\t        // Overwrite\n\t        niceExtent: function (approxTickNum, fixMin, fixMax) {\n\t            var extent = this._extent;\n\t            // If extent start and end are same, expand them\n\t            if (extent[0] === extent[1]) {\n\t                // Expand extent\n\t                extent[0] -= ONE_DAY;\n\t                extent[1] += ONE_DAY;\n\t            }\n\t            // If there are no data and extent are [Infinity, -Infinity]\n\t            if (extent[1] === -Infinity && extent[0] === Infinity) {\n\t                var d = new Date();\n\t                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n\t                extent[0] = extent[1] - ONE_DAY;\n\t            }\n\t\n\t            this.niceTicks(approxTickNum);\n\t\n\t            // var extent = this._extent;\n\t            var interval = this._interval;\n\t\n\t            if (!fixMin) {\n\t                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n\t            }\n\t            if (!fixMax) {\n\t                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n\t            }\n\t        },\n\t\n\t        // Overwrite\n\t        niceTicks: function (approxTickNum) {\n\t            approxTickNum = approxTickNum || 10;\n\t\n\t            var extent = this._extent;\n\t            var span = extent[1] - extent[0];\n\t            var approxInterval = span / approxTickNum;\n\t            var scaleLevelsLen = scaleLevels.length;\n\t            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\t\n\t            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n\t            var interval = level[2];\n\t            // Same with interval scale if span is much larger than 1 year\n\t            if (level[0] === 'year') {\n\t                var yearSpan = span / interval;\n\t\n\t                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n\t                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\t                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\t\n\t                interval *= yearStep;\n\t            }\n\t\n\t            var niceExtent = [\n\t                mathCeil(extent[0] / interval) * interval,\n\t                mathFloor(extent[1] / interval) * interval\n\t            ];\n\t\n\t            this._stepLvl = level;\n\t            // Interval will be used in getTicks\n\t            this._interval = interval;\n\t            this._niceExtent = niceExtent;\n\t        },\n\t\n\t        parse: function (val) {\n\t            // val might be float.\n\t            return +numberUtil.parseDate(val);\n\t        }\n\t    });\n\t\n\t    zrUtil.each(['contain', 'normalize'], function (methodName) {\n\t        TimeScale.prototype[methodName] = function (val) {\n\t            return intervalScaleProto[methodName].call(this, this.parse(val));\n\t        };\n\t    });\n\t\n\t    // Steps from d3\n\t    var scaleLevels = [\n\t        // Format       step    interval\n\t        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n\t        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n\t        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n\t        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n\t        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n\t        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n\t        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n\t        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n\t        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n\t        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n\t        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n\t        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n\t        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n\t        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n\t        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n\t        ['week',        7,      ONE_DAY * 7],        // 7d\n\t        ['month',       1,      ONE_DAY * 31],       // 1M\n\t        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n\t        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n\t        ['year',        1,      ONE_DAY * 380]       // 1Y\n\t    ];\n\t\n\t    /**\n\t     * @return {module:echarts/scale/Time}\n\t     */\n\t    TimeScale.create = function () {\n\t        return new TimeScale();\n\t    };\n\t\n\t    module.exports = TimeScale;\n\n\n/***/ },\n/* 601 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Log scale\n\t * @module echarts/scale/Log\n\t */\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var Scale = __webpack_require__(598);\n\t    var numberUtil = __webpack_require__(489);\n\t\n\t    // Use some method of IntervalScale\n\t    var IntervalScale = __webpack_require__(599);\n\t\n\t    var scaleProto = Scale.prototype;\n\t    var intervalScaleProto = IntervalScale.prototype;\n\t\n\t    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n\t    var roundingErrorFix = numberUtil.round;\n\t\n\t    var mathFloor = Math.floor;\n\t    var mathCeil = Math.ceil;\n\t    var mathPow = Math.pow;\n\t\n\t    var mathLog = Math.log;\n\t\n\t    var LogScale = Scale.extend({\n\t\n\t        type: 'log',\n\t\n\t        base: 10,\n\t\n\t        $constructor: function () {\n\t            Scale.apply(this, arguments);\n\t            this._originalScale = new IntervalScale();\n\t        },\n\t\n\t        /**\n\t         * @return {Array.<number>}\n\t         */\n\t        getTicks: function () {\n\t            var originalScale = this._originalScale;\n\t            var extent = this._extent;\n\t            var originalExtent = originalScale.getExtent();\n\t\n\t            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n\t                var powVal = numberUtil.round(mathPow(this.base, val));\n\t\n\t                // Fix #4158\n\t                powVal = (val === extent[0] && originalScale.__fixMin)\n\t                    ? fixRoundingError(powVal, originalExtent[0])\n\t                    : powVal;\n\t                powVal = (val === extent[1] && originalScale.__fixMax)\n\t                    ? fixRoundingError(powVal, originalExtent[1])\n\t                    : powVal;\n\t\n\t                return powVal;\n\t            }, this);\n\t        },\n\t\n\t        /**\n\t         * @param {number} val\n\t         * @return {string}\n\t         */\n\t        getLabel: intervalScaleProto.getLabel,\n\t\n\t        /**\n\t         * @param  {number} val\n\t         * @return {number}\n\t         */\n\t        scale: function (val) {\n\t            val = scaleProto.scale.call(this, val);\n\t            return mathPow(this.base, val);\n\t        },\n\t\n\t        /**\n\t         * @param {number} start\n\t         * @param {number} end\n\t         */\n\t        setExtent: function (start, end) {\n\t            var base = this.base;\n\t            start = mathLog(start) / mathLog(base);\n\t            end = mathLog(end) / mathLog(base);\n\t            intervalScaleProto.setExtent.call(this, start, end);\n\t        },\n\t\n\t        /**\n\t         * @return {number} end\n\t         */\n\t        getExtent: function () {\n\t            var base = this.base;\n\t            var extent = scaleProto.getExtent.call(this);\n\t            extent[0] = mathPow(base, extent[0]);\n\t            extent[1] = mathPow(base, extent[1]);\n\t\n\t            // Fix #4158\n\t            var originalScale = this._originalScale;\n\t            var originalExtent = originalScale.getExtent();\n\t            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n\t            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\t\n\t            return extent;\n\t        },\n\t\n\t        /**\n\t         * @param  {Array.<number>} extent\n\t         */\n\t        unionExtent: function (extent) {\n\t            this._originalScale.unionExtent(extent);\n\t\n\t            var base = this.base;\n\t            extent[0] = mathLog(extent[0]) / mathLog(base);\n\t            extent[1] = mathLog(extent[1]) / mathLog(base);\n\t            scaleProto.unionExtent.call(this, extent);\n\t        },\n\t\n\t        /**\n\t         * Update interval and extent of intervals for nice ticks\n\t         * @param  {number} [approxTickNum = 10] Given approx tick number\n\t         */\n\t        niceTicks: function (approxTickNum) {\n\t            approxTickNum = approxTickNum || 10;\n\t            var extent = this._extent;\n\t            var span = extent[1] - extent[0];\n\t            if (span === Infinity || span <= 0) {\n\t                return;\n\t            }\n\t\n\t            var interval = numberUtil.quantity(span);\n\t            var err = approxTickNum / span * interval;\n\t\n\t            // Filter ticks to get closer to the desired count.\n\t            if (err <= 0.5) {\n\t                interval *= 10;\n\t            }\n\t\n\t            // Interval should be integer\n\t            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n\t                interval *= 10;\n\t            }\n\t\n\t            var niceExtent = [\n\t                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n\t                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n\t            ];\n\t\n\t            this._interval = interval;\n\t            this._niceExtent = niceExtent;\n\t        },\n\t\n\t        /**\n\t         * Nice extent.\n\t         * @param {number} [approxTickNum = 10] Given approx tick number\n\t         * @param {boolean} [fixMin=false]\n\t         * @param {boolean} [fixMax=false]\n\t         */\n\t        niceExtent: function (splitNumber, fixMin, fixMax) {\n\t            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\t\n\t            var originalScale = this._originalScale;\n\t            originalScale.__fixMin = fixMin;\n\t            originalScale.__fixMax = fixMax;\n\t        }\n\t\n\t    });\n\t\n\t    zrUtil.each(['contain', 'normalize'], function (methodName) {\n\t        LogScale.prototype[methodName] = function (val) {\n\t            val = mathLog(val) / mathLog(this.base);\n\t            return scaleProto[methodName].call(this, val);\n\t        };\n\t    });\n\t\n\t    LogScale.create = function () {\n\t        return new LogScale();\n\t    };\n\t\n\t    function fixRoundingError(val, originalVal) {\n\t        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n\t    }\n\t\n\t    module.exports = LogScale;\n\n\n/***/ },\n/* 602 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var Cartesian = __webpack_require__(603);\n\t\n\t    function Cartesian2D(name) {\n\t\n\t        Cartesian.call(this, name);\n\t    }\n\t\n\t    Cartesian2D.prototype = {\n\t\n\t        constructor: Cartesian2D,\n\t\n\t        type: 'cartesian2d',\n\t\n\t        /**\n\t         * @type {Array.<string>}\n\t         * @readOnly\n\t         */\n\t        dimensions: ['x', 'y'],\n\t\n\t        /**\n\t         * Base axis will be used on stacking.\n\t         *\n\t         * @return {module:echarts/coord/cartesian/Axis2D}\n\t         */\n\t        getBaseAxis: function () {\n\t            return this.getAxesByScale('ordinal')[0]\n\t                || this.getAxesByScale('time')[0]\n\t                || this.getAxis('x');\n\t        },\n\t\n\t        /**\n\t         * If contain point\n\t         * @param {Array.<number>} point\n\t         * @return {boolean}\n\t         */\n\t        containPoint: function (point) {\n\t            var axisX = this.getAxis('x');\n\t            var axisY = this.getAxis('y');\n\t            return axisX.contain(axisX.toLocalCoord(point[0]))\n\t                && axisY.contain(axisY.toLocalCoord(point[1]));\n\t        },\n\t\n\t        /**\n\t         * If contain data\n\t         * @param {Array.<number>} data\n\t         * @return {boolean}\n\t         */\n\t        containData: function (data) {\n\t            return this.getAxis('x').containData(data[0])\n\t                && this.getAxis('y').containData(data[1]);\n\t        },\n\t\n\t        /**\n\t         * Convert series data to an array of points\n\t         * @param {module:echarts/data/List} data\n\t         * @param {boolean} stack\n\t         * @return {Array}\n\t         *  Return array of points. For example:\n\t         *  `[[10, 10], [20, 20], [30, 30]]`\n\t         */\n\t        dataToPoints: function (data, stack) {\n\t            return data.mapArray(['x', 'y'], function (x, y) {\n\t                return this.dataToPoint([x, y]);\n\t            }, stack, this);\n\t        },\n\t\n\t        /**\n\t         * @param {Array.<number>} data\n\t         * @param {boolean} [clamp=false]\n\t         * @return {Array.<number>}\n\t         */\n\t        dataToPoint: function (data, clamp) {\n\t            var xAxis = this.getAxis('x');\n\t            var yAxis = this.getAxis('y');\n\t            return [\n\t                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n\t                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n\t            ];\n\t        },\n\t\n\t        /**\n\t         * @param {Array.<number>} point\n\t         * @param {boolean} [clamp=false]\n\t         * @return {Array.<number>}\n\t         */\n\t        pointToData: function (point, clamp) {\n\t            var xAxis = this.getAxis('x');\n\t            var yAxis = this.getAxis('y');\n\t            return [\n\t                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n\t                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n\t            ];\n\t        },\n\t\n\t        /**\n\t         * Get other axis\n\t         * @param {module:echarts/coord/cartesian/Axis2D} axis\n\t         */\n\t        getOtherAxis: function (axis) {\n\t            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n\t        }\n\t    };\n\t\n\t    zrUtil.inherits(Cartesian2D, Cartesian);\n\t\n\t    module.exports = Cartesian2D;\n\n\n/***/ },\n/* 603 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Cartesian coordinate system\n\t * @module  echarts/coord/Cartesian\n\t *\n\t */\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    function dimAxisMapper(dim) {\n\t        return this._axes[dim];\n\t    }\n\t\n\t    /**\n\t     * @alias module:echarts/coord/Cartesian\n\t     * @constructor\n\t     */\n\t    var Cartesian = function (name) {\n\t        this._axes = {};\n\t\n\t        this._dimList = [];\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        this.name = name || '';\n\t    };\n\t\n\t    Cartesian.prototype = {\n\t\n\t        constructor: Cartesian,\n\t\n\t        type: 'cartesian',\n\t\n\t        /**\n\t         * Get axis\n\t         * @param  {number|string} dim\n\t         * @return {module:echarts/coord/Cartesian~Axis}\n\t         */\n\t        getAxis: function (dim) {\n\t            return this._axes[dim];\n\t        },\n\t\n\t        /**\n\t         * Get axes list\n\t         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n\t         */\n\t        getAxes: function () {\n\t            return zrUtil.map(this._dimList, dimAxisMapper, this);\n\t        },\n\t\n\t        /**\n\t         * Get axes list by given scale type\n\t         */\n\t        getAxesByScale: function (scaleType) {\n\t            scaleType = scaleType.toLowerCase();\n\t            return zrUtil.filter(\n\t                this.getAxes(),\n\t                function (axis) {\n\t                    return axis.scale.type === scaleType;\n\t                }\n\t            );\n\t        },\n\t\n\t        /**\n\t         * Add axis\n\t         * @param {module:echarts/coord/Cartesian.Axis}\n\t         */\n\t        addAxis: function (axis) {\n\t            var dim = axis.dim;\n\t\n\t            this._axes[dim] = axis;\n\t\n\t            this._dimList.push(dim);\n\t        },\n\t\n\t        /**\n\t         * Convert data to coord in nd space\n\t         * @param {Array.<number>|Object.<string, number>} val\n\t         * @return {Array.<number>|Object.<string, number>}\n\t         */\n\t        dataToCoord: function (val) {\n\t            return this._dataCoordConvert(val, 'dataToCoord');\n\t        },\n\t\n\t        /**\n\t         * Convert coord in nd space to data\n\t         * @param  {Array.<number>|Object.<string, number>} val\n\t         * @return {Array.<number>|Object.<string, number>}\n\t         */\n\t        coordToData: function (val) {\n\t            return this._dataCoordConvert(val, 'coordToData');\n\t        },\n\t\n\t        _dataCoordConvert: function (input, method) {\n\t            var dimList = this._dimList;\n\t\n\t            var output = input instanceof Array ? [] : {};\n\t\n\t            for (var i = 0; i < dimList.length; i++) {\n\t                var dim = dimList[i];\n\t                var axis = this._axes[dim];\n\t\n\t                output[dim] = axis[method](input[dim]);\n\t            }\n\t\n\t            return output;\n\t        }\n\t    };\n\t\n\t    module.exports = Cartesian;\n\n\n/***/ },\n/* 604 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var Axis = __webpack_require__(605);\n\t    var axisLabelInterval = __webpack_require__(606);\n\t\n\t    /**\n\t     * Extend axis 2d\n\t     * @constructor module:echarts/coord/cartesian/Axis2D\n\t     * @extends {module:echarts/coord/cartesian/Axis}\n\t     * @param {string} dim\n\t     * @param {*} scale\n\t     * @param {Array.<number>} coordExtent\n\t     * @param {string} axisType\n\t     * @param {string} position\n\t     */\n\t    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n\t        Axis.call(this, dim, scale, coordExtent);\n\t        /**\n\t         * Axis type\n\t         *  - 'category'\n\t         *  - 'value'\n\t         *  - 'time'\n\t         *  - 'log'\n\t         * @type {string}\n\t         */\n\t        this.type = axisType || 'value';\n\t\n\t        /**\n\t         * Axis position\n\t         *  - 'top'\n\t         *  - 'bottom'\n\t         *  - 'left'\n\t         *  - 'right'\n\t         */\n\t        this.position = position || 'bottom';\n\t    };\n\t\n\t    Axis2D.prototype = {\n\t\n\t        constructor: Axis2D,\n\t\n\t        /**\n\t         * Index of axis, can be used as key\n\t         */\n\t        index: 0,\n\t        /**\n\t         * If axis is on the zero position of the other axis\n\t         * @type {boolean}\n\t         */\n\t        onZero: false,\n\t\n\t        /**\n\t         * Axis model\n\t         * @param {module:echarts/coord/cartesian/AxisModel}\n\t         */\n\t        model: null,\n\t\n\t        isHorizontal: function () {\n\t            var position = this.position;\n\t            return position === 'top' || position === 'bottom';\n\t        },\n\t\n\t        getGlobalExtent: function () {\n\t            var ret = this.getExtent();\n\t            ret[0] = this.toGlobalCoord(ret[0]);\n\t            ret[1] = this.toGlobalCoord(ret[1]);\n\t            return ret;\n\t        },\n\t\n\t        /**\n\t         * @return {number}\n\t         */\n\t        getLabelInterval: function () {\n\t            var labelInterval = this._labelInterval;\n\t            if (!labelInterval) {\n\t                labelInterval = this._labelInterval = axisLabelInterval(this);\n\t            }\n\t            return labelInterval;\n\t        },\n\t\n\t        /**\n\t         * If label is ignored.\n\t         * Automatically used when axis is category and label can not be all shown\n\t         * @param  {number}  idx\n\t         * @return {boolean}\n\t         */\n\t        isLabelIgnored: function (idx) {\n\t            if (this.type === 'category') {\n\t                var labelInterval = this.getLabelInterval();\n\t                return ((typeof labelInterval === 'function')\n\t                    && !labelInterval(idx, this.scale.getLabel(idx)))\n\t                    || idx % (labelInterval + 1);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Transform global coord to local coord,\n\t         * i.e. var localCoord = axis.toLocalCoord(80);\n\t         * designate by module:echarts/coord/cartesian/Grid.\n\t         * @type {Function}\n\t         */\n\t        toLocalCoord: null,\n\t\n\t        /**\n\t         * Transform global coord to local coord,\n\t         * i.e. var globalCoord = axis.toLocalCoord(40);\n\t         * designate by module:echarts/coord/cartesian/Grid.\n\t         * @type {Function}\n\t         */\n\t        toGlobalCoord: null\n\t\n\t    };\n\t    zrUtil.inherits(Axis2D, Axis);\n\t\n\t    module.exports = Axis2D;\n\n\n/***/ },\n/* 605 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var numberUtil = __webpack_require__(489);\n\t    var linearMap = numberUtil.linearMap;\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    function fixExtentWithBands(extent, nTick) {\n\t        var size = extent[1] - extent[0];\n\t        var len = nTick;\n\t        var margin = size / len / 2;\n\t        extent[0] += margin;\n\t        extent[1] -= margin;\n\t    }\n\t\n\t    var normalizedExtent = [0, 1];\n\t    /**\n\t     * @name module:echarts/coord/CartesianAxis\n\t     * @constructor\n\t     */\n\t    var Axis = function (dim, scale, extent) {\n\t\n\t        /**\n\t         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n\t         * @type {string}\n\t         */\n\t        this.dim = dim;\n\t\n\t        /**\n\t         * Axis scale\n\t         * @type {module:echarts/coord/scale/*}\n\t         */\n\t        this.scale = scale;\n\t\n\t        /**\n\t         * @type {Array.<number>}\n\t         * @private\n\t         */\n\t        this._extent = extent || [0, 0];\n\t\n\t        /**\n\t         * @type {boolean}\n\t         */\n\t        this.inverse = false;\n\t\n\t        /**\n\t         * Usually true when axis has a ordinal scale\n\t         * @type {boolean}\n\t         */\n\t        this.onBand = false;\n\t    };\n\t\n\t    Axis.prototype = {\n\t\n\t        constructor: Axis,\n\t\n\t        /**\n\t         * If axis extent contain given coord\n\t         * @param {number} coord\n\t         * @return {boolean}\n\t         */\n\t        contain: function (coord) {\n\t            var extent = this._extent;\n\t            var min = Math.min(extent[0], extent[1]);\n\t            var max = Math.max(extent[0], extent[1]);\n\t            return coord >= min && coord <= max;\n\t        },\n\t\n\t        /**\n\t         * If axis extent contain given data\n\t         * @param {number} data\n\t         * @return {boolean}\n\t         */\n\t        containData: function (data) {\n\t            return this.contain(this.dataToCoord(data));\n\t        },\n\t\n\t        /**\n\t         * Get coord extent.\n\t         * @return {Array.<number>}\n\t         */\n\t        getExtent: function () {\n\t            var ret = this._extent.slice();\n\t            return ret;\n\t        },\n\t\n\t        /**\n\t         * Get precision used for formatting\n\t         * @param {Array.<number>} [dataExtent]\n\t         * @return {number}\n\t         */\n\t        getPixelPrecision: function (dataExtent) {\n\t            return numberUtil.getPixelPrecision(\n\t                dataExtent || this.scale.getExtent(),\n\t                this._extent\n\t            );\n\t        },\n\t\n\t        /**\n\t         * Set coord extent\n\t         * @param {number} start\n\t         * @param {number} end\n\t         */\n\t        setExtent: function (start, end) {\n\t            var extent = this._extent;\n\t            extent[0] = start;\n\t            extent[1] = end;\n\t        },\n\t\n\t        /**\n\t         * Convert data to coord. Data is the rank if it has a ordinal scale\n\t         * @param {number} data\n\t         * @param  {boolean} clamp\n\t         * @return {number}\n\t         */\n\t        dataToCoord: function (data, clamp) {\n\t            var extent = this._extent;\n\t            var scale = this.scale;\n\t            data = scale.normalize(data);\n\t\n\t            if (this.onBand && scale.type === 'ordinal') {\n\t                extent = extent.slice();\n\t                fixExtentWithBands(extent, scale.count());\n\t            }\n\t\n\t            return linearMap(data, normalizedExtent, extent, clamp);\n\t        },\n\t\n\t        /**\n\t         * Convert coord to data. Data is the rank if it has a ordinal scale\n\t         * @param {number} coord\n\t         * @param  {boolean} clamp\n\t         * @return {number}\n\t         */\n\t        coordToData: function (coord, clamp) {\n\t            var extent = this._extent;\n\t            var scale = this.scale;\n\t\n\t            if (this.onBand && scale.type === 'ordinal') {\n\t                extent = extent.slice();\n\t                fixExtentWithBands(extent, scale.count());\n\t            }\n\t\n\t            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\t\n\t            return this.scale.scale(t);\n\t        },\n\t        /**\n\t         * @return {Array.<number>}\n\t         */\n\t        getTicksCoords: function (alignWithLabel) {\n\t            if (this.onBand && !alignWithLabel) {\n\t                var bands = this.getBands();\n\t                var coords = [];\n\t                for (var i = 0; i < bands.length; i++) {\n\t                    coords.push(bands[i][0]);\n\t                }\n\t                if (bands[i - 1]) {\n\t                    coords.push(bands[i - 1][1]);\n\t                }\n\t                return coords;\n\t            }\n\t            else {\n\t                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Coords of labels are on the ticks or on the middle of bands\n\t         * @return {Array.<number>}\n\t         */\n\t        getLabelsCoords: function () {\n\t            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n\t        },\n\t\n\t        /**\n\t         * Get bands.\n\t         *\n\t         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n\t         * |---1---|---2---|---3---|---4---|.\n\t         *\n\t         * @return {Array}\n\t         */\n\t         // FIXME Situation when labels is on ticks\n\t        getBands: function () {\n\t            var extent = this.getExtent();\n\t            var bands = [];\n\t            var len = this.scale.count();\n\t            var start = extent[0];\n\t            var end = extent[1];\n\t            var span = end - start;\n\t\n\t            for (var i = 0; i < len; i++) {\n\t                bands.push([\n\t                    span * i / len + start,\n\t                    span * (i + 1) / len + start\n\t                ]);\n\t            }\n\t            return bands;\n\t        },\n\t\n\t        /**\n\t         * Get width of band\n\t         * @return {number}\n\t         */\n\t        getBandWidth: function () {\n\t            var axisExtent = this._extent;\n\t            var dataExtent = this.scale.getExtent();\n\t\n\t            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n\t            // Fix #2728, avoid NaN when only one data.\n\t            len === 0 && (len = 1);\n\t\n\t            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\t\n\t            return Math.abs(size) / len;\n\t        }\n\t    };\n\t\n\t    module.exports = Axis;\n\n\n/***/ },\n/* 606 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Helper function for axisLabelInterval calculation\n\t */\n\t\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var axisHelper = __webpack_require__(596);\n\t\n\t    module.exports = function (axis) {\n\t        var axisModel = axis.model;\n\t        var labelModel = axisModel.getModel('axisLabel');\n\t        var labelInterval = labelModel.get('interval');\n\t        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n\t            return labelInterval === 'auto' ? 0 : labelInterval;\n\t        }\n\t\n\t        return axisHelper.getAxisLabelInterval(\n\t            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n\t            axisModel.getFormattedLabels(),\n\t            labelModel.getModel('textStyle').getFont(),\n\t            axis.isHorizontal()\n\t        );\n\t    };\n\n\n/***/ },\n/* 607 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// Grid 是在有直角坐标系的时候必须要存在的\n\t// 所以这里也要被 Cartesian2D 依赖\n\t\n\t\n\t    __webpack_require__(608);\n\t    var ComponentModel = __webpack_require__(501);\n\t\n\t    module.exports = ComponentModel.extend({\n\t\n\t        type: 'grid',\n\t\n\t        dependencies: ['xAxis', 'yAxis'],\n\t\n\t        layoutMode: 'box',\n\t\n\t        /**\n\t         * @type {module:echarts/coord/cartesian/Grid}\n\t         */\n\t        coordinateSystem: null,\n\t\n\t        defaultOption: {\n\t            show: false,\n\t            zlevel: 0,\n\t            z: 0,\n\t            left: '10%',\n\t            top: 60,\n\t            right: '10%',\n\t            bottom: 60,\n\t            // If grid size contain label\n\t            containLabel: false,\n\t            // width: {totalWidth} - left - right,\n\t            // height: {totalHeight} - top - bottom,\n\t            backgroundColor: 'rgba(0,0,0,0)',\n\t            borderWidth: 1,\n\t            borderColor: '#ccc'\n\t        }\n\t    });\n\n\n/***/ },\n/* 608 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var ComponentModel = __webpack_require__(501);\n\t    var zrUtil = __webpack_require__(483);\n\t    var axisModelCreator = __webpack_require__(609);\n\t\n\t    var AxisModel = ComponentModel.extend({\n\t\n\t        type: 'cartesian2dAxis',\n\t\n\t        /**\n\t         * @type {module:echarts/coord/cartesian/Axis2D}\n\t         */\n\t        axis: null,\n\t\n\t        /**\n\t         * @override\n\t         */\n\t        init: function () {\n\t            AxisModel.superApply(this, 'init', arguments);\n\t            this.resetRange();\n\t        },\n\t\n\t        /**\n\t         * @override\n\t         */\n\t        mergeOption: function () {\n\t            AxisModel.superApply(this, 'mergeOption', arguments);\n\t            this.resetRange();\n\t        },\n\t\n\t        /**\n\t         * @override\n\t         */\n\t        restoreData: function () {\n\t            AxisModel.superApply(this, 'restoreData', arguments);\n\t            this.resetRange();\n\t        },\n\t\n\t        /**\n\t         * @return {module:echarts/model/Model}\n\t         */\n\t        findGridModel: function () {\n\t            return this.ecModel.queryComponents({\n\t                mainType: 'grid',\n\t                index: this.get('gridIndex'),\n\t                id: this.get('gridId')\n\t            })[0];\n\t        }\n\t\n\t    });\n\t\n\t    function getAxisType(axisDim, option) {\n\t        // Default axis with data is category axis\n\t        return option.type || (option.data ? 'category' : 'value');\n\t    }\n\t\n\t    zrUtil.merge(AxisModel.prototype, __webpack_require__(611));\n\t    zrUtil.merge(AxisModel.prototype, __webpack_require__(612));\n\t\n\t    var extraOption = {\n\t        // gridIndex: 0,\n\t        // gridId: '',\n\t\n\t        // Offset is for multiple axis on the same position\n\t        offset: 0\n\t    };\n\t\n\t    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n\t    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\t\n\t    module.exports = AxisModel;\n\n\n/***/ },\n/* 609 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var axisDefault = __webpack_require__(610);\n\t    var zrUtil = __webpack_require__(483);\n\t    var ComponentModel = __webpack_require__(501);\n\t    var layout = __webpack_require__(503);\n\t\n\t    // FIXME axisType is fixed ?\n\t    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\t\n\t    /**\n\t     * Generate sub axis model class\n\t     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n\t     * @param {module:echarts/model/Component} BaseAxisModelClass\n\t     * @param {Function} axisTypeDefaulter\n\t     * @param {Object} [extraDefaultOption]\n\t     */\n\t    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\t\n\t        zrUtil.each(AXIS_TYPES, function (axisType) {\n\t\n\t            BaseAxisModelClass.extend({\n\t\n\t                type: axisName + 'Axis.' + axisType,\n\t\n\t                mergeDefaultAndTheme: function (option, ecModel) {\n\t                    var layoutMode = this.layoutMode;\n\t                    var inputPositionParams = layoutMode\n\t                        ? layout.getLayoutParams(option) : {};\n\t\n\t                    var themeModel = ecModel.getTheme();\n\t                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n\t                    zrUtil.merge(option, this.getDefaultOption());\n\t\n\t                    option.type = axisTypeDefaulter(axisName, option);\n\t\n\t                    if (layoutMode) {\n\t                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n\t                    }\n\t                },\n\t\n\t                defaultOption: zrUtil.mergeAll(\n\t                    [\n\t                        {},\n\t                        axisDefault[axisType + 'Axis'],\n\t                        extraDefaultOption\n\t                    ],\n\t                    true\n\t                )\n\t            });\n\t        });\n\t\n\t        ComponentModel.registerSubTypeDefaulter(\n\t            axisName + 'Axis',\n\t            zrUtil.curry(axisTypeDefaulter, axisName)\n\t        );\n\t    };\n\n\n/***/ },\n/* 610 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var defaultOption = {\n\t        show: true,\n\t        zlevel: 0,                  // 一级层叠\n\t        z: 0,                       // 二级层叠\n\t        // 反向坐标轴\n\t        inverse: false,\n\t\n\t        // 坐标轴名字，默认为空\n\t        name: '',\n\t        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n\t        nameLocation: 'end',\n\t        // 坐标轴名字旋转，degree。\n\t        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n\t        nameTruncate: {\n\t            maxWidth: null,\n\t            ellipsis: '...',\n\t            placeholder: '.'\n\t        },\n\t        // 坐标轴文字样式，默认取全局样式\n\t        nameTextStyle: {},\n\t        // 文字与轴线距离\n\t        nameGap: 15,\n\t\n\t        silent: false, // Default false to support tooltip.\n\t        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\t\n\t        tooltip: {\n\t            show: false\n\t        },\n\t\n\t        // 坐标轴线\n\t        axisLine: {\n\t            // 默认显示，属性show控制显示与否\n\t            show: true,\n\t            onZero: true,\n\t            // 属性lineStyle控制线条样式\n\t            lineStyle: {\n\t                color: '#333',\n\t                width: 1,\n\t                type: 'solid'\n\t            }\n\t        },\n\t        // 坐标轴小标记\n\t        axisTick: {\n\t            // 属性show控制显示与否，默认显示\n\t            show: true,\n\t            // 控制小标记是否在grid里\n\t            inside: false,\n\t            // 属性length控制线长\n\t            length: 5,\n\t            // 属性lineStyle控制线条样式\n\t            lineStyle: {\n\t                width: 1\n\t            }\n\t        },\n\t        // 坐标轴文本标签，详见axis.axisLabel\n\t        axisLabel: {\n\t            show: true,\n\t            // 控制文本标签是否在grid里\n\t            inside: false,\n\t            rotate: 0,\n\t            margin: 8,\n\t            // formatter: null,\n\t            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n\t            textStyle: {\n\t                fontSize: 12\n\t            }\n\t        },\n\t        // 分隔线\n\t        splitLine: {\n\t            // 默认显示，属性show控制显示与否\n\t            show: true,\n\t            // 属性lineStyle（详见lineStyle）控制线条样式\n\t            lineStyle: {\n\t                color: ['#ccc'],\n\t                width: 1,\n\t                type: 'solid'\n\t            }\n\t        },\n\t        // 分隔区域\n\t        splitArea: {\n\t            // 默认不显示，属性show控制显示与否\n\t            show: false,\n\t            // 属性areaStyle（详见areaStyle）控制区域样式\n\t            areaStyle: {\n\t                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n\t            }\n\t        }\n\t    };\n\t\n\t    var categoryAxis = zrUtil.merge({\n\t        // 类目起始和结束两端空白策略\n\t        boundaryGap: true,\n\t        // splitArea: {\n\t            // show: false\n\t        // },\n\t        splitLine: {\n\t            show: false\n\t        },\n\t        // 坐标轴小标记\n\t        axisTick: {\n\t            // If tick is align with label when boundaryGap is true\n\t            // Default with axisTick\n\t            alignWithLabel: false,\n\t            interval: 'auto'\n\t        },\n\t        // 坐标轴文本标签，详见axis.axisLabel\n\t        axisLabel: {\n\t            interval: 'auto'\n\t        }\n\t    }, defaultOption);\n\t\n\t    var valueAxis = zrUtil.merge({\n\t        // 数值起始和结束两端空白策略\n\t        boundaryGap: [0, 0],\n\t        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n\t        // min: null,\n\t        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n\t        // max: null,\n\t        // Readonly prop, specifies start value of the range when using data zoom.\n\t        // rangeStart: null\n\t        // Readonly prop, specifies end value of the range when using data zoom.\n\t        // rangeEnd: null\n\t        // 脱离0值比例，放大聚焦到最终_min，_max区间\n\t        // scale: false,\n\t        // 分割段数，默认为5\n\t        splitNumber: 5\n\t        // Minimum interval\n\t        // minInterval: null\n\t    }, defaultOption);\n\t\n\t    // FIXME\n\t    var timeAxis = zrUtil.defaults({\n\t        scale: true,\n\t        min: 'dataMin',\n\t        max: 'dataMax'\n\t    }, valueAxis);\n\t    var logAxis = zrUtil.defaults({\n\t        logBase: 10\n\t    }, valueAxis);\n\t    logAxis.scale = true;\n\t\n\t    module.exports = {\n\t        categoryAxis: categoryAxis,\n\t        valueAxis: valueAxis,\n\t        timeAxis: timeAxis,\n\t        logAxis: logAxis\n\t    };\n\n\n/***/ },\n/* 611 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var axisHelper = __webpack_require__(596);\n\t\n\t    function getName(obj) {\n\t        if (zrUtil.isObject(obj) && obj.value != null) {\n\t            return obj.value;\n\t        }\n\t        else {\n\t            return obj;\n\t        }\n\t    }\n\t    /**\n\t     * Get categories\n\t     */\n\t    function getCategories() {\n\t        return this.get('type') === 'category'\n\t            && zrUtil.map(this.get('data'), getName);\n\t    }\n\t\n\t    /**\n\t     * Format labels\n\t     * @return {Array.<string>}\n\t     */\n\t    function getFormattedLabels() {\n\t        return axisHelper.getFormattedLabels(\n\t            this.axis,\n\t            this.get('axisLabel.formatter')\n\t        );\n\t    }\n\t\n\t    module.exports = {\n\t\n\t        getFormattedLabels: getFormattedLabels,\n\t\n\t        getCategories: getCategories\n\t    };\n\n\n/***/ },\n/* 612 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    module.exports = {\n\t\n\t        /**\n\t         * @public\n\t         * @return {Array.<number|string|Date>}\n\t         */\n\t        getMin: function () {\n\t            var option = this.option;\n\t            var min = option.rangeStart != null ? option.rangeStart : option.min;\n\t            // In case of axis.type === 'time', Date should be converted to timestamp.\n\t            // In other cases, min/max should be a number or null/undefined or 'dataMin/Max'.\n\t            if (min instanceof Date) {\n\t                min = +min;\n\t            }\n\t            return min;\n\t        },\n\t\n\t        /**\n\t         * @public\n\t         * @return {Array.<number|string|Date>}\n\t         */\n\t        getMax: function () {\n\t            var option = this.option;\n\t            var max = option.rangeEnd != null ? option.rangeEnd : option.max;\n\t            // In case of axis.type === 'time', Date should be converted to timestamp.\n\t            // In other cases, min/max should be a number or null/undefined or 'dataMin/Max'.\n\t            if (max instanceof Date) {\n\t                max = +max;\n\t            }\n\t            return max;\n\t        },\n\t\n\t        /**\n\t         * @public\n\t         * @return {boolean}\n\t         */\n\t        getNeedCrossZero: function () {\n\t            var option = this.option;\n\t            return (option.rangeStart != null || option.rangeEnd != null)\n\t                ? false : !option.scale;\n\t        },\n\t\n\t        /**\n\t         * @public\n\t         * @param {number} rangeStart\n\t         * @param {number} rangeEnd\n\t         */\n\t        setRange: function (rangeStart, rangeEnd) {\n\t            this.option.rangeStart = rangeStart;\n\t            this.option.rangeEnd = rangeEnd;\n\t        },\n\t\n\t        /**\n\t         * @public\n\t         */\n\t        resetRange: function () {\n\t            // rangeStart and rangeEnd is readonly.\n\t            this.option.rangeStart = this.option.rangeEnd = null;\n\t        }\n\t    };\n\t\n\n\n/***/ },\n/* 613 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// TODO boundaryGap\n\t\n\t\n\t    __webpack_require__(608);\n\t\n\t    __webpack_require__(614);\n\n\n/***/ },\n/* 614 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var graphic = __webpack_require__(525);\n\t    var AxisBuilder = __webpack_require__(615);\n\t    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n\t    var getInterval = AxisBuilder.getInterval;\n\t\n\t    var axisBuilderAttrs = [\n\t        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n\t    ];\n\t    var selfBuilderAttrs = [\n\t        'splitArea', 'splitLine'\n\t    ];\n\t\n\t    // function getAlignWithLabel(model, axisModel) {\n\t    //     var alignWithLabel = model.get('alignWithLabel');\n\t    //     if (alignWithLabel === 'auto') {\n\t    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n\t    //     }\n\t    //     return alignWithLabel;\n\t    // }\n\t\n\t    var AxisView = __webpack_require__(484).extendComponentView({\n\t\n\t        type: 'axis',\n\t\n\t        render: function (axisModel, ecModel) {\n\t\n\t            this.group.removeAll();\n\t\n\t            var oldAxisGroup = this._axisGroup;\n\t            this._axisGroup = new graphic.Group();\n\t\n\t            this.group.add(this._axisGroup);\n\t\n\t            if (!axisModel.get('show')) {\n\t                return;\n\t            }\n\t\n\t            var gridModel = axisModel.findGridModel();\n\t\n\t            var layout = layoutAxis(gridModel, axisModel);\n\t\n\t            var axisBuilder = new AxisBuilder(axisModel, layout);\n\t\n\t            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\t\n\t            this._axisGroup.add(axisBuilder.getGroup());\n\t\n\t            zrUtil.each(selfBuilderAttrs, function (name) {\n\t                if (axisModel.get(name + '.show')) {\n\t                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n\t                }\n\t            }, this);\n\t\n\t            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\t        },\n\t\n\t        /**\n\t         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n\t         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n\t         * @param {number|Function} labelInterval\n\t         * @private\n\t         */\n\t        _splitLine: function (axisModel, gridModel, labelInterval) {\n\t            var axis = axisModel.axis;\n\t\n\t            var splitLineModel = axisModel.getModel('splitLine');\n\t            var lineStyleModel = splitLineModel.getModel('lineStyle');\n\t            var lineColors = lineStyleModel.get('color');\n\t\n\t            var lineInterval = getInterval(splitLineModel, labelInterval);\n\t\n\t            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\t\n\t            var gridRect = gridModel.coordinateSystem.getRect();\n\t            var isHorizontal = axis.isHorizontal();\n\t\n\t            var lineCount = 0;\n\t\n\t            var ticksCoords = axis.getTicksCoords(\n\t                // splitLineModel.get('alignWithLabel')\n\t            );\n\t            var ticks = axis.scale.getTicks();\n\t\n\t            var p1 = [];\n\t            var p2 = [];\n\t            // Simple optimization\n\t            // Batching the lines if color are the same\n\t            var lineStyle = lineStyleModel.getLineStyle();\n\t            for (var i = 0; i < ticksCoords.length; i++) {\n\t                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n\t                    continue;\n\t                }\n\t\n\t                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\t\n\t                if (isHorizontal) {\n\t                    p1[0] = tickCoord;\n\t                    p1[1] = gridRect.y;\n\t                    p2[0] = tickCoord;\n\t                    p2[1] = gridRect.y + gridRect.height;\n\t                }\n\t                else {\n\t                    p1[0] = gridRect.x;\n\t                    p1[1] = tickCoord;\n\t                    p2[0] = gridRect.x + gridRect.width;\n\t                    p2[1] = tickCoord;\n\t                }\n\t\n\t                var colorIndex = (lineCount++) % lineColors.length;\n\t                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\t                    anid: 'line_' + ticks[i],\n\t\n\t                    shape: {\n\t                        x1: p1[0],\n\t                        y1: p1[1],\n\t                        x2: p2[0],\n\t                        y2: p2[1]\n\t                    },\n\t                    style: zrUtil.defaults({\n\t                        stroke: lineColors[colorIndex]\n\t                    }, lineStyle),\n\t                    silent: true\n\t                })));\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n\t         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n\t         * @param {number|Function} labelInterval\n\t         * @private\n\t         */\n\t        _splitArea: function (axisModel, gridModel, labelInterval) {\n\t            var axis = axisModel.axis;\n\t\n\t            var splitAreaModel = axisModel.getModel('splitArea');\n\t            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n\t            var areaColors = areaStyleModel.get('color');\n\t\n\t            var gridRect = gridModel.coordinateSystem.getRect();\n\t\n\t            var ticksCoords = axis.getTicksCoords(\n\t                // splitAreaModel.get('alignWithLabel')\n\t            );\n\t            var ticks = axis.scale.getTicks();\n\t\n\t            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n\t            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\t\n\t            var count = 0;\n\t\n\t            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\t\n\t            var areaStyle = areaStyleModel.getAreaStyle();\n\t            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\t\n\t            for (var i = 1; i < ticksCoords.length; i++) {\n\t                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n\t                    continue;\n\t                }\n\t\n\t                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\t\n\t                var x;\n\t                var y;\n\t                var width;\n\t                var height;\n\t                if (axis.isHorizontal()) {\n\t                    x = prevX;\n\t                    y = gridRect.y;\n\t                    width = tickCoord - x;\n\t                    height = gridRect.height;\n\t                }\n\t                else {\n\t                    x = gridRect.x;\n\t                    y = prevY;\n\t                    width = gridRect.width;\n\t                    height = tickCoord - y;\n\t                }\n\t\n\t                var colorIndex = (count++) % areaColors.length;\n\t                this._axisGroup.add(new graphic.Rect({\n\t                    anid: 'area_' + ticks[i],\n\t\n\t                    shape: {\n\t                        x: x,\n\t                        y: y,\n\t                        width: width,\n\t                        height: height\n\t                    },\n\t                    style: zrUtil.defaults({\n\t                        fill: areaColors[colorIndex]\n\t                    }, areaStyle),\n\t                    silent: true\n\t                }));\n\t\n\t                prevX = x + width;\n\t                prevY = y + height;\n\t            }\n\t        }\n\t    });\n\t\n\t    AxisView.extend({\n\t        type: 'xAxis'\n\t    });\n\t    AxisView.extend({\n\t        type: 'yAxis'\n\t    });\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function layoutAxis(gridModel, axisModel) {\n\t        var grid = gridModel.coordinateSystem;\n\t        var axis = axisModel.axis;\n\t        var layout = {};\n\t\n\t        var rawAxisPosition = axis.position;\n\t        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n\t        var axisDim = axis.dim;\n\t\n\t        // [left, right, top, bottom]\n\t        var rect = grid.getRect();\n\t        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\t\n\t        var axisOffset = axisModel.get('offset') || 0;\n\t\n\t        var posMap = {\n\t            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n\t            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n\t        };\n\t\n\t        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n\t        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\t\n\t        function getZero(dim, val) {\n\t            var theAxis = grid.getAxis(dim);\n\t            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n\t        }\n\t\n\t        // Axis position\n\t        layout.position = [\n\t            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n\t            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n\t        ];\n\t\n\t        // Axis rotation\n\t        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\t\n\t        // Tick and label direction, x y is axisDim\n\t        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\t\n\t        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n\t        if (axis.onZero) {\n\t            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n\t        }\n\t\n\t        if (axisModel.getModel('axisTick').get('inside')) {\n\t            layout.tickDirection = -layout.tickDirection;\n\t        }\n\t        if (axisModel.getModel('axisLabel').get('inside')) {\n\t            layout.labelDirection = -layout.labelDirection;\n\t        }\n\t\n\t        // Special label rotation\n\t        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n\t        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\t\n\t        // label interval when auto mode.\n\t        layout.labelInterval = axis.getLabelInterval();\n\t\n\t        // Over splitLine and splitArea\n\t        layout.z2 = 1;\n\t\n\t        return layout;\n\t    }\n\n\n/***/ },\n/* 615 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var formatUtil = __webpack_require__(488);\n\t    var graphic = __webpack_require__(525);\n\t    var Model = __webpack_require__(494);\n\t    var numberUtil = __webpack_require__(489);\n\t    var remRadian = numberUtil.remRadian;\n\t    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n\t    var vec2 = __webpack_require__(492);\n\t    var v2ApplyTransform = vec2.applyTransform;\n\t    var retrieve = zrUtil.retrieve;\n\t\n\t    var PI = Math.PI;\n\t\n\t    function makeAxisEventDataBase(axisModel) {\n\t        var eventData = {\n\t            componentType: axisModel.mainType\n\t        };\n\t        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n\t        return eventData;\n\t    }\n\t\n\t    /**\n\t     * A final axis is translated and rotated from a \"standard axis\".\n\t     * So opt.position and opt.rotation is required.\n\t     *\n\t     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n\t     * for example: (0, 0) ------------> (0, 50)\n\t     *\n\t     * nameDirection or tickDirection or labelDirection is 1 means tick\n\t     * or label is below the standard axis, whereas is -1 means above\n\t     * the standard axis. labelOffset means offset between label and axis,\n\t     * which is useful when 'onZero', where axisLabel is in the grid and\n\t     * label in outside grid.\n\t     *\n\t     * Tips: like always,\n\t     * positive rotation represents anticlockwise, and negative rotation\n\t     * represents clockwise.\n\t     * The direction of position coordinate is the same as the direction\n\t     * of screen coordinate.\n\t     *\n\t     * Do not need to consider axis 'inverse', which is auto processed by\n\t     * axis extent.\n\t     *\n\t     * @param {module:zrender/container/Group} group\n\t     * @param {Object} axisModel\n\t     * @param {Object} opt Standard axis parameters.\n\t     * @param {Array.<number>} opt.position [x, y]\n\t     * @param {number} opt.rotation by radian\n\t     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n\t     * @param {number} [opt.tickDirection=1] 1 or -1\n\t     * @param {number} [opt.labelDirection=1] 1 or -1\n\t     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n\t     * @param {string} [opt.axisLabelShow] default get from axisModel.\n\t     * @param {string} [opt.axisName] default get from axisModel.\n\t     * @param {number} [opt.axisNameAvailableWidth]\n\t     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n\t     * @param {number} [opt.labelInterval] Default label interval when label\n\t     *                                     interval from model is null or 'auto'.\n\t     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n\t     */\n\t    var AxisBuilder = function (axisModel, opt) {\n\t\n\t        /**\n\t         * @readOnly\n\t         */\n\t        this.opt = opt;\n\t\n\t        /**\n\t         * @readOnly\n\t         */\n\t        this.axisModel = axisModel;\n\t\n\t        // Default value\n\t        zrUtil.defaults(\n\t            opt,\n\t            {\n\t                labelOffset: 0,\n\t                nameDirection: 1,\n\t                tickDirection: 1,\n\t                labelDirection: 1,\n\t                silent: true\n\t            }\n\t        );\n\t\n\t        /**\n\t         * @readOnly\n\t         */\n\t        this.group = new graphic.Group();\n\t\n\t        // FIXME Not use a seperate text group?\n\t        var dumbGroup = new graphic.Group({\n\t            position: opt.position.slice(),\n\t            rotation: opt.rotation\n\t        });\n\t\n\t        // this.group.add(dumbGroup);\n\t        // this._dumbGroup = dumbGroup;\n\t\n\t        dumbGroup.updateTransform();\n\t        this._transform = dumbGroup.transform;\n\t\n\t        this._dumbGroup = dumbGroup;\n\t    };\n\t\n\t    AxisBuilder.prototype = {\n\t\n\t        constructor: AxisBuilder,\n\t\n\t        hasBuilder: function (name) {\n\t            return !!builders[name];\n\t        },\n\t\n\t        add: function (name) {\n\t            builders[name].call(this);\n\t        },\n\t\n\t        getGroup: function () {\n\t            return this.group;\n\t        }\n\t\n\t    };\n\t\n\t    var builders = {\n\t\n\t        /**\n\t         * @private\n\t         */\n\t        axisLine: function () {\n\t            var opt = this.opt;\n\t            var axisModel = this.axisModel;\n\t\n\t            if (!axisModel.get('axisLine.show')) {\n\t                return;\n\t            }\n\t\n\t            var extent = this.axisModel.axis.getExtent();\n\t\n\t            var matrix = this._transform;\n\t            var pt1 = [extent[0], 0];\n\t            var pt2 = [extent[1], 0];\n\t            if (matrix) {\n\t                v2ApplyTransform(pt1, pt1, matrix);\n\t                v2ApplyTransform(pt2, pt2, matrix);\n\t            }\n\t\n\t            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\t\n\t                // Id for animation\n\t                anid: 'line',\n\t\n\t                shape: {\n\t                    x1: pt1[0],\n\t                    y1: pt1[1],\n\t                    x2: pt2[0],\n\t                    y2: pt2[1]\n\t                },\n\t                style: zrUtil.extend(\n\t                    {lineCap: 'round'},\n\t                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n\t                ),\n\t                strokeContainThreshold: opt.strokeContainThreshold || 5,\n\t                silent: true,\n\t                z2: 1\n\t            })));\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         */\n\t        axisTick: function () {\n\t            var axisModel = this.axisModel;\n\t\n\t            if (!axisModel.get('axisTick.show')) {\n\t                return;\n\t            }\n\t\n\t            var axis = axisModel.axis;\n\t            var tickModel = axisModel.getModel('axisTick');\n\t            var opt = this.opt;\n\t\n\t            var lineStyleModel = tickModel.getModel('lineStyle');\n\t            var tickLen = tickModel.get('length');\n\t\n\t            var tickInterval = getInterval(tickModel, opt.labelInterval);\n\t            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n\t            var ticks = axis.scale.getTicks();\n\t\n\t            var pt1 = [];\n\t            var pt2 = [];\n\t            var matrix = this._transform;\n\t\n\t            for (var i = 0; i < ticksCoords.length; i++) {\n\t                // Only ordinal scale support tick interval\n\t                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n\t                     continue;\n\t                }\n\t\n\t                var tickCoord = ticksCoords[i];\n\t\n\t                pt1[0] = tickCoord;\n\t                pt1[1] = 0;\n\t                pt2[0] = tickCoord;\n\t                pt2[1] = opt.tickDirection * tickLen;\n\t\n\t                if (matrix) {\n\t                    v2ApplyTransform(pt1, pt1, matrix);\n\t                    v2ApplyTransform(pt2, pt2, matrix);\n\t                }\n\t                // Tick line, Not use group transform to have better line draw\n\t                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\t\n\t                    // Id for animation\n\t                    anid: 'tick_' + ticks[i],\n\t\n\t                    shape: {\n\t                        x1: pt1[0],\n\t                        y1: pt1[1],\n\t                        x2: pt2[0],\n\t                        y2: pt2[1]\n\t                    },\n\t                    style: zrUtil.defaults(\n\t                        lineStyleModel.getLineStyle(),\n\t                        {\n\t                            stroke: axisModel.get('axisLine.lineStyle.color')\n\t                        }\n\t                    ),\n\t                    z2: 2,\n\t                    silent: true\n\t                })));\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n\t         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n\t         * @private\n\t         */\n\t        axisLabel: function () {\n\t            var opt = this.opt;\n\t            var axisModel = this.axisModel;\n\t            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\t\n\t            if (!show) {\n\t                return;\n\t            }\n\t\n\t            var axis = axisModel.axis;\n\t            var labelModel = axisModel.getModel('axisLabel');\n\t            var textStyleModel = labelModel.getModel('textStyle');\n\t            var labelMargin = labelModel.get('margin');\n\t            var ticks = axis.scale.getTicks();\n\t            var labels = axisModel.getFormattedLabels();\n\t\n\t            // Special label rotate.\n\t            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n\t            // To radian.\n\t            labelRotation = labelRotation * PI / 180;\n\t\n\t            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n\t            var categoryData = axisModel.get('data');\n\t\n\t            var textEls = [];\n\t            var silent = isSilent(axisModel);\n\t            var triggerEvent = axisModel.get('triggerEvent');\n\t\n\t            zrUtil.each(ticks, function (tickVal, index) {\n\t                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n\t                     return;\n\t                }\n\t\n\t                var itemTextStyleModel = textStyleModel;\n\t                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n\t                    itemTextStyleModel = new Model(\n\t                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n\t                    );\n\t                }\n\t                var textColor = itemTextStyleModel.getTextColor()\n\t                    || axisModel.get('axisLine.lineStyle.color');\n\t\n\t                var tickCoord = axis.dataToCoord(tickVal);\n\t                var pos = [\n\t                    tickCoord,\n\t                    opt.labelOffset + opt.labelDirection * labelMargin\n\t                ];\n\t                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\t\n\t                var textEl = new graphic.Text({\n\t\n\t                    // Id for animation\n\t                    anid: 'label_' + tickVal,\n\t\n\t                    style: {\n\t                        text: labels[index],\n\t                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n\t                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n\t                        textFont: itemTextStyleModel.getFont(),\n\t                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n\t                    },\n\t                    position: pos,\n\t                    rotation: labelLayout.rotation,\n\t                    silent: silent,\n\t                    z2: 10\n\t                });\n\t\n\t                // Pack data for mouse event\n\t                if (triggerEvent) {\n\t                    textEl.eventData = makeAxisEventDataBase(axisModel);\n\t                    textEl.eventData.targetType = 'axisLabel';\n\t                    textEl.eventData.value = labelBeforeFormat;\n\t                }\n\t\n\t                // FIXME\n\t                this._dumbGroup.add(textEl);\n\t                textEl.updateTransform();\n\t\n\t                textEls.push(textEl);\n\t                this.group.add(textEl);\n\t\n\t                textEl.decomposeTransform();\n\t\n\t            }, this);\n\t\n\t            function isTwoLabelOverlapped(current, next) {\n\t                var firstRect = current && current.getBoundingRect().clone();\n\t                var nextRect = next && next.getBoundingRect().clone();\n\t                if (firstRect && nextRect) {\n\t                    firstRect.applyTransform(current.getLocalTransform());\n\t                    nextRect.applyTransform(next.getLocalTransform());\n\t                    return firstRect.intersect(nextRect);\n\t                }\n\t            }\n\t            if (axis.type !== 'category') {\n\t                // If min or max are user set, we need to check\n\t                // If the tick on min(max) are overlap on their neighbour tick\n\t                // If they are overlapped, we need to hide the min(max) tick label\n\t                if (axisModel.getMin ? axisModel.getMin() : axisModel.get('min')) {\n\t                    var firstLabel = textEls[0];\n\t                    var nextLabel = textEls[1];\n\t                    if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n\t                        firstLabel.ignore = true;\n\t                    }\n\t                }\n\t                if (axisModel.getMax ? axisModel.getMax() : axisModel.get('max')) {\n\t                    var lastLabel = textEls[textEls.length - 1];\n\t                    var prevLabel = textEls[textEls.length - 2];\n\t                    if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n\t                        lastLabel.ignore = true;\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         */\n\t        axisName: function () {\n\t            var opt = this.opt;\n\t            var axisModel = this.axisModel;\n\t            var name = retrieve(opt.axisName, axisModel.get('name'));\n\t\n\t            if (!name) {\n\t                return;\n\t            }\n\t\n\t            var nameLocation = axisModel.get('nameLocation');\n\t            var nameDirection = opt.nameDirection;\n\t            var textStyleModel = axisModel.getModel('nameTextStyle');\n\t            var gap = axisModel.get('nameGap') || 0;\n\t\n\t            var extent = this.axisModel.axis.getExtent();\n\t            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n\t            var pos = [\n\t                nameLocation === 'start'\n\t                    ? extent[0] - gapSignal * gap\n\t                    : nameLocation === 'end'\n\t                    ? extent[1] + gapSignal * gap\n\t                    : (extent[0] + extent[1]) / 2, // 'middle'\n\t                // Reuse labelOffset.\n\t                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n\t            ];\n\t\n\t            var labelLayout;\n\t\n\t            var nameRotation = axisModel.get('nameRotate');\n\t            if (nameRotation != null) {\n\t                nameRotation = nameRotation * PI / 180; // To radian.\n\t            }\n\t\n\t            var axisNameAvailableWidth;\n\t\n\t            if (nameLocation === 'middle') {\n\t                labelLayout = innerTextLayout(\n\t                    opt,\n\t                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n\t                    nameDirection\n\t                );\n\t            }\n\t            else {\n\t                labelLayout = endTextLayout(\n\t                    opt, nameLocation, nameRotation || 0, extent\n\t                );\n\t\n\t                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\t                if (axisNameAvailableWidth != null) {\n\t                    axisNameAvailableWidth = Math.abs(\n\t                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n\t                    );\n\t                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n\t                }\n\t            }\n\t\n\t            var textFont = textStyleModel.getFont();\n\t\n\t            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n\t            var ellipsis = truncateOpt.ellipsis;\n\t            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n\t            var truncatedText = (ellipsis != null && maxWidth != null)\n\t                ? formatUtil.truncateText(\n\t                    name, maxWidth, textFont, ellipsis,\n\t                    {minChar: 2, placeholder: truncateOpt.placeholder}\n\t                )\n\t                : name;\n\t\n\t            var tooltipOpt = axisModel.get('tooltip', true);\n\t\n\t            var mainType = axisModel.mainType;\n\t            var formatterParams = {\n\t                componentType: mainType,\n\t                name: name,\n\t                $vars: ['name']\n\t            };\n\t            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\t\n\t            var textEl = new graphic.Text({\n\t\n\t                // Id for animation\n\t                anid: 'name',\n\t\n\t                __fullText: name,\n\t                __truncatedText: truncatedText,\n\t\n\t                style: {\n\t                    text: truncatedText,\n\t                    textFont: textFont,\n\t                    fill: textStyleModel.getTextColor()\n\t                        || axisModel.get('axisLine.lineStyle.color'),\n\t                    textAlign: labelLayout.textAlign,\n\t                    textVerticalAlign: labelLayout.verticalAlign\n\t                },\n\t                position: pos,\n\t                rotation: labelLayout.rotation,\n\t                silent: isSilent(axisModel),\n\t                z2: 1,\n\t                tooltip: (tooltipOpt && tooltipOpt.show)\n\t                    ? zrUtil.extend({\n\t                        content: name,\n\t                        formatter: function () {\n\t                            return name;\n\t                        },\n\t                        formatterParams: formatterParams\n\t                    }, tooltipOpt)\n\t                    : null\n\t            });\n\t\n\t            if (axisModel.get('triggerEvent')) {\n\t                textEl.eventData = makeAxisEventDataBase(axisModel);\n\t                textEl.eventData.targetType = 'axisName';\n\t                textEl.eventData.name = name;\n\t            }\n\t\n\t            // FIXME\n\t            this._dumbGroup.add(textEl);\n\t            textEl.updateTransform();\n\t\n\t            this.group.add(textEl);\n\t\n\t            textEl.decomposeTransform();\n\t        }\n\t\n\t    };\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function innerTextLayout(opt, textRotation, direction) {\n\t        var rotationDiff = remRadian(textRotation - opt.rotation);\n\t        var textAlign;\n\t        var verticalAlign;\n\t\n\t        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n\t            verticalAlign = direction > 0 ? 'top' : 'bottom';\n\t            textAlign = 'center';\n\t        }\n\t        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n\t            verticalAlign = direction > 0 ? 'bottom' : 'top';\n\t            textAlign = 'center';\n\t        }\n\t        else {\n\t            verticalAlign = 'middle';\n\t\n\t            if (rotationDiff > 0 && rotationDiff < PI) {\n\t                textAlign = direction > 0 ? 'right' : 'left';\n\t            }\n\t            else {\n\t                textAlign = direction > 0 ? 'left' : 'right';\n\t            }\n\t        }\n\t\n\t        return {\n\t            rotation: rotationDiff,\n\t            textAlign: textAlign,\n\t            verticalAlign: verticalAlign\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function endTextLayout(opt, textPosition, textRotate, extent) {\n\t        var rotationDiff = remRadian(textRotate - opt.rotation);\n\t        var textAlign;\n\t        var verticalAlign;\n\t        var inverse = extent[0] > extent[1];\n\t        var onLeft = (textPosition === 'start' && !inverse)\n\t            || (textPosition !== 'start' && inverse);\n\t\n\t        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n\t            verticalAlign = onLeft ? 'bottom' : 'top';\n\t            textAlign = 'center';\n\t        }\n\t        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n\t            verticalAlign = onLeft ? 'top' : 'bottom';\n\t            textAlign = 'center';\n\t        }\n\t        else {\n\t            verticalAlign = 'middle';\n\t            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n\t                textAlign = onLeft ? 'left' : 'right';\n\t            }\n\t            else {\n\t                textAlign = onLeft ? 'right' : 'left';\n\t            }\n\t        }\n\t\n\t        return {\n\t            rotation: rotationDiff,\n\t            textAlign: textAlign,\n\t            verticalAlign: verticalAlign\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function isSilent(axisModel) {\n\t        var tooltipOpt = axisModel.get('tooltip');\n\t        return axisModel.get('silent')\n\t            // Consider mouse cursor, add these restrictions.\n\t            || !(\n\t                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n\t            );\n\t    }\n\t\n\t    /**\n\t     * @static\n\t     */\n\t    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n\t        var rawTick;\n\t        var scale = axis.scale;\n\t        return scale.type === 'ordinal'\n\t            && (\n\t                typeof interval === 'function'\n\t                    ? (\n\t                        rawTick = scale.getTicks()[i],\n\t                        !interval(rawTick, scale.getLabel(rawTick))\n\t                    )\n\t                    : i % (interval + 1)\n\t            );\n\t    };\n\t\n\t    /**\n\t     * @static\n\t     */\n\t    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n\t        var interval = model.get('interval');\n\t        if (interval == null || interval == 'auto') {\n\t            interval = labelInterval;\n\t        }\n\t        return interval;\n\t    };\n\t\n\t    module.exports = AxisBuilder;\n\t\n\n\n/***/ },\n/* 616 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// FIXME Better way to pack data in graphic element\n\t\n\t\n\t    __webpack_require__(617);\n\t\n\t    __webpack_require__(618);\n\t\n\t    // Show tip action\n\t    /**\n\t     * @action\n\t     * @property {string} type\n\t     * @property {number} seriesIndex\n\t     * @property {number} dataIndex\n\t     * @property {number} [x]\n\t     * @property {number} [y]\n\t     */\n\t    __webpack_require__(484).registerAction(\n\t        {\n\t            type: 'showTip',\n\t            event: 'showTip',\n\t            update: 'none'\n\t        },\n\t        // noop\n\t        function () {}\n\t    );\n\t    // Hide tip action\n\t    __webpack_require__(484).registerAction(\n\t        {\n\t            type: 'hideTip',\n\t            event: 'hideTip',\n\t            update: 'none'\n\t        },\n\t        // noop\n\t        function () {}\n\t    );\n\n\n/***/ },\n/* 617 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    __webpack_require__(484).extendComponentModel({\n\t\n\t        type: 'tooltip',\n\t\n\t        defaultOption: {\n\t            zlevel: 0,\n\t\n\t            z: 8,\n\t\n\t            show: true,\n\t\n\t            // tooltip主体内容\n\t            showContent: true,\n\t\n\t            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n\t            trigger: 'item',\n\t\n\t            // 触发条件，支持 'click' | 'mousemove' | 'none'\n\t            triggerOn: 'mousemove',\n\t\n\t            // 是否永远显示 content\n\t            alwaysShowContent: false,\n\t\n\t            // 位置 {Array} | {Function}\n\t            // position: null\n\t\n\t            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n\t            confine: false,\n\t\n\t            // 内容格式器：{string}（Template） ¦ {Function}\n\t            // formatter: null\n\t\n\t            showDelay: 0,\n\t\n\t            // 隐藏延迟，单位ms\n\t            hideDelay: 100,\n\t\n\t            // 动画变换时间，单位s\n\t            transitionDuration: 0.4,\n\t\n\t            enterable: false,\n\t\n\t            // 提示背景颜色，默认为透明度为0.7的黑色\n\t            backgroundColor: 'rgba(50,50,50,0.7)',\n\t\n\t            // 提示边框颜色\n\t            borderColor: '#333',\n\t\n\t            // 提示边框圆角，单位px，默认为4\n\t            borderRadius: 4,\n\t\n\t            // 提示边框线宽，单位px，默认为0（无边框）\n\t            borderWidth: 0,\n\t\n\t            // 提示内边距，单位px，默认各方向内边距为5，\n\t            // 接受数组分别设定上右下左边距，同css\n\t            padding: 5,\n\t\n\t            // Extra css text\n\t            extraCssText: '',\n\t\n\t            // 坐标轴指示器，坐标轴触发有效\n\t            axisPointer: {\n\t                // 默认为直线\n\t                // 可选为：'line' | 'shadow' | 'cross'\n\t                type: 'line',\n\t\n\t                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n\t                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n\t                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n\t                // 极坐标系会默认选择 angle 轴\n\t                axis: 'auto',\n\t\n\t                animation: true,\n\t                animationDurationUpdate: 200,\n\t                animationEasingUpdate: 'exponentialOut',\n\t\n\t                // 直线指示器样式设置\n\t                lineStyle: {\n\t                    color: '#555',\n\t                    width: 1,\n\t                    type: 'solid'\n\t                },\n\t\n\t                crossStyle: {\n\t                    color: '#555',\n\t                    width: 1,\n\t                    type: 'dashed',\n\t\n\t                    // TODO formatter\n\t                    textStyle: {}\n\t                },\n\t\n\t                // 阴影指示器样式设置\n\t                shadowStyle: {\n\t                    color: 'rgba(150,150,150,0.3)'\n\t                }\n\t            },\n\t            textStyle: {\n\t                color: '#fff',\n\t                fontSize: 14\n\t            }\n\t        }\n\t    });\n\n\n/***/ },\n/* 618 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var TooltipContent = __webpack_require__(619);\n\t    var graphic = __webpack_require__(525);\n\t    var zrUtil = __webpack_require__(483);\n\t    var formatUtil = __webpack_require__(488);\n\t    var numberUtil = __webpack_require__(489);\n\t    var modelUtil = __webpack_require__(487);\n\t    var parsePercent = numberUtil.parsePercent;\n\t    var env = __webpack_require__(485);\n\t    var Model = __webpack_require__(494);\n\t\n\t    function dataEqual(a, b) {\n\t        if (!a || !b) {\n\t            return false;\n\t        }\n\t        var round = numberUtil.round;\n\t        return round(a[0]) === round(b[0])\n\t            && round(a[1]) === round(b[1]);\n\t    }\n\t    /**\n\t     * @inner\n\t     */\n\t    function makeLineShape(x1, y1, x2, y2) {\n\t        return {\n\t            x1: x1,\n\t            y1: y1,\n\t            x2: x2,\n\t            y2: y2\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function makeRectShape(x, y, width, height) {\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            width: width,\n\t            height: height\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n\t        return {\n\t            cx: cx,\n\t            cy: cy,\n\t            r0: r0,\n\t            r: r,\n\t            startAngle: startAngle,\n\t            endAngle: endAngle,\n\t            clockwise: true\n\t        };\n\t    }\n\t\n\t    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n\t        var width = el.clientWidth;\n\t        var height = el.clientHeight;\n\t        var gap = 20;\n\t\n\t        if (x + width + gap > viewWidth) {\n\t            x -= width + gap;\n\t        }\n\t        else {\n\t            x += gap;\n\t        }\n\t        if (y + height + gap > viewHeight) {\n\t            y -= height + gap;\n\t        }\n\t        else {\n\t            y += gap;\n\t        }\n\t        return [x, y];\n\t    }\n\t\n\t    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n\t        var width = el.clientWidth;\n\t        var height = el.clientHeight;\n\t\n\t        x = Math.min(x + width, viewWidth) - width;\n\t        y = Math.min(y + height, viewHeight) - height;\n\t        x = Math.max(x, 0);\n\t        y = Math.max(y, 0);\n\t\n\t        return [x, y];\n\t    }\n\t\n\t    function calcTooltipPosition(position, rect, dom) {\n\t        var domWidth = dom.clientWidth;\n\t        var domHeight = dom.clientHeight;\n\t        var gap = 5;\n\t        var x = 0;\n\t        var y = 0;\n\t        var rectWidth = rect.width;\n\t        var rectHeight = rect.height;\n\t        switch (position) {\n\t            case 'inside':\n\t                x = rect.x + rectWidth / 2 - domWidth / 2;\n\t                y = rect.y + rectHeight / 2 - domHeight / 2;\n\t                break;\n\t            case 'top':\n\t                x = rect.x + rectWidth / 2 - domWidth / 2;\n\t                y = rect.y - domHeight - gap;\n\t                break;\n\t            case 'bottom':\n\t                x = rect.x + rectWidth / 2 - domWidth / 2;\n\t                y = rect.y + rectHeight + gap;\n\t                break;\n\t            case 'left':\n\t                x = rect.x - domWidth - gap;\n\t                y = rect.y + rectHeight / 2 - domHeight / 2;\n\t                break;\n\t            case 'right':\n\t                x = rect.x + rectWidth + gap;\n\t                y = rect.y + rectHeight / 2 - domHeight / 2;\n\t        }\n\t        return [x, y];\n\t    }\n\t\n\t    /**\n\t     * @param  {string|Function|Array.<number>} positionExpr\n\t     * @param  {number} x Mouse x\n\t     * @param  {number} y Mouse y\n\t     * @param  {boolean} confine Whether confine tooltip content in view rect.\n\t     * @param  {module:echarts/component/tooltip/TooltipContent} content\n\t     * @param  {Object|<Array.<Object>} params\n\t     * @param  {module:zrender/Element} el target element\n\t     * @param  {module:echarts/ExtensionAPI} api\n\t     * @return {Array.<number>}\n\t     */\n\t    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n\t        var viewWidth = api.getWidth();\n\t        var viewHeight = api.getHeight();\n\t\n\t        var rect = el && el.getBoundingRect().clone();\n\t        el && rect.applyTransform(el.transform);\n\t        if (typeof positionExpr === 'function') {\n\t            // Callback of position can be an array or a string specify the position\n\t            positionExpr = positionExpr([x, y], params, content.el, rect);\n\t        }\n\t\n\t        if (zrUtil.isArray(positionExpr)) {\n\t            x = parsePercent(positionExpr[0], viewWidth);\n\t            y = parsePercent(positionExpr[1], viewHeight);\n\t        }\n\t        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n\t        else if (typeof positionExpr === 'string' && el) {\n\t            var pos = calcTooltipPosition(\n\t                positionExpr, rect, content.el\n\t            );\n\t            x = pos[0];\n\t            y = pos[1];\n\t        }\n\t        else {\n\t            var pos = refixTooltipPosition(\n\t                x, y, content.el, viewWidth, viewHeight\n\t            );\n\t            x = pos[0];\n\t            y = pos[1];\n\t        }\n\t\n\t        if (confine) {\n\t            var pos = confineTooltipPosition(\n\t                x, y, content.el, viewWidth, viewHeight\n\t            );\n\t            x = pos[0];\n\t            y = pos[1];\n\t        }\n\t\n\t        content.moveTo(x, y);\n\t    }\n\t\n\t    function ifSeriesSupportAxisTrigger(seriesModel) {\n\t        var coordSys = seriesModel.coordinateSystem;\n\t        var trigger = seriesModel.get('tooltip.trigger', true);\n\t        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n\t        return !(!coordSys\n\t            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n\t            || trigger === 'item');\n\t    }\n\t\n\t    __webpack_require__(484).extendComponentView({\n\t\n\t        type: 'tooltip',\n\t\n\t        _axisPointers: {},\n\t\n\t        init: function (ecModel, api) {\n\t            if (env.node) {\n\t                return;\n\t            }\n\t            var tooltipContent = new TooltipContent(api.getDom(), api);\n\t            this._tooltipContent = tooltipContent;\n\t\n\t            api.on('showTip', this._manuallyShowTip, this);\n\t            api.on('hideTip', this._manuallyHideTip, this);\n\t        },\n\t\n\t        render: function (tooltipModel, ecModel, api) {\n\t            if (env.node) {\n\t                return;\n\t            }\n\t\n\t            // Reset\n\t            this.group.removeAll();\n\t\n\t            /**\n\t             * @type {Object}\n\t             * @private\n\t             */\n\t            this._axisPointers = {};\n\t\n\t            /**\n\t             * @private\n\t             * @type {module:echarts/component/tooltip/TooltipModel}\n\t             */\n\t            this._tooltipModel = tooltipModel;\n\t\n\t            /**\n\t             * @private\n\t             * @type {module:echarts/model/Global}\n\t             */\n\t            this._ecModel = ecModel;\n\t\n\t            /**\n\t             * @private\n\t             * @type {module:echarts/ExtensionAPI}\n\t             */\n\t            this._api = api;\n\t\n\t            /**\n\t             * @type {Object}\n\t             * @private\n\t             */\n\t            this._lastHover = {\n\t                // data\n\t                // payloadBatch\n\t            };\n\t\n\t            var tooltipContent = this._tooltipContent;\n\t            tooltipContent.update();\n\t            tooltipContent.enterable = tooltipModel.get('enterable');\n\t            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\t\n\t            /**\n\t             * @type {Object.<string, Array>}\n\t             */\n\t            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n\t                tooltipModel, ecModel\n\t            );\n\t\n\t            var crossText = this._crossText;\n\t            if (crossText) {\n\t                this.group.add(crossText);\n\t            }\n\t\n\t            var triggerOn = tooltipModel.get('triggerOn');\n\t\n\t            // Try to keep the tooltip show when refreshing\n\t            if (this._lastX != null\n\t                && this._lastY != null\n\t                // When user is willing to control tooltip totally using API,\n\t                // self._manuallyShowTip({x, y}) might cause tooltip hide,\n\t                // which is not expected.\n\t                && triggerOn !== 'none'\n\t            ) {\n\t                var self = this;\n\t                clearTimeout(this._refreshUpdateTimeout);\n\t                this._refreshUpdateTimeout = setTimeout(function () {\n\t                    // Show tip next tick after other charts are rendered\n\t                    // In case highlight action has wrong result\n\t                    // FIXME\n\t                    self._manuallyShowTip({\n\t                        x: self._lastX,\n\t                        y: self._lastY\n\t                    });\n\t                });\n\t            }\n\t\n\t            var zr = this._api.getZr();\n\t            zr.off('click', this._tryShow);\n\t            zr.off('mousemove', this._mousemove);\n\t            zr.off('mouseout', this._hide);\n\t            zr.off('globalout', this._hide);\n\t\n\t            if (triggerOn === 'click') {\n\t                zr.on('click', this._tryShow, this);\n\t            }\n\t            else if (triggerOn === 'mousemove') {\n\t                zr.on('mousemove', this._mousemove, this);\n\t                zr.on('mouseout', this._hide, this);\n\t                zr.on('globalout', this._hide, this);\n\t            }\n\t            // else triggerOn is 'none', which enable user\n\t            // to control tooltip totally using API.\n\t        },\n\t\n\t        _mousemove: function (e) {\n\t            var showDelay = this._tooltipModel.get('showDelay');\n\t            var self = this;\n\t            clearTimeout(this._showTimeout);\n\t            if (showDelay > 0) {\n\t                this._showTimeout = setTimeout(function () {\n\t                    self._tryShow(e);\n\t                }, showDelay);\n\t            }\n\t            else {\n\t                this._tryShow(e);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Show tip manually by\n\t         * dispatchAction({\n\t         *     type: 'showTip',\n\t         *     x: 10,\n\t         *     y: 10\n\t         * });\n\t         * Or\n\t         * dispatchAction({\n\t         *      type: 'showTip',\n\t         *      seriesIndex: 0,\n\t         *      dataIndex or dataIndexInside or name\n\t         * });\n\t         *\n\t         *  TODO Batch\n\t         */\n\t        _manuallyShowTip: function (event) {\n\t            // From self\n\t            if (event.from === this.uid) {\n\t                return;\n\t            }\n\t\n\t            var ecModel = this._ecModel;\n\t            var seriesIndex = event.seriesIndex;\n\t            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\t            var api = this._api;\n\t\n\t            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n\t            function seriesHaveDataOnIndex(_series) {\n\t                var data = _series.getData();\n\t                var dataIndex = modelUtil.queryDataIndex(data, event);\n\t                // Have single dataIndex\n\t                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n\t                    && data.hasValue(dataIndex)\n\t                ) {\n\t                    return true;\n\t                }\n\t            }\n\t\n\t            if (event.x == null || event.y == null) {\n\t                if (isTriggerAxis) {\n\t                    // Find another series.\n\t                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n\t                        seriesModel = null;\n\t                    }\n\t                    if (!seriesModel) {\n\t                        // Find the first series can use axis trigger And data is not null\n\t                        ecModel.eachSeries(function (_series) {\n\t                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n\t                                if (seriesHaveDataOnIndex(_series)) {\n\t                                    seriesModel = _series;\n\t                                }\n\t                            }\n\t                        });\n\t                    }\n\t                }\n\t                else {\n\t                    // Use the first series by default.\n\t                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n\t                }\n\t                if (seriesModel) {\n\t                    var data = seriesModel.getData();\n\t                    var dataIndex = modelUtil.queryDataIndex(data, event);\n\t\n\t                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n\t                        return;\n\t                    }\n\t\n\t                    var el = data.getItemGraphicEl(dataIndex);\n\t                    var cx;\n\t                    var cy;\n\t                    // Try to get the point in coordinate system\n\t                    var coordSys = seriesModel.coordinateSystem;\n\t                    if (seriesModel.getTooltipPosition) {\n\t                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n\t                        cx = point[0];\n\t                        cy = point[1];\n\t                    }\n\t                    else if (coordSys && coordSys.dataToPoint) {\n\t                        var point = coordSys.dataToPoint(\n\t                            data.getValues(\n\t                                zrUtil.map(coordSys.dimensions, function (dim) {\n\t                                    return seriesModel.coordDimToDataDim(dim)[0];\n\t                                }), dataIndex, true\n\t                            )\n\t                        );\n\t                        cx = point && point[0];\n\t                        cy = point && point[1];\n\t                    }\n\t                    else if (el) {\n\t                        // Use graphic bounding rect\n\t                        var rect = el.getBoundingRect().clone();\n\t                        rect.applyTransform(el.transform);\n\t                        cx = rect.x + rect.width / 2;\n\t                        cy = rect.y + rect.height / 2;\n\t                    }\n\t\n\t                    if (cx != null && cy != null) {\n\t                        this._tryShow({\n\t                            offsetX: cx,\n\t                            offsetY: cy,\n\t                            position: event.position,\n\t                            target: el,\n\t                            event: {}\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                var el = api.getZr().handler.findHover(event.x, event.y);\n\t                this._tryShow({\n\t                    offsetX: event.x,\n\t                    offsetY: event.y,\n\t                    position: event.position,\n\t                    target: el,\n\t                    event: {}\n\t                });\n\t            }\n\t        },\n\t\n\t        _manuallyHideTip: function (e) {\n\t            if (e.from === this.uid) {\n\t                return;\n\t            }\n\t\n\t            this._hide();\n\t        },\n\t\n\t        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n\t            // Prepare data for axis trigger\n\t            var seriesGroupByAxis = {};\n\t            ecModel.eachSeries(function (seriesModel) {\n\t                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n\t                    var coordSys = seriesModel.coordinateSystem;\n\t                    var baseAxis;\n\t                    var key;\n\t\n\t                    // Only cartesian2d, polar and single support axis trigger\n\t                    if (coordSys.type === 'cartesian2d') {\n\t                        // FIXME `axisPointer.axis` is not baseAxis\n\t                        baseAxis = coordSys.getBaseAxis();\n\t                        key = baseAxis.dim + baseAxis.index;\n\t                    }\n\t                    else if (coordSys.type === 'singleAxis') {\n\t                        baseAxis = coordSys.getAxis();\n\t                        key = baseAxis.dim + baseAxis.type;\n\t                    }\n\t                    else {\n\t                        baseAxis = coordSys.getBaseAxis();\n\t                        key = baseAxis.dim + coordSys.name;\n\t                    }\n\t\n\t                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n\t                        coordSys: [],\n\t                        series: []\n\t                    };\n\t                    seriesGroupByAxis[key].coordSys.push(coordSys);\n\t                    seriesGroupByAxis[key].series.push(seriesModel);\n\t                }\n\t            }, this);\n\t\n\t            return seriesGroupByAxis;\n\t        },\n\t\n\t        /**\n\t         * mousemove handler\n\t         * @param {Object} e\n\t         * @private\n\t         */\n\t        _tryShow: function (e) {\n\t            var el = e.target;\n\t            var tooltipModel = this._tooltipModel;\n\t            var globalTrigger = tooltipModel.get('trigger');\n\t            var ecModel = this._ecModel;\n\t            var api = this._api;\n\t\n\t            if (!tooltipModel) {\n\t                return;\n\t            }\n\t\n\t            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\t            this._lastX = e.offsetX;\n\t            this._lastY = e.offsetY;\n\t\n\t            // Always show item tooltip if mouse is on the element with dataIndex\n\t            if (el && el.dataIndex != null) {\n\t                // Use dataModel in element if possible\n\t                // Used when mouseover on a element like markPoint or edge\n\t                // In which case, the data is not main data in series.\n\t                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n\t                var dataIndex = el.dataIndex;\n\t                var itemModel = dataModel.getData().getItemModel(dataIndex);\n\t                // Series or single data may use item trigger when global is axis trigger\n\t                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n\t                    this._showAxisTooltip(tooltipModel, ecModel, e);\n\t                }\n\t                else {\n\t                    // Reset ticket\n\t                    this._ticket = '';\n\t                    // If either single data or series use item trigger\n\t                    this._hideAxisPointer();\n\t                    // Reset last hover and dispatch downplay action\n\t                    this._resetLastHover();\n\t\n\t                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n\t                }\n\t\n\t                api.dispatchAction({\n\t                    type: 'showTip',\n\t                    from: this.uid,\n\t                    dataIndexInside: el.dataIndex,\n\t                    seriesIndex: el.seriesIndex\n\t                });\n\t            }\n\t            // Tooltip provided directly. Like legend\n\t            else if (el && el.tooltip) {\n\t                var tooltipOpt = el.tooltip;\n\t                if (typeof tooltipOpt === 'string') {\n\t                    var content = tooltipOpt;\n\t                    tooltipOpt = {\n\t                        content: content,\n\t                        // Fixed formatter\n\t                        formatter: content\n\t                    };\n\t                }\n\t                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n\t                var defaultHtml = subTooltipModel.get('content');\n\t                var asyncTicket = Math.random();\n\t                this._showTooltipContent(\n\t                    // TODO params\n\t                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n\t                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n\t                );\n\t            }\n\t            else {\n\t                if (globalTrigger === 'item') {\n\t                    this._hide();\n\t                }\n\t                else {\n\t                    // Try show axis tooltip\n\t                    this._showAxisTooltip(tooltipModel, ecModel, e);\n\t                }\n\t\n\t                // Action of cross pointer\n\t                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n\t                if (tooltipModel.get('axisPointer.type') === 'cross') {\n\t                    api.dispatchAction({\n\t                        type: 'showTip',\n\t                        from: this.uid,\n\t                        x: e.offsetX,\n\t                        y: e.offsetY\n\t                    });\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Show tooltip on axis\n\t         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n\t         * @param {module:echarts/model/Global} ecModel\n\t         * @param {Object} e\n\t         * @private\n\t         */\n\t        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n\t            var axisPointerModel = tooltipModel.getModel('axisPointer');\n\t            var axisPointerType = axisPointerModel.get('type');\n\t\n\t            if (axisPointerType === 'cross') {\n\t                var el = e.target;\n\t                if (el && el.dataIndex != null) {\n\t                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n\t                    var dataIndex = el.dataIndex;\n\t                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n\t                }\n\t            }\n\t\n\t            this._showAxisPointer();\n\t            var allNotShow = true;\n\t            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n\t                // Try show the axis pointer\n\t                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n\t                var coordSys = allCoordSys[0];\n\t\n\t                // If mouse position is not in the grid or polar\n\t                var point = [e.offsetX, e.offsetY];\n\t\n\t                if (!coordSys.containPoint(point)) {\n\t                    // Hide axis pointer\n\t                    this._hideAxisPointer(coordSys.name);\n\t                    return;\n\t                }\n\t\n\t                allNotShow = false;\n\t                // Make sure point is discrete on cateogry axis\n\t                var dimensions = coordSys.dimensions;\n\t                var value = coordSys.pointToData(point, true);\n\t                point = coordSys.dataToPoint(value);\n\t                var baseAxis = coordSys.getBaseAxis();\n\t                var axisType = axisPointerModel.get('axis');\n\t                if (axisType === 'auto') {\n\t                    axisType = baseAxis.dim;\n\t                }\n\t\n\t                var contentNotChange = false;\n\t                var lastHover = this._lastHover;\n\t                if (axisPointerType === 'cross') {\n\t                    // If hover data not changed\n\t                    // Possible when two axes are all category\n\t                    if (dataEqual(lastHover.data, value)) {\n\t                        contentNotChange = true;\n\t                    }\n\t                    lastHover.data = value;\n\t                }\n\t                else {\n\t                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\t\n\t                    // If hover data not changed on the axis dimension\n\t                    if (lastHover.data === value[valIndex]) {\n\t                        contentNotChange = true;\n\t                    }\n\t                    lastHover.data = value[valIndex];\n\t                }\n\t\n\t                var enableAnimation = tooltipModel.get('animation');\n\t\n\t                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n\t                    this._showCartesianPointer(\n\t                        axisPointerModel, coordSys, axisType, point, enableAnimation\n\t                    );\n\t                }\n\t                else if (coordSys.type === 'polar' && !contentNotChange) {\n\t                    this._showPolarPointer(\n\t                        axisPointerModel, coordSys, axisType, point, enableAnimation\n\t                    );\n\t                }\n\t                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n\t                    this._showSinglePointer(\n\t                        axisPointerModel, coordSys, axisType, point, enableAnimation\n\t                    );\n\t                }\n\t\n\t                if (axisPointerType !== 'cross') {\n\t                    this._dispatchAndShowSeriesTooltipContent(\n\t                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n\t                    );\n\t                }\n\t            }, this);\n\t\n\t            if (!this._tooltipModel.get('show')) {\n\t                this._hideAxisPointer();\n\t            }\n\t\n\t            if (allNotShow) {\n\t                this._hide();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Show tooltip on axis of cartesian coordinate\n\t         * @param {module:echarts/model/Model} axisPointerModel\n\t         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n\t         * @param {string} axisType\n\t         * @param {Array.<number>} point\n\t         * @private\n\t         */\n\t        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n\t            var self = this;\n\t\n\t            var axisPointerType = axisPointerModel.get('type');\n\t            var baseAxis = cartesian.getBaseAxis();\n\t            var moveAnimation = enableAnimation\n\t                && axisPointerType !== 'cross'\n\t                && baseAxis.type === 'category'\n\t                && baseAxis.getBandWidth() > 20;\n\t\n\t            if (axisPointerType === 'cross') {\n\t                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n\t                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\t\n\t                this._updateCrossText(cartesian, point, axisPointerModel);\n\t            }\n\t            else {\n\t                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n\t                var otherExtent = otherAxis.getGlobalExtent();\n\t\n\t                if (cartesian.type === 'cartesian2d') {\n\t                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n\t                        axisType, point, otherExtent\n\t                    );\n\t                }\n\t            }\n\t\n\t            /**\n\t             * @inner\n\t             */\n\t            function moveGridLine(axisType, point, otherExtent) {\n\t                var targetShape = axisType === 'x'\n\t                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n\t                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\t\n\t                var pointerEl = self._getPointerElement(\n\t                    cartesian, axisPointerModel, axisType, targetShape\n\t                );\n\t                graphic.subPixelOptimizeLine({\n\t                    shape: targetShape,\n\t                    style: pointerEl.style\n\t                });\n\t\n\t                moveAnimation\n\t                    ? graphic.updateProps(pointerEl, {\n\t                        shape: targetShape\n\t                    }, axisPointerModel)\n\t                    :  pointerEl.attr({\n\t                        shape: targetShape\n\t                    });\n\t            }\n\t\n\t            /**\n\t             * @inner\n\t             */\n\t            function moveGridShadow(axisType, point, otherExtent) {\n\t                var axis = cartesian.getAxis(axisType);\n\t                var bandWidth = axis.getBandWidth();\n\t                var span = otherExtent[1] - otherExtent[0];\n\t                var targetShape = axisType === 'x'\n\t                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n\t                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\t\n\t                var pointerEl = self._getPointerElement(\n\t                    cartesian, axisPointerModel, axisType, targetShape\n\t                );\n\t                moveAnimation\n\t                    ? graphic.updateProps(pointerEl, {\n\t                        shape: targetShape\n\t                    }, axisPointerModel)\n\t                    :  pointerEl.attr({\n\t                        shape: targetShape\n\t                    });\n\t            }\n\t        },\n\t\n\t        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n\t            var self = this;\n\t            var axisPointerType = axisPointerModel.get('type');\n\t            var moveAnimation =\n\t                enableAnimation\n\t                && axisPointerType !== 'cross'\n\t                && single.getBaseAxis().type === 'category';\n\t            var rect = single.getRect();\n\t            var otherExtent = [rect.y, rect.y + rect.height];\n\t\n\t            moveSingleLine(axisType, point, otherExtent);\n\t\n\t            /**\n\t             * @inner\n\t             */\n\t            function moveSingleLine(axisType, point, otherExtent) {\n\t                var axis = single.getAxis();\n\t                var orient = axis.orient;\n\t\n\t                var targetShape = orient === 'horizontal'\n\t                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n\t                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\t\n\t                var pointerEl = self._getPointerElement(\n\t                    single, axisPointerModel, axisType, targetShape\n\t                );\n\t                moveAnimation\n\t                    ? graphic.updateProps(pointerEl, {\n\t                        shape: targetShape\n\t                    }, axisPointerModel)\n\t                    :  pointerEl.attr({\n\t                        shape: targetShape\n\t                    });\n\t            }\n\t\n\t        },\n\t\n\t        /**\n\t         * Show tooltip on axis of polar coordinate\n\t         * @param {module:echarts/model/Model} axisPointerModel\n\t         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n\t         * @param {string} axisType\n\t         * @param {Array.<number>} point\n\t         */\n\t        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n\t            var self = this;\n\t\n\t            var axisPointerType = axisPointerModel.get('type');\n\t\n\t            var angleAxis = polar.getAngleAxis();\n\t            var radiusAxis = polar.getRadiusAxis();\n\t\n\t            var moveAnimation = enableAnimation\n\t                && axisPointerType !== 'cross'\n\t                && polar.getBaseAxis().type === 'category';\n\t\n\t            if (axisPointerType === 'cross') {\n\t                movePolarLine('angle', point, radiusAxis.getExtent());\n\t                movePolarLine('radius', point, angleAxis.getExtent());\n\t\n\t                this._updateCrossText(polar, point, axisPointerModel);\n\t            }\n\t            else {\n\t                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n\t                var otherExtent = otherAxis.getExtent();\n\t\n\t                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n\t                    axisType, point, otherExtent\n\t                );\n\t            }\n\t            /**\n\t             * @inner\n\t             */\n\t            function movePolarLine(axisType, point, otherExtent) {\n\t                var mouseCoord = polar.pointToCoord(point);\n\t\n\t                var targetShape;\n\t\n\t                if (axisType === 'angle') {\n\t                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n\t                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n\t                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n\t                }\n\t                else {\n\t                    targetShape = {\n\t                        cx: polar.cx,\n\t                        cy: polar.cy,\n\t                        r: mouseCoord[0]\n\t                    };\n\t                }\n\t\n\t                var pointerEl = self._getPointerElement(\n\t                    polar, axisPointerModel, axisType, targetShape\n\t                );\n\t\n\t                moveAnimation\n\t                    ? graphic.updateProps(pointerEl, {\n\t                        shape: targetShape\n\t                    }, axisPointerModel)\n\t                    :  pointerEl.attr({\n\t                        shape: targetShape\n\t                    });\n\t            }\n\t\n\t            /**\n\t             * @inner\n\t             */\n\t            function movePolarShadow(axisType, point, otherExtent) {\n\t                var axis = polar.getAxis(axisType);\n\t                var bandWidth = axis.getBandWidth();\n\t\n\t                var mouseCoord = polar.pointToCoord(point);\n\t\n\t                var targetShape;\n\t\n\t                var radian = Math.PI / 180;\n\t\n\t                if (axisType === 'angle') {\n\t                    targetShape = makeSectorShape(\n\t                        polar.cx, polar.cy,\n\t                        otherExtent[0], otherExtent[1],\n\t                        // In ECharts y is negative if angle is positive\n\t                        (-mouseCoord[1] - bandWidth / 2) * radian,\n\t                        (-mouseCoord[1] + bandWidth / 2) * radian\n\t                    );\n\t                }\n\t                else {\n\t                    targetShape = makeSectorShape(\n\t                        polar.cx, polar.cy,\n\t                        mouseCoord[0] - bandWidth / 2,\n\t                        mouseCoord[0] + bandWidth / 2,\n\t                        0, Math.PI * 2\n\t                    );\n\t                }\n\t\n\t                var pointerEl = self._getPointerElement(\n\t                    polar, axisPointerModel, axisType, targetShape\n\t                );\n\t                moveAnimation\n\t                    ? graphic.updateProps(pointerEl, {\n\t                        shape: targetShape\n\t                    }, axisPointerModel)\n\t                    :  pointerEl.attr({\n\t                        shape: targetShape\n\t                    });\n\t            }\n\t        },\n\t\n\t        _updateCrossText: function (coordSys, point, axisPointerModel) {\n\t            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n\t            var textStyleModel = crossStyleModel.getModel('textStyle');\n\t\n\t            var tooltipModel = this._tooltipModel;\n\t\n\t            var text = this._crossText;\n\t            if (!text) {\n\t                text = this._crossText = new graphic.Text({\n\t                    style: {\n\t                        textAlign: 'left',\n\t                        textVerticalAlign: 'bottom'\n\t                    }\n\t                });\n\t                this.group.add(text);\n\t            }\n\t\n\t            var value = coordSys.pointToData(point);\n\t\n\t            var dims = coordSys.dimensions;\n\t            value = zrUtil.map(value, function (val, idx) {\n\t                var axis = coordSys.getAxis(dims[idx]);\n\t                if (axis.type === 'category' || axis.type === 'time') {\n\t                    val = axis.scale.getLabel(val);\n\t                }\n\t                else {\n\t                    val = formatUtil.addCommas(\n\t                        val.toFixed(axis.getPixelPrecision())\n\t                    );\n\t                }\n\t                return val;\n\t            });\n\t\n\t            text.setStyle({\n\t                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n\t                textFont: textStyleModel.getFont(),\n\t                text: value.join(', '),\n\t                x: point[0] + 5,\n\t                y: point[1] - 5\n\t            });\n\t            text.z = tooltipModel.get('z');\n\t            text.zlevel = tooltipModel.get('zlevel');\n\t        },\n\t\n\t        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n\t            var tooltipModel = this._tooltipModel;\n\t            var z = tooltipModel.get('z');\n\t            var zlevel = tooltipModel.get('zlevel');\n\t            var axisPointers = this._axisPointers;\n\t            var coordSysName = coordSys.name;\n\t            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n\t            if (axisPointers[coordSysName][axisType]) {\n\t                return axisPointers[coordSysName][axisType];\n\t            }\n\t\n\t            // Create if not exists\n\t            var pointerType = pointerModel.get('type');\n\t            var styleModel = pointerModel.getModel(pointerType + 'Style');\n\t            var isShadow = pointerType === 'shadow';\n\t            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\t\n\t            var elementType = coordSys.type === 'polar'\n\t                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n\t                : (isShadow ? 'Rect' : 'Line');\n\t\n\t            isShadow ? (style.stroke = null) : (style.fill = null);\n\t\n\t            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n\t                style: style,\n\t                z: z,\n\t                zlevel: zlevel,\n\t                silent: true,\n\t                shape: initShape\n\t            });\n\t\n\t            this.group.add(el);\n\t            return el;\n\t        },\n\t\n\t        /**\n\t         * Dispatch actions and show tooltip on series\n\t         * @param {Array.<module:echarts/model/Series>} seriesList\n\t         * @param {Array.<number>} point\n\t         * @param {Array.<number>} value\n\t         * @param {boolean} contentNotChange\n\t         * @param {Array.<number>|string|Function} [positionExpr]\n\t         */\n\t        _dispatchAndShowSeriesTooltipContent: function (\n\t            coordSys, seriesList, point, value, contentNotChange, positionExpr\n\t        ) {\n\t\n\t            var rootTooltipModel = this._tooltipModel;\n\t\n\t            var baseAxis = coordSys.getBaseAxis();\n\t            var baseDimIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\t\n\t            var payloadBatch = zrUtil.map(seriesList, function (series) {\n\t                return {\n\t                    seriesIndex: series.seriesIndex,\n\t                    dataIndexInside: series.getAxisTooltipDataIndex\n\t                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n\t                        : series.getData().indexOfNearest(\n\t                            series.coordDimToDataDim(baseAxis.dim)[0],\n\t                            value[baseDimIndex],\n\t                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n\t                            false, baseAxis.type === 'category' ? 0.5 : null\n\t                        )\n\t                };\n\t            });\n\t            var sampleSeriesIndex;\n\t            zrUtil.each(payloadBatch, function (payload, idx) {\n\t                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n\t                    sampleSeriesIndex = idx;\n\t                }\n\t            });\n\t            // Fallback to 0.\n\t            sampleSeriesIndex = sampleSeriesIndex || 0;\n\t\n\t            var lastHover = this._lastHover;\n\t            var api = this._api;\n\t            // Dispatch downplay action\n\t            if (lastHover.payloadBatch && !contentNotChange) {\n\t                api.dispatchAction({\n\t                    type: 'downplay',\n\t                    batch: lastHover.payloadBatch\n\t                });\n\t            }\n\t            // Dispatch highlight action\n\t            if (!contentNotChange) {\n\t                api.dispatchAction({\n\t                    type: 'highlight',\n\t                    batch: payloadBatch\n\t                });\n\t                lastHover.payloadBatch = payloadBatch;\n\t            }\n\t            // Dispatch showTip action\n\t            api.dispatchAction({\n\t                type: 'showTip',\n\t                dataIndexInside: payloadBatch[sampleSeriesIndex].dataIndexInside,\n\t                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n\t                from: this.uid\n\t            });\n\t\n\t            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n\t                var paramsList = zrUtil.map(seriesList, function (series, index) {\n\t                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n\t                });\n\t\n\t                if (!contentNotChange) {\n\t                    // Update html content\n\t                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\t\n\t                    // Default tooltip content\n\t                    // FIXME\n\t                    // (1) shold be the first data which has name?\n\t                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\t                    var firstLine = baseAxis.type === 'time'\n\t                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n\t                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n\t                    var defaultHtml = (firstLine ? firstLine + '<br />' : '')\n\t                        + zrUtil.map(seriesList, function (series, index) {\n\t                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n\t                        }).join('<br />');\n\t\n\t                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\t\n\t                    this._showTooltipContent(\n\t                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n\t                        point[0], point[1], positionExpr, null, api\n\t                    );\n\t                }\n\t                else {\n\t                    updatePosition(\n\t                        positionExpr || rootTooltipModel.get('position'),\n\t                        point[0], point[1],\n\t                        rootTooltipModel.get('confine'),\n\t                        this._tooltipContent, paramsList, null, api\n\t                    );\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Show tooltip on item\n\t         * @param {module:echarts/model/Series} seriesModel\n\t         * @param {number} dataIndex\n\t         * @param {string} dataType\n\t         * @param {Object} e\n\t         */\n\t        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n\t            // FIXME Graph data\n\t            var api = this._api;\n\t            var data = seriesModel.getData(dataType);\n\t            var itemModel = data.getItemModel(dataIndex);\n\t\n\t            var tooltipOpt = itemModel.get('tooltip', true);\n\t            if (typeof tooltipOpt === 'string') {\n\t                // In each data item tooltip can be simply write:\n\t                // {\n\t                //  value: 10,\n\t                //  tooltip: 'Something you need to know'\n\t                // }\n\t                var tooltipContent = tooltipOpt;\n\t                tooltipOpt = {\n\t                    formatter: tooltipContent\n\t                };\n\t            }\n\t            var rootTooltipModel = this._tooltipModel;\n\t            var seriesTooltipModel = seriesModel.getModel(\n\t                'tooltip', rootTooltipModel\n\t            );\n\t            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\t\n\t            var params = seriesModel.getDataParams(dataIndex, dataType);\n\t            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\t\n\t            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\t\n\t            this._showTooltipContent(\n\t                tooltipModel, defaultHtml, params, asyncTicket,\n\t                e.offsetX, e.offsetY, e.position, e.target, api\n\t            );\n\t        },\n\t\n\t        _showTooltipContent: function (\n\t            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n\t        ) {\n\t            // Reset ticket\n\t            this._ticket = '';\n\t\n\t            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n\t                var tooltipContent = this._tooltipContent;\n\t                var confine = tooltipModel.get('confine');\n\t\n\t                var formatter = tooltipModel.get('formatter');\n\t                positionExpr = positionExpr || tooltipModel.get('position');\n\t                var html = defaultHtml;\n\t\n\t                if (formatter) {\n\t                    if (typeof formatter === 'string') {\n\t                        html = formatUtil.formatTpl(formatter, params);\n\t                    }\n\t                    else if (typeof formatter === 'function') {\n\t                        var self = this;\n\t                        var ticket = asyncTicket;\n\t                        var callback = function (cbTicket, html) {\n\t                            if (cbTicket === self._ticket) {\n\t                                tooltipContent.setContent(html);\n\t\n\t                                updatePosition(\n\t                                    positionExpr, x, y, confine,\n\t                                    tooltipContent, params, target, api\n\t                                );\n\t                            }\n\t                        };\n\t                        self._ticket = ticket;\n\t                        html = formatter(params, ticket, callback);\n\t                    }\n\t                }\n\t\n\t                tooltipContent.show(tooltipModel);\n\t                tooltipContent.setContent(html);\n\t\n\t                updatePosition(\n\t                    positionExpr, x, y, confine,\n\t                    tooltipContent, params, target, api\n\t                );\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Show axis pointer\n\t         * @param {string} [coordSysName]\n\t         */\n\t        _showAxisPointer: function (coordSysName) {\n\t            if (coordSysName) {\n\t                var axisPointers = this._axisPointers[coordSysName];\n\t                axisPointers && zrUtil.each(axisPointers, function (el) {\n\t                    el.show();\n\t                });\n\t            }\n\t            else {\n\t                this.group.eachChild(function (child) {\n\t                    child.show();\n\t                });\n\t                this.group.show();\n\t            }\n\t        },\n\t\n\t        _resetLastHover: function () {\n\t            var lastHover = this._lastHover;\n\t            if (lastHover.payloadBatch) {\n\t                this._api.dispatchAction({\n\t                    type: 'downplay',\n\t                    batch: lastHover.payloadBatch\n\t                });\n\t            }\n\t            // Reset lastHover\n\t            this._lastHover = {};\n\t        },\n\t        /**\n\t         * Hide axis pointer\n\t         * @param {string} [coordSysName]\n\t         */\n\t        _hideAxisPointer: function (coordSysName) {\n\t            if (coordSysName) {\n\t                var axisPointers = this._axisPointers[coordSysName];\n\t                axisPointers && zrUtil.each(axisPointers, function (el) {\n\t                    el.hide();\n\t                });\n\t            }\n\t            else {\n\t                if (this.group.children().length) {\n\t                    this.group.hide();\n\t                }\n\t            }\n\t        },\n\t\n\t        _hide: function () {\n\t            clearTimeout(this._showTimeout);\n\t\n\t            this._hideAxisPointer();\n\t            this._resetLastHover();\n\t            if (!this._alwaysShowContent) {\n\t                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n\t            }\n\t\n\t            this._api.dispatchAction({\n\t                type: 'hideTip',\n\t                from: this.uid\n\t            });\n\t\n\t            this._lastX = this._lastY = null;\n\t        },\n\t\n\t        dispose: function (ecModel, api) {\n\t            if (env.node) {\n\t                return;\n\t            }\n\t            var zr = api.getZr();\n\t            this._tooltipContent.hide();\n\t\n\t            zr.off('click', this._tryShow);\n\t            zr.off('mousemove', this._mousemove);\n\t            zr.off('mouseout', this._hide);\n\t            zr.off('globalout', this._hide);\n\t\n\t            api.off('showTip', this._manuallyShowTip);\n\t            api.off('hideTip', this._manuallyHideTip);\n\t        }\n\t    });\n\n\n/***/ },\n/* 619 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module echarts/component/tooltip/TooltipContent\n\t */\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var zrColor = __webpack_require__(521);\n\t    var eventUtil = __webpack_require__(570);\n\t    var formatUtil = __webpack_require__(488);\n\t    var each = zrUtil.each;\n\t    var toCamelCase = formatUtil.toCamelCase;\n\t    var env = __webpack_require__(485);\n\t\n\t    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\t\n\t    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\t\n\t    /**\n\t     * @param {number} duration\n\t     * @return {string}\n\t     * @inner\n\t     */\n\t    function assembleTransition(duration) {\n\t        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n\t        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n\t                            + 'top ' + duration + 's ' + transitionCurve;\n\t        return zrUtil.map(vendors, function (vendorPrefix) {\n\t            return vendorPrefix + 'transition:' + transitionText;\n\t        }).join(';');\n\t    }\n\t\n\t    /**\n\t     * @param {Object} textStyle\n\t     * @return {string}\n\t     * @inner\n\t     */\n\t    function assembleFont(textStyleModel) {\n\t        var cssText = [];\n\t\n\t        var fontSize = textStyleModel.get('fontSize');\n\t        var color = textStyleModel.getTextColor();\n\t\n\t        color && cssText.push('color:' + color);\n\t\n\t        cssText.push('font:' + textStyleModel.getFont());\n\t\n\t        fontSize &&\n\t            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\t\n\t        each(['decoration', 'align'], function (name) {\n\t            var val = textStyleModel.get(name);\n\t            val && cssText.push('text-' + name + ':' + val);\n\t        });\n\t\n\t        return cssText.join(';');\n\t    }\n\t\n\t    /**\n\t     * @param {Object} tooltipModel\n\t     * @return {string}\n\t     * @inner\n\t     */\n\t    function assembleCssText(tooltipModel) {\n\t\n\t        tooltipModel = tooltipModel;\n\t\n\t        var cssText = [];\n\t\n\t        var transitionDuration = tooltipModel.get('transitionDuration');\n\t        var backgroundColor = tooltipModel.get('backgroundColor');\n\t        var textStyleModel = tooltipModel.getModel('textStyle');\n\t        var padding = tooltipModel.get('padding');\n\t\n\t        // Animation transition\n\t        transitionDuration &&\n\t            cssText.push(assembleTransition(transitionDuration));\n\t\n\t        if (backgroundColor) {\n\t            if (env.canvasSupported) {\n\t                cssText.push('background-Color:' + backgroundColor);\n\t            }\n\t            else {\n\t                // for ie\n\t                cssText.push(\n\t                    'background-Color:#' + zrColor.toHex(backgroundColor)\n\t                );\n\t                cssText.push('filter:alpha(opacity=70)');\n\t            }\n\t        }\n\t\n\t        // Border style\n\t        each(['width', 'color', 'radius'], function (name) {\n\t            var borderName = 'border-' + name;\n\t            var camelCase = toCamelCase(borderName);\n\t            var val = tooltipModel.get(camelCase);\n\t            val != null &&\n\t                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n\t        });\n\t\n\t        // Text style\n\t        cssText.push(assembleFont(textStyleModel));\n\t\n\t        // Padding\n\t        if (padding != null) {\n\t            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n\t        }\n\t\n\t        return cssText.join(';') + ';';\n\t    }\n\t\n\t    /**\n\t     * @alias module:echarts/component/tooltip/TooltipContent\n\t     * @constructor\n\t     */\n\t    function TooltipContent(container, api) {\n\t        var el = document.createElement('div');\n\t        var zr = api.getZr();\n\t\n\t        this.el = el;\n\t\n\t        this._x = api.getWidth() / 2;\n\t        this._y = api.getHeight() / 2;\n\t\n\t        container.appendChild(el);\n\t\n\t        this._container = container;\n\t\n\t        this._show = false;\n\t\n\t        /**\n\t         * @private\n\t         */\n\t        this._hideTimeout;\n\t\n\t        var self = this;\n\t        el.onmouseenter = function () {\n\t            // clear the timeout in hideLater and keep showing tooltip\n\t            if (self.enterable) {\n\t                clearTimeout(self._hideTimeout);\n\t                self._show = true;\n\t            }\n\t            self._inContent = true;\n\t        };\n\t        el.onmousemove = function (e) {\n\t            e = e || window.event;\n\t            if (!self.enterable) {\n\t                // Try trigger zrender event to avoid mouse\n\t                // in and out shape too frequently\n\t                var handler = zr.handler;\n\t                eventUtil.normalizeEvent(container, e, true);\n\t                handler.dispatch('mousemove', e);\n\t            }\n\t        };\n\t        el.onmouseleave = function () {\n\t            if (self.enterable) {\n\t                if (self._show) {\n\t                    self.hideLater(self._hideDelay);\n\t                }\n\t            }\n\t            self._inContent = false;\n\t        };\n\t    }\n\t\n\t    TooltipContent.prototype = {\n\t\n\t        constructor: TooltipContent,\n\t\n\t        enterable: true,\n\t\n\t        /**\n\t         * Update when tooltip is rendered\n\t         */\n\t        update: function () {\n\t            var container = this._container;\n\t            var stl = container.currentStyle\n\t                || document.defaultView.getComputedStyle(container);\n\t            var domStyle = container.style;\n\t            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n\t                domStyle.position = 'relative';\n\t            }\n\t            // Hide the tooltip\n\t            // PENDING\n\t            // this.hide();\n\t        },\n\t\n\t        show: function (tooltipModel) {\n\t            clearTimeout(this._hideTimeout);\n\t            var el = this.el;\n\t\n\t            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n\t                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n\t                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n\t                + (tooltipModel.get('extraCssText') || '');\n\t\n\t            el.style.display = el.innerHTML ?  'block' : 'none';\n\t\n\t            this._show = true;\n\t        },\n\t\n\t        setContent: function (content) {\n\t            var el = this.el;\n\t            el.innerHTML = content;\n\t            el.style.display = content ? 'block' : 'none';\n\t        },\n\t\n\t        moveTo: function (x, y) {\n\t            var style = this.el.style;\n\t            style.left = x + 'px';\n\t            style.top = y + 'px';\n\t\n\t            this._x = x;\n\t            this._y = y;\n\t        },\n\t\n\t        hide: function () {\n\t            this.el.style.display = 'none';\n\t            this._show = false;\n\t        },\n\t\n\t        // showLater: function ()\n\t\n\t        hideLater: function (time) {\n\t            if (this._show && !(this._inContent && this.enterable)) {\n\t                if (time) {\n\t                    this._hideDelay = time;\n\t                    // Set show false to avoid invoke hideLater mutiple times\n\t                    this._show = false;\n\t                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n\t                }\n\t                else {\n\t                    this.hide();\n\t                }\n\t            }\n\t        },\n\t\n\t        isShow: function () {\n\t            return this._show;\n\t        }\n\t    };\n\t\n\t    module.exports = TooltipContent;\n\n\n/***/ },\n/* 620 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var echarts = __webpack_require__(484);\n\t    var graphic = __webpack_require__(525);\n\t    var layout = __webpack_require__(503);\n\t\n\t    // Model\n\t    echarts.extendComponentModel({\n\t\n\t        type: 'title',\n\t\n\t        layoutMode: {type: 'box', ignoreSize: true},\n\t\n\t        defaultOption: {\n\t            // 一级层叠\n\t            zlevel: 0,\n\t            // 二级层叠\n\t            z: 6,\n\t            show: true,\n\t\n\t            text: '',\n\t            // 超链接跳转\n\t            // link: null,\n\t            // 仅支持self | blank\n\t            target: 'blank',\n\t            subtext: '',\n\t\n\t            // 超链接跳转\n\t            // sublink: null,\n\t            // 仅支持self | blank\n\t            subtarget: 'blank',\n\t\n\t            // 'center' ¦ 'left' ¦ 'right'\n\t            // ¦ {number}（x坐标，单位px）\n\t            left: 0,\n\t            // 'top' ¦ 'bottom' ¦ 'center'\n\t            // ¦ {number}（y坐标，单位px）\n\t            top: 0,\n\t\n\t            // 水平对齐\n\t            // 'auto' | 'left' | 'right' | 'center'\n\t            // 默认根据 left 的位置判断是左对齐还是右对齐\n\t            // textAlign: null\n\t            //\n\t            // 垂直对齐\n\t            // 'auto' | 'top' | 'bottom' | 'middle'\n\t            // 默认根据 top 位置判断是上对齐还是下对齐\n\t            // textBaseline: null\n\t\n\t            backgroundColor: 'rgba(0,0,0,0)',\n\t\n\t            // 标题边框颜色\n\t            borderColor: '#ccc',\n\t\n\t            // 标题边框线宽，单位px，默认为0（无边框）\n\t            borderWidth: 0,\n\t\n\t            // 标题内边距，单位px，默认各方向内边距为5，\n\t            // 接受数组分别设定上右下左边距，同css\n\t            padding: 5,\n\t\n\t            // 主副标题纵向间隔，单位px，默认为10，\n\t            itemGap: 10,\n\t            textStyle: {\n\t                fontSize: 18,\n\t                fontWeight: 'bolder',\n\t                color: '#333'\n\t            },\n\t            subtextStyle: {\n\t                color: '#aaa'\n\t            }\n\t        }\n\t    });\n\t\n\t    // View\n\t    echarts.extendComponentView({\n\t\n\t        type: 'title',\n\t\n\t        render: function (titleModel, ecModel, api) {\n\t            this.group.removeAll();\n\t\n\t            if (!titleModel.get('show')) {\n\t                return;\n\t            }\n\t\n\t            var group = this.group;\n\t\n\t            var textStyleModel = titleModel.getModel('textStyle');\n\t            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\t\n\t            var textAlign = titleModel.get('textAlign');\n\t            var textBaseline = titleModel.get('textBaseline');\n\t\n\t            var textEl = new graphic.Text({\n\t                style: {\n\t                    text: titleModel.get('text'),\n\t                    textFont: textStyleModel.getFont(),\n\t                    fill: textStyleModel.getTextColor()\n\t                },\n\t                z2: 10\n\t            });\n\t\n\t            var textRect = textEl.getBoundingRect();\n\t\n\t            var subText = titleModel.get('subtext');\n\t            var subTextEl = new graphic.Text({\n\t                style: {\n\t                    text: subText,\n\t                    textFont: subtextStyleModel.getFont(),\n\t                    fill: subtextStyleModel.getTextColor(),\n\t                    y: textRect.height + titleModel.get('itemGap'),\n\t                    textBaseline: 'top'\n\t                },\n\t                z2: 10\n\t            });\n\t\n\t            var link = titleModel.get('link');\n\t            var sublink = titleModel.get('sublink');\n\t\n\t            textEl.silent = !link;\n\t            subTextEl.silent = !sublink;\n\t\n\t            if (link) {\n\t                textEl.on('click', function () {\n\t                    window.open(link, '_' + titleModel.get('target'));\n\t                });\n\t            }\n\t            if (sublink) {\n\t                subTextEl.on('click', function () {\n\t                    window.open(sublink, '_' + titleModel.get('subtarget'));\n\t                });\n\t            }\n\t\n\t            group.add(textEl);\n\t            subText && group.add(subTextEl);\n\t            // If no subText, but add subTextEl, there will be an empty line.\n\t\n\t            var groupRect = group.getBoundingRect();\n\t            var layoutOption = titleModel.getBoxLayoutParams();\n\t            layoutOption.width = groupRect.width;\n\t            layoutOption.height = groupRect.height;\n\t            var layoutRect = layout.getLayoutRect(\n\t                layoutOption, {\n\t                    width: api.getWidth(),\n\t                    height: api.getHeight()\n\t                }, titleModel.get('padding')\n\t            );\n\t            // Adjust text align based on position\n\t            if (!textAlign) {\n\t                // Align left if title is on the left. center and right is same\n\t                textAlign = titleModel.get('left') || titleModel.get('right');\n\t                if (textAlign === 'middle') {\n\t                    textAlign = 'center';\n\t                }\n\t                // Adjust layout by text align\n\t                if (textAlign === 'right') {\n\t                    layoutRect.x += layoutRect.width;\n\t                }\n\t                else if (textAlign === 'center') {\n\t                    layoutRect.x += layoutRect.width / 2;\n\t                }\n\t            }\n\t            if (!textBaseline) {\n\t                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\t                if (textBaseline === 'center') {\n\t                    textBaseline = 'middle';\n\t                }\n\t                if (textBaseline === 'bottom') {\n\t                    layoutRect.y += layoutRect.height;\n\t                }\n\t                else if (textBaseline === 'middle') {\n\t                    layoutRect.y += layoutRect.height / 2;\n\t                }\n\t\n\t                textBaseline = textBaseline || 'top';\n\t            }\n\t\n\t            group.attr('position', [layoutRect.x, layoutRect.y]);\n\t            var alignStyle = {\n\t                textAlign: textAlign,\n\t                textVerticalAlign: textBaseline\n\t            };\n\t            textEl.setStyle(alignStyle);\n\t            subTextEl.setStyle(alignStyle);\n\t\n\t            // Render background\n\t            // Get groupRect again because textAlign has been changed\n\t            groupRect = group.getBoundingRect();\n\t            var padding = layoutRect.margin;\n\t            var style = titleModel.getItemStyle(['color', 'opacity']);\n\t            style.fill = titleModel.get('backgroundColor');\n\t            var rect = new graphic.Rect({\n\t                shape: {\n\t                    x: groupRect.x - padding[3],\n\t                    y: groupRect.y - padding[0],\n\t                    width: groupRect.width + padding[1] + padding[3],\n\t                    height: groupRect.height + padding[0] + padding[2]\n\t                },\n\t                style: style,\n\t                silent: true\n\t            });\n\t            graphic.subPixelOptimizeRect(rect);\n\t\n\t            group.add(rect);\n\t        }\n\t    });\n\n\n/***/ },\n/* 621 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Legend component entry file8\n\t */\n\t\n\t\n\t    __webpack_require__(622);\n\t    __webpack_require__(623);\n\t    __webpack_require__(624);\n\t\n\t    var echarts = __webpack_require__(484);\n\t    // Series Filter\n\t    echarts.registerProcessor(__webpack_require__(626));\n\n\n/***/ },\n/* 622 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var Model = __webpack_require__(494);\n\t\n\t    var LegendModel = __webpack_require__(484).extendComponentModel({\n\t\n\t        type: 'legend',\n\t\n\t        dependencies: ['series'],\n\t\n\t        layoutMode: {\n\t            type: 'box',\n\t            ignoreSize: true\n\t        },\n\t\n\t        init: function (option, parentModel, ecModel) {\n\t            this.mergeDefaultAndTheme(option, ecModel);\n\t\n\t            option.selected = option.selected || {};\n\t        },\n\t\n\t        mergeOption: function (option) {\n\t            LegendModel.superCall(this, 'mergeOption', option);\n\t        },\n\t\n\t        optionUpdated: function () {\n\t            this._updateData(this.ecModel);\n\t\n\t            var legendData = this._data;\n\t\n\t            // If selectedMode is single, try to select one\n\t            if (legendData[0] && this.get('selectedMode') === 'single') {\n\t                var hasSelected = false;\n\t                // If has any selected in option.selected\n\t                for (var i = 0; i < legendData.length; i++) {\n\t                    var name = legendData[i].get('name');\n\t                    if (this.isSelected(name)) {\n\t                        // Force to unselect others\n\t                        this.select(name);\n\t                        hasSelected = true;\n\t                        break;\n\t                    }\n\t                }\n\t                // Try select the first if selectedMode is single\n\t                !hasSelected && this.select(legendData[0].get('name'));\n\t            }\n\t        },\n\t\n\t        _updateData: function (ecModel) {\n\t            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n\t                // Can be string or number\n\t                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n\t                    dataItem = {\n\t                        name: dataItem\n\t                    };\n\t                }\n\t                return new Model(dataItem, this, this.ecModel);\n\t            }, this);\n\t            this._data = legendData;\n\t\n\t            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n\t                return series.name;\n\t            });\n\t            ecModel.eachSeries(function (seriesModel) {\n\t                if (seriesModel.legendDataProvider) {\n\t                    var data = seriesModel.legendDataProvider();\n\t                    availableNames = availableNames.concat(data.mapArray(data.getName));\n\t                }\n\t            });\n\t            /**\n\t             * @type {Array.<string>}\n\t             * @private\n\t             */\n\t            this._availableNames = availableNames;\n\t        },\n\t\n\t        /**\n\t         * @return {Array.<module:echarts/model/Model>}\n\t         */\n\t        getData: function () {\n\t            return this._data;\n\t        },\n\t\n\t        /**\n\t         * @param {string} name\n\t         */\n\t        select: function (name) {\n\t            var selected = this.option.selected;\n\t            var selectedMode = this.get('selectedMode');\n\t            if (selectedMode === 'single') {\n\t                var data = this._data;\n\t                zrUtil.each(data, function (dataItem) {\n\t                    selected[dataItem.get('name')] = false;\n\t                });\n\t            }\n\t            selected[name] = true;\n\t        },\n\t\n\t        /**\n\t         * @param {string} name\n\t         */\n\t        unSelect: function (name) {\n\t            if (this.get('selectedMode') !== 'single') {\n\t                this.option.selected[name] = false;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {string} name\n\t         */\n\t        toggleSelected: function (name) {\n\t            var selected = this.option.selected;\n\t            // Default is true\n\t            if (!selected.hasOwnProperty(name)) {\n\t                selected[name] = true;\n\t            }\n\t            this[selected[name] ? 'unSelect' : 'select'](name);\n\t        },\n\t\n\t        /**\n\t         * @param {string} name\n\t         */\n\t        isSelected: function (name) {\n\t            var selected = this.option.selected;\n\t            return !(selected.hasOwnProperty(name) && !selected[name])\n\t                && zrUtil.indexOf(this._availableNames, name) >= 0;\n\t        },\n\t\n\t        defaultOption: {\n\t            // 一级层叠\n\t            zlevel: 0,\n\t            // 二级层叠\n\t            z: 4,\n\t            show: true,\n\t\n\t            // 布局方式，默认为水平布局，可选为：\n\t            // 'horizontal' | 'vertical'\n\t            orient: 'horizontal',\n\t\n\t            left: 'center',\n\t            // right: 'center',\n\t\n\t            top: 'top',\n\t            // bottom: 'top',\n\t\n\t            // 水平对齐\n\t            // 'auto' | 'left' | 'right'\n\t            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n\t            align: 'auto',\n\t\n\t            backgroundColor: 'rgba(0,0,0,0)',\n\t            // 图例边框颜色\n\t            borderColor: '#ccc',\n\t            // 图例边框线宽，单位px，默认为0（无边框）\n\t            borderWidth: 0,\n\t            // 图例内边距，单位px，默认各方向内边距为5，\n\t            // 接受数组分别设定上右下左边距，同css\n\t            padding: 5,\n\t            // 各个item之间的间隔，单位px，默认为10，\n\t            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n\t            itemGap: 10,\n\t            // 图例图形宽度\n\t            itemWidth: 25,\n\t            // 图例图形高度\n\t            itemHeight: 14,\n\t\n\t            // 图例关闭时候的颜色\n\t            inactiveColor: '#ccc',\n\t\n\t            textStyle: {\n\t                // 图例文字颜色\n\t                color: '#333'\n\t            },\n\t            // formatter: '',\n\t            // 选择模式，默认开启图例开关\n\t            selectedMode: true,\n\t            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n\t            // selected: null,\n\t            // 图例内容（详见legend.data，数组中每一项代表一个item\n\t            // data: [],\n\t\n\t            // Tooltip 相关配置\n\t            tooltip: {\n\t                show: false\n\t            }\n\t        }\n\t    });\n\t\n\t    module.exports = LegendModel;\n\n\n/***/ },\n/* 623 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Legend action\n\t */\n\t\n\t\n\t    var echarts = __webpack_require__(484);\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    function legendSelectActionHandler(methodName, payload, ecModel) {\n\t        var selectedMap = {};\n\t        var isToggleSelect = methodName === 'toggleSelected';\n\t        var isSelected;\n\t        // Update all legend components\n\t        ecModel.eachComponent('legend', function (legendModel) {\n\t            if (isToggleSelect && isSelected != null) {\n\t                // Force other legend has same selected status\n\t                // Or the first is toggled to true and other are toggled to false\n\t                // In the case one legend has some item unSelected in option. And if other legend\n\t                // doesn't has the item, they will assume it is selected.\n\t                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n\t            }\n\t            else {\n\t                legendModel[methodName](payload.name);\n\t                isSelected = legendModel.isSelected(payload.name);\n\t            }\n\t            var legendData = legendModel.getData();\n\t            zrUtil.each(legendData, function (model) {\n\t                var name = model.get('name');\n\t                // Wrap element\n\t                if (name === '\\n' || name === '') {\n\t                    return;\n\t                }\n\t                var isItemSelected = legendModel.isSelected(name);\n\t                if (name in selectedMap) {\n\t                    // Unselected if any legend is unselected\n\t                    selectedMap[name] = selectedMap[name] && isItemSelected;\n\t                }\n\t                else {\n\t                    selectedMap[name] = isItemSelected;\n\t                }\n\t            });\n\t        });\n\t        // Return the event explicitly\n\t        return {\n\t            name: payload.name,\n\t            selected: selectedMap\n\t        };\n\t    }\n\t    /**\n\t     * @event legendToggleSelect\n\t     * @type {Object}\n\t     * @property {string} type 'legendToggleSelect'\n\t     * @property {string} [from]\n\t     * @property {string} name Series name or data item name\n\t     */\n\t    echarts.registerAction(\n\t        'legendToggleSelect', 'legendselectchanged',\n\t        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n\t    );\n\t\n\t    /**\n\t     * @event legendSelect\n\t     * @type {Object}\n\t     * @property {string} type 'legendSelect'\n\t     * @property {string} name Series name or data item name\n\t     */\n\t    echarts.registerAction(\n\t        'legendSelect', 'legendselected',\n\t        zrUtil.curry(legendSelectActionHandler, 'select')\n\t    );\n\t\n\t    /**\n\t     * @event legendUnSelect\n\t     * @type {Object}\n\t     * @property {string} type 'legendUnSelect'\n\t     * @property {string} name Series name or data item name\n\t     */\n\t    echarts.registerAction(\n\t        'legendUnSelect', 'legendunselected',\n\t        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n\t    );\n\n\n/***/ },\n/* 624 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var symbolCreator = __webpack_require__(588);\n\t    var graphic = __webpack_require__(525);\n\t    var listComponentHelper = __webpack_require__(625);\n\t\n\t    var curry = zrUtil.curry;\n\t\n\t    function dispatchSelectAction(name, api) {\n\t        api.dispatchAction({\n\t            type: 'legendToggleSelect',\n\t            name: name\n\t        });\n\t    }\n\t\n\t    function dispatchHighlightAction(seriesModel, dataName, api) {\n\t        // If element hover will move to a hoverLayer.\n\t        var el = api.getZr().storage.getDisplayList()[0];\n\t        if (!(el && el.useHoverLayer)) {\n\t            seriesModel.get('legendHoverLink') && api.dispatchAction({\n\t                type: 'highlight',\n\t                seriesName: seriesModel.name,\n\t                name: dataName\n\t            });\n\t        }\n\t    }\n\t\n\t    function dispatchDownplayAction(seriesModel, dataName, api) {\n\t        // If element hover will move to a hoverLayer.\n\t        var el = api.getZr().storage.getDisplayList()[0];\n\t        if (!(el && el.useHoverLayer)) {\n\t            seriesModel.get('legendHoverLink') && api.dispatchAction({\n\t                type: 'downplay',\n\t                seriesName: seriesModel.name,\n\t                name: dataName\n\t            });\n\t        }\n\t    }\n\t\n\t    module.exports = __webpack_require__(484).extendComponentView({\n\t\n\t        type: 'legend',\n\t\n\t        init: function () {\n\t            this._symbolTypeStore = {};\n\t        },\n\t\n\t        render: function (legendModel, ecModel, api) {\n\t            var group = this.group;\n\t            group.removeAll();\n\t\n\t            if (!legendModel.get('show')) {\n\t                return;\n\t            }\n\t\n\t            var selectMode = legendModel.get('selectedMode');\n\t            var itemAlign = legendModel.get('align');\n\t\n\t            if (itemAlign === 'auto') {\n\t                itemAlign = (legendModel.get('left') === 'right'\n\t                    && legendModel.get('orient') === 'vertical')\n\t                    ? 'right' : 'left';\n\t            }\n\t\n\t            var legendDrawedMap = {};\n\t\n\t            zrUtil.each(legendModel.getData(), function (itemModel) {\n\t                var name = itemModel.get('name');\n\t\n\t                // Use empty string or \\n as a newline string\n\t                if (name === '' || name === '\\n') {\n\t                    group.add(new graphic.Group({\n\t                        newline: true\n\t                    }));\n\t                    return;\n\t                }\n\t\n\t                var seriesModel = ecModel.getSeriesByName(name)[0];\n\t\n\t                if (legendDrawedMap[name]) {\n\t                    // Have been drawed\n\t                    return;\n\t                }\n\t\n\t                // Series legend\n\t                if (seriesModel) {\n\t                    var data = seriesModel.getData();\n\t                    var color = data.getVisual('color');\n\t\n\t                    // If color is a callback function\n\t                    if (typeof color === 'function') {\n\t                        // Use the first data\n\t                        color = color(seriesModel.getDataParams(0));\n\t                    }\n\t\n\t                    // Using rect symbol defaultly\n\t                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n\t                    var symbolType = data.getVisual('symbol');\n\t\n\t                    var itemGroup = this._createItem(\n\t                        name, itemModel, legendModel,\n\t                        legendSymbolType, symbolType,\n\t                        itemAlign, color,\n\t                        selectMode\n\t                    );\n\t\n\t                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n\t                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n\t                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\t\n\t                    legendDrawedMap[name] = true;\n\t                }\n\t                else {\n\t                    // Data legend of pie, funnel\n\t                    ecModel.eachRawSeries(function (seriesModel) {\n\t                        // In case multiple series has same data name\n\t                        if (legendDrawedMap[name]) {\n\t                            return;\n\t                        }\n\t                        if (seriesModel.legendDataProvider) {\n\t                            var data = seriesModel.legendDataProvider();\n\t                            var idx = data.indexOfName(name);\n\t                            if (idx < 0) {\n\t                                return;\n\t                            }\n\t\n\t                            var color = data.getItemVisual(idx, 'color');\n\t\n\t                            var legendSymbolType = 'roundRect';\n\t\n\t                            var itemGroup = this._createItem(\n\t                                name, itemModel, legendModel,\n\t                                legendSymbolType, null,\n\t                                itemAlign, color,\n\t                                selectMode\n\t                            );\n\t\n\t                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n\t                                // FIXME Should not specify the series name\n\t                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n\t                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\t\n\t                            legendDrawedMap[name] = true;\n\t                        }\n\t                    }, this);\n\t                }\n\t\n\t                if (__DEV__) {\n\t                    if (!legendDrawedMap[name]) {\n\t                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n\t                    }\n\t                }\n\t            }, this);\n\t\n\t            listComponentHelper.layout(group, legendModel, api);\n\t            // Render background after group is layout\n\t            // FIXME\n\t            listComponentHelper.addBackground(group, legendModel);\n\t        },\n\t\n\t        _createItem: function (\n\t            name, itemModel, legendModel,\n\t            legendSymbolType, symbolType,\n\t            itemAlign, color, selectMode\n\t        ) {\n\t            var itemWidth = legendModel.get('itemWidth');\n\t            var itemHeight = legendModel.get('itemHeight');\n\t            var inactiveColor = legendModel.get('inactiveColor');\n\t\n\t            var isSelected = legendModel.isSelected(name);\n\t            var itemGroup = new graphic.Group();\n\t\n\t            var textStyleModel = itemModel.getModel('textStyle');\n\t\n\t            var itemIcon = itemModel.get('icon');\n\t\n\t            var tooltipModel = itemModel.getModel('tooltip');\n\t            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\t\n\t            // Use user given icon first\n\t            legendSymbolType = itemIcon || legendSymbolType;\n\t            itemGroup.add(symbolCreator.createSymbol(\n\t                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n\t            ));\n\t\n\t            // Compose symbols\n\t            // PENDING\n\t            if (!itemIcon && symbolType\n\t                // At least show one symbol, can't be all none\n\t                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n\t            ) {\n\t                var size = itemHeight * 0.8;\n\t                if (symbolType === 'none') {\n\t                    symbolType = 'circle';\n\t                }\n\t                // Put symbol in the center\n\t                itemGroup.add(symbolCreator.createSymbol(\n\t                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n\t                    isSelected ? color : inactiveColor\n\t                ));\n\t            }\n\t\n\t            // Text\n\t            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n\t            var textAlign = itemAlign;\n\t\n\t            var formatter = legendModel.get('formatter');\n\t            var content = name;\n\t            if (typeof formatter === 'string' && formatter) {\n\t                content = formatter.replace('{name}', name != null ? name : '');\n\t            }\n\t            else if (typeof formatter === 'function') {\n\t                content = formatter(name);\n\t            }\n\t\n\t            var text = new graphic.Text({\n\t                style: {\n\t                    text: content,\n\t                    x: textX,\n\t                    y: itemHeight / 2,\n\t                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n\t                    textFont: textStyleModel.getFont(),\n\t                    textAlign: textAlign,\n\t                    textVerticalAlign: 'middle'\n\t                }\n\t            });\n\t            itemGroup.add(text);\n\t\n\t            // Add a invisible rect to increase the area of mouse hover\n\t            var hitRect = new graphic.Rect({\n\t                shape: itemGroup.getBoundingRect(),\n\t                invisible: true,\n\t                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n\t                    content: name,\n\t                    // Defaul formatter\n\t                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n\t                        return name;\n\t                    },\n\t                    formatterParams: {\n\t                        componentType: 'legend',\n\t                        legendIndex: legendModel.componentIndex,\n\t                        name: name,\n\t                        $vars: ['name']\n\t                    }\n\t                }, tooltipModel.option) : null\n\t            });\n\t            itemGroup.add(hitRect);\n\t\n\t            itemGroup.eachChild(function (child) {\n\t                child.silent = true;\n\t            });\n\t\n\t            hitRect.silent = !selectMode;\n\t\n\t\n\t\n\t            this.group.add(itemGroup);\n\t\n\t            graphic.setHoverStyle(itemGroup);\n\t\n\t            return itemGroup;\n\t        }\n\t    });\n\n\n/***/ },\n/* 625 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t    // List layout\n\t    var layout = __webpack_require__(503);\n\t    var formatUtil = __webpack_require__(488);\n\t    var graphic = __webpack_require__(525);\n\t\n\t    function positionGroup(group, model, api) {\n\t        layout.positionElement(\n\t            group, model.getBoxLayoutParams(),\n\t            {\n\t                width: api.getWidth(),\n\t                height: api.getHeight()\n\t            },\n\t            model.get('padding')\n\t        );\n\t    }\n\t\n\t    module.exports = {\n\t        /**\n\t         * Layout list like component.\n\t         * It will box layout each items in group of component and then position the whole group in the viewport\n\t         * @param {module:zrender/group/Group} group\n\t         * @param {module:echarts/model/Component} componentModel\n\t         * @param {module:echarts/ExtensionAPI}\n\t         */\n\t        layout: function (group, componentModel, api) {\n\t            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n\t                width: api.getWidth(),\n\t                height: api.getHeight()\n\t            }, componentModel.get('padding'));\n\t            layout.box(\n\t                componentModel.get('orient'),\n\t                group,\n\t                componentModel.get('itemGap'),\n\t                rect.width,\n\t                rect.height\n\t            );\n\t\n\t            positionGroup(group, componentModel, api);\n\t        },\n\t\n\t        addBackground: function (group, componentModel) {\n\t            var padding = formatUtil.normalizeCssArray(\n\t                componentModel.get('padding')\n\t            );\n\t            var boundingRect = group.getBoundingRect();\n\t            var style = componentModel.getItemStyle(['color', 'opacity']);\n\t            style.fill = componentModel.get('backgroundColor');\n\t            var rect = new graphic.Rect({\n\t                shape: {\n\t                    x: boundingRect.x - padding[3],\n\t                    y: boundingRect.y - padding[0],\n\t                    width: boundingRect.width + padding[1] + padding[3],\n\t                    height: boundingRect.height + padding[0] + padding[2]\n\t                },\n\t                style: style,\n\t                silent: true,\n\t                z2: -1\n\t            });\n\t            graphic.subPixelOptimizeRect(rect);\n\t\n\t            group.add(rect);\n\t        }\n\t    };\n\n\n/***/ },\n/* 626 */\n/***/ function(module, exports) {\n\n\t\n\t   module.exports = function (ecModel) {\n\t        var legendModels = ecModel.findComponents({\n\t            mainType: 'legend'\n\t        });\n\t        if (legendModels && legendModels.length) {\n\t            ecModel.filterSeries(function (series) {\n\t                // If in any legend component the status is not selected.\n\t                // Because in legend series is assumed selected when it is not in the legend data.\n\t                for (var i = 0; i < legendModels.length; i++) {\n\t                    if (!legendModels[i].isSelected(series.name)) {\n\t                        return false;\n\t                    }\n\t                }\n\t                return true;\n\t            });\n\t        }\n\t    };\n\n\n/***/ },\n/* 627 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(628);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(100)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./linechart.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./linechart.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 628 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(94)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 629 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(484);\n\t\n\tangular.module('ng-echarts',[])\n\t\t.directive('ngEcharts',[function(){\n\t\t\treturn {\n\t\t\t\tlink: function(scope,element,attrs,ctrl){\n\t\t\t\t\tfunction refreshChart(){\n\t\t\t\t\t\tvar theme = (scope.config && scope.config.theme)\n\t\t\t\t\t\t\t? scope.config.theme : 'default';\n\t\t\t\t\t\tvar chart = echarts.init(element[0],theme);\n\t\t\t\t\t\tif(scope.config && scope.config.dataLoaded === false){\n\t\t\t\t\t\t\tchart.showLoading();\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif(scope.config && scope.config.dataLoaded){\n\t\t\t\t\t\t\tchart.setOption(scope.option);\n\t\t\t\t\t\t\tchart.resize();\n\t\t\t\t\t\t\tchart.hideLoading();\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif(scope.config && scope.config.event){\n\t\t\t\t\t\t\tif(angular.isArray(scope.config.event)){\n\t\t\t\t\t\t\t\tangular.forEach(scope.config.event,function(value,key){\n\t\t\t\t\t\t\t\t\tfor(var e in value){\n\t\t\t\t\t\t\t\t\t\tchart.on(e,value[e]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\n\t\t\t\t\t//自定义参数 - config\n\t\t\t\t\t// event 定义事件\n\t\t\t\t\t// theme 主题名称\n\t\t\t\t\t// dataLoaded 数据是否加载\n\t\n\t\t\t\t\tscope.$watch(\n\t\t\t\t\t\tfunction () { return scope.config; },\n\t\t\t\t\t\tfunction (value) {if (value) {refreshChart();}},\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\n\t\t\t\t\t//图表原生option\n\t\t\t\t\tscope.$watch(\n\t\t\t\t\t\tfunction () { return scope.option; },\n\t\t\t\t\t\tfunction (value) {if (value) {refreshChart();}},\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tscope:{\n\t\t\t\t\toption:'=ecOption',\n\t\t\t\t\tconfig:'=ecConfig'\n\t\t\t\t},\n\t\t\t\trestrict:'EA'\n\t\t\t}\n\t\t}]);\n\n/***/ },\n/* 630 */,\n/* 631 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(629);\n\t\n\tvar _piechart = __webpack_require__(632);\n\t\n\tvar _piechart2 = _interopRequireDefault(_piechart);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = angular.module('pieChart', ['ng-echarts'])\n\t/**\n\t * 轻在routerConfig.js里定义路由\n\t */\n\t.component('pieChart', _piechart2.default);\n\n/***/ },\n/* 632 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _piechart = __webpack_require__(633);\n\t\n\tvar _piechart2 = _interopRequireDefault(_piechart);\n\t\n\tvar _piechart3 = __webpack_require__(634);\n\t\n\tvar _piechart4 = _interopRequireDefault(_piechart3);\n\t\n\t__webpack_require__(644);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  restrict: 'E',\n\t  bindings: {},\n\t  template: _piechart2.default,\n\t  controller: _piechart4.default,\n\t  controllerAs: 'vm'\n\t};\n\n/***/ },\n/* 633 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1>饼图</h1>\\n\\t<h2>安装</h2>\\n\\t<p>安装ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n\\t<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"bash\\\">npm install ffan-ng-echarts --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>注入模块</h2>\\n\\t<p>在使用图表的模版入口js中注入ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport 'ffan-ng-echarts';\\nimport piechartComponent from './piechart.component';\\n\\nexport default angular.module('pieChart', [\\n  'ng-echarts'\\n.component('pieChart', piechartComponent);\\n</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<p>在controller中注入echarts lib</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\n// include pie chart\\nrequire('echarts/lib/chart/pie');\\n\\n// include tooltip component\\nrequire('echarts/lib/component/tooltip');\\n// include title component\\nrequire('echarts/lib/component/title');\\n// include legend component\\nrequire('echarts/lib/component/legend');\\n</div>\\n</div>\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-4 echarts-container\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.pieConfig\\\" ec-option=\\\"vm.pieOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.pieConfig\\\" ec-option=\\\"vm.pieOption\\\" ></ng-echarts>\\n</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nlet self = this;\\nself.pieConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\n\\nself.pieOption = {\\n  tooltip: {\\n  trigger: 'item',\\n  formatter: \\\"{a} <br/>{b} : {c} ({d}%)\\\"\\n},\\nlegend: {\\n  orient: 'vertical',\\n  x: '65%',\\n  top: '25%',\\n  data: ['正常', '断开', '等待'],\\n  formatter: function (name) {\\n    var oa = self.pieOption.series[0].data;\\n    for (var i = 0; i < self.pieOption.series[0].data.length; i++) {\\n      if (name == oa[i].name) {\\n        return name + ':' + oa[i].value + '个';\\n      }\\n    }\\n  }\\n},\\ncolor: ['#bdea75', '#fe5454', '#faba3c'],\\nseries: [\\n  {\\n    name: '比例分析',\\n    type: 'pie',\\n    radius: '55%',\\n    center: ['35%', '50%'],\\n    data: [\\n    {\\n      value: '2',\\n      name: '正常'\\n    },\\n    {\\n      value: '2',\\n      name: '断开'\\n    },\\n    {\\n      value: '2',\\n      name: '等待'\\n    }],\\n    itemStyle: {\\n      normal: {\\n        label: {\\n          show: false,\\n          formatter: '{b} : {c} ({d}%)'\\n        }\\n      },\\n      labelLine: {\\n        show: true\\n      }\\n    }\\n}]\\n</div>\\n</div>\"\n\n/***/ },\n/* 634 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * (description)\n\t *\n\t * @author yourname\n\t */\n\t\n\t// include pie chart\n\t__webpack_require__(635);\n\t\n\t// include tooltip component\n\t__webpack_require__(616);\n\t// include title component\n\t__webpack_require__(620);\n\t// include legend component\n\t__webpack_require__(621);\n\t\n\tvar PiechartController = function () {\n\t\tfunction PiechartController() {\n\t\t\t\"ngInject\";\n\t\n\t\t\t_classCallCheck(this, PiechartController);\n\t\n\t\t\tthis.initPieChart();\n\t\t}\n\t\n\t\t_createClass(PiechartController, [{\n\t\t\tkey: 'initPieChart',\n\t\t\tvalue: function initPieChart() {\n\t\t\t\tvar self = this;\n\t\t\t\tself.pieConfig = {\n\t\t\t\t\ttheme: 'default',\n\t\t\t\t\tdataLoaded: true\n\t\t\t\t};\n\t\n\t\t\t\tself.pieOption = {\n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\ttrigger: 'item',\n\t\t\t\t\t\tformatter: \"{a} <br/>{b} : {c} ({d}%)\"\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\torient: 'vertical',\n\t\t\t\t\t\tx: '65%',\n\t\t\t\t\t\ttop: '25%',\n\t\t\t\t\t\tdata: ['正常', '断开', '等待'],\n\t\t\t\t\t\tformatter: function formatter(name) {\n\t\t\t\t\t\t\tvar oa = self.pieOption.series[0].data;\n\t\t\t\t\t\t\tfor (var i = 0; i < self.pieOption.series[0].data.length; i++) {\n\t\t\t\t\t\t\t\tif (name == oa[i].name) {\n\t\t\t\t\t\t\t\t\treturn name + ':' + oa[i].value + '个';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tcolor: ['#bdea75', '#fe5454', '#faba3c'],\n\t\t\t\t\tseries: [{\n\t\t\t\t\t\tname: '比例分析',\n\t\t\t\t\t\ttype: 'pie',\n\t\t\t\t\t\tradius: '55%',\n\t\t\t\t\t\tcenter: ['35%', '50%'],\n\t\t\t\t\t\tdata: [{\n\t\t\t\t\t\t\tvalue: '2',\n\t\t\t\t\t\t\tname: '正常'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tvalue: '2',\n\t\t\t\t\t\t\tname: '断开'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tvalue: '2',\n\t\t\t\t\t\t\tname: '等待'\n\t\t\t\t\t\t}],\n\t\t\t\t\t\titemStyle: {\n\t\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\t\t\tformatter: '{b} : {c} ({d}%)'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlabelLine: {\n\t\t\t\t\t\t\t\tshow: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn PiechartController;\n\t}();\n\t\n\texports.default = PiechartController;\n\n/***/ },\n/* 635 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t    var echarts = __webpack_require__(484);\n\t\n\t    __webpack_require__(636);\n\t    __webpack_require__(638);\n\t\n\t    __webpack_require__(639)('pie', [{\n\t        type: 'pieToggleSelect',\n\t        event: 'pieselectchanged',\n\t        method: 'toggleSelected'\n\t    }, {\n\t        type: 'pieSelect',\n\t        event: 'pieselected',\n\t        method: 'select'\n\t    }, {\n\t        type: 'pieUnSelect',\n\t        event: 'pieunselected',\n\t        method: 'unSelect'\n\t    }]);\n\t\n\t    echarts.registerVisual(zrUtil.curry(__webpack_require__(640), 'pie'));\n\t\n\t    echarts.registerLayout(zrUtil.curry(\n\t        __webpack_require__(641), 'pie'\n\t    ));\n\t\n\t    echarts.registerProcessor(zrUtil.curry(__webpack_require__(643), 'pie'));\n\n\n/***/ },\n/* 636 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var List = __webpack_require__(580);\n\t    var zrUtil = __webpack_require__(483);\n\t    var modelUtil = __webpack_require__(487);\n\t    var completeDimensions = __webpack_require__(584);\n\t\n\t    var dataSelectableMixin = __webpack_require__(637);\n\t\n\t    var PieSeries = __webpack_require__(484).extendSeriesModel({\n\t\n\t        type: 'series.pie',\n\t\n\t        // Overwrite\n\t        init: function (option) {\n\t            PieSeries.superApply(this, 'init', arguments);\n\t\n\t            // Enable legend selection for each data item\n\t            // Use a function instead of direct access because data reference may changed\n\t            this.legendDataProvider = function () {\n\t                return this._dataBeforeProcessed;\n\t            };\n\t\n\t            this.updateSelectedMap(option.data);\n\t\n\t            this._defaultLabelLine(option);\n\t        },\n\t\n\t        // Overwrite\n\t        mergeOption: function (newOption) {\n\t            PieSeries.superCall(this, 'mergeOption', newOption);\n\t            this.updateSelectedMap(this.option.data);\n\t        },\n\t\n\t        getInitialData: function (option, ecModel) {\n\t            var dimensions = completeDimensions(['value'], option.data);\n\t            var list = new List(dimensions, this);\n\t            list.initData(option.data);\n\t            return list;\n\t        },\n\t\n\t        // Overwrite\n\t        getDataParams: function (dataIndex) {\n\t            var data = this._data;\n\t            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n\t            var sum = data.getSum('value');\n\t            // FIXME toFixed?\n\t            //\n\t            // Percent is 0 if sum is 0\n\t            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\t\n\t            params.$vars.push('percent');\n\t            return params;\n\t        },\n\t\n\t        _defaultLabelLine: function (option) {\n\t            // Extend labelLine emphasis\n\t            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\t\n\t            var labelLineNormalOpt = option.labelLine.normal;\n\t            var labelLineEmphasisOpt = option.labelLine.emphasis;\n\t            // Not show label line if `label.normal.show = false`\n\t            labelLineNormalOpt.show = labelLineNormalOpt.show\n\t                && option.label.normal.show;\n\t            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n\t                && option.label.emphasis.show;\n\t        },\n\t\n\t        defaultOption: {\n\t            zlevel: 0,\n\t            z: 2,\n\t            legendHoverLink: true,\n\t\n\t            hoverAnimation: true,\n\t            // 默认全局居中\n\t            center: ['50%', '50%'],\n\t            radius: [0, '75%'],\n\t            // 默认顺时针\n\t            clockwise: true,\n\t            startAngle: 90,\n\t            // 最小角度改为0\n\t            minAngle: 0,\n\t            // 选中是扇区偏移量\n\t            selectedOffset: 10,\n\t\n\t            // If use strategy to avoid label overlapping\n\t            avoidLabelOverlap: true,\n\t            // 选择模式，默认关闭，可选single，multiple\n\t            // selectedMode: false,\n\t            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n\t            // roseType: null,\n\t\n\t            label: {\n\t                normal: {\n\t                    // If rotate around circle\n\t                    rotate: false,\n\t                    show: true,\n\t                    // 'outer', 'inside', 'center'\n\t                    position: 'outer'\n\t                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\t                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n\t                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\t                },\n\t                emphasis: {}\n\t            },\n\t            // Enabled when label.normal.position is 'outer'\n\t            labelLine: {\n\t                normal: {\n\t                    show: true,\n\t                    // 引导线两段中的第一段长度\n\t                    length: 15,\n\t                    // 引导线两段中的第二段长度\n\t                    length2: 15,\n\t                    smooth: false,\n\t                    lineStyle: {\n\t                        // color: 各异,\n\t                        width: 1,\n\t                        type: 'solid'\n\t                    }\n\t                }\n\t            },\n\t            itemStyle: {\n\t                normal: {\n\t                    borderWidth: 1\n\t                },\n\t                emphasis: {}\n\t            },\n\t\n\t            animationEasing: 'cubicOut',\n\t\n\t            data: []\n\t        }\n\t    });\n\t\n\t    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\t\n\t    module.exports = PieSeries;\n\n\n/***/ },\n/* 637 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Data selectable mixin for chart series.\n\t * To eanble data select, option of series must have `selectedMode`.\n\t * And each data item will use `selected` to toggle itself selected status\n\t *\n\t * @module echarts/chart/helper/DataSelectable\n\t */\n\t\n\t\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    module.exports = {\n\t\n\t        updateSelectedMap: function (targetList) {\n\t            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n\t                targetMap[target.name] = target;\n\t                return targetMap;\n\t            }, {});\n\t        },\n\t        /**\n\t         * @param {string} name\n\t         */\n\t        // PENGING If selectedMode is null ?\n\t        select: function (name) {\n\t            var targetMap = this._selectTargetMap;\n\t            var target = targetMap[name];\n\t            var selectedMode = this.get('selectedMode');\n\t            if (selectedMode === 'single') {\n\t                zrUtil.each(targetMap, function (target) {\n\t                    target.selected = false;\n\t                });\n\t            }\n\t            target && (target.selected = true);\n\t        },\n\t\n\t        /**\n\t         * @param {string} name\n\t         */\n\t        unSelect: function (name) {\n\t            var target = this._selectTargetMap[name];\n\t            // var selectedMode = this.get('selectedMode');\n\t            // selectedMode !== 'single' && target && (target.selected = false);\n\t            target && (target.selected = false);\n\t        },\n\t\n\t        /**\n\t         * @param {string} name\n\t         */\n\t        toggleSelected: function (name) {\n\t            var target = this._selectTargetMap[name];\n\t            if (target != null) {\n\t                this[target.selected ? 'unSelect' : 'select'](name);\n\t                return target.selected;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {string} name\n\t         */\n\t        isSelected: function (name) {\n\t            var target = this._selectTargetMap[name];\n\t            return target && target.selected;\n\t        }\n\t    };\n\n\n/***/ },\n/* 638 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var graphic = __webpack_require__(525);\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    /**\n\t     * @param {module:echarts/model/Series} seriesModel\n\t     * @param {boolean} hasAnimation\n\t     * @inner\n\t     */\n\t    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n\t        var data = seriesModel.getData();\n\t        var dataIndex = this.dataIndex;\n\t        var name = data.getName(dataIndex);\n\t        var selectedOffset = seriesModel.get('selectedOffset');\n\t\n\t        api.dispatchAction({\n\t            type: 'pieToggleSelect',\n\t            from: uid,\n\t            name: name,\n\t            seriesId: seriesModel.id\n\t        });\n\t\n\t        data.each(function (idx) {\n\t            toggleItemSelected(\n\t                data.getItemGraphicEl(idx),\n\t                data.getItemLayout(idx),\n\t                seriesModel.isSelected(data.getName(idx)),\n\t                selectedOffset,\n\t                hasAnimation\n\t            );\n\t        });\n\t    }\n\t\n\t    /**\n\t     * @param {module:zrender/graphic/Sector} el\n\t     * @param {Object} layout\n\t     * @param {boolean} isSelected\n\t     * @param {number} selectedOffset\n\t     * @param {boolean} hasAnimation\n\t     * @inner\n\t     */\n\t    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n\t        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\t\n\t        var dx = Math.cos(midAngle);\n\t        var dy = Math.sin(midAngle);\n\t\n\t        var offset = isSelected ? selectedOffset : 0;\n\t        var position = [dx * offset, dy * offset];\n\t\n\t        hasAnimation\n\t            // animateTo will stop revious animation like update transition\n\t            ? el.animate()\n\t                .when(200, {\n\t                    position: position\n\t                })\n\t                .start('bounceOut')\n\t            : el.attr('position', position);\n\t    }\n\t\n\t    /**\n\t     * Piece of pie including Sector, Label, LabelLine\n\t     * @constructor\n\t     * @extends {module:zrender/graphic/Group}\n\t     */\n\t    function PiePiece(data, idx) {\n\t\n\t        graphic.Group.call(this);\n\t\n\t        var sector = new graphic.Sector({\n\t            z2: 2\n\t        });\n\t        var polyline = new graphic.Polyline();\n\t        var text = new graphic.Text();\n\t        this.add(sector);\n\t        this.add(polyline);\n\t        this.add(text);\n\t\n\t        this.updateData(data, idx, true);\n\t\n\t        // Hover to change label and labelLine\n\t        function onEmphasis() {\n\t            polyline.ignore = polyline.hoverIgnore;\n\t            text.ignore = text.hoverIgnore;\n\t        }\n\t        function onNormal() {\n\t            polyline.ignore = polyline.normalIgnore;\n\t            text.ignore = text.normalIgnore;\n\t        }\n\t        this.on('emphasis', onEmphasis)\n\t            .on('normal', onNormal)\n\t            .on('mouseover', onEmphasis)\n\t            .on('mouseout', onNormal);\n\t    }\n\t\n\t    var piePieceProto = PiePiece.prototype;\n\t\n\t    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n\t        var textStyleModel = labelModel.getModel('textStyle');\n\t        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\t        return {\n\t            fill: textStyleModel.getTextColor()\n\t                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n\t            opacity: data.getItemVisual(idx, 'opacity'),\n\t            textFont: textStyleModel.getFont(),\n\t            text: zrUtil.retrieve(\n\t                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n\t            )\n\t        };\n\t    }\n\t\n\t    piePieceProto.updateData = function (data, idx, firstCreate) {\n\t\n\t        var sector = this.childAt(0);\n\t\n\t        var seriesModel = data.hostModel;\n\t        var itemModel = data.getItemModel(idx);\n\t        var layout = data.getItemLayout(idx);\n\t        var sectorShape = zrUtil.extend({}, layout);\n\t        sectorShape.label = null;\n\t        if (firstCreate) {\n\t            sector.setShape(sectorShape);\n\t            sector.shape.endAngle = layout.startAngle;\n\t            graphic.updateProps(sector, {\n\t                shape: {\n\t                    endAngle: layout.endAngle\n\t                }\n\t            }, seriesModel, idx);\n\t        }\n\t        else {\n\t            graphic.updateProps(sector, {\n\t                shape: sectorShape\n\t            }, seriesModel, idx);\n\t        }\n\t\n\t        // Update common style\n\t        var itemStyleModel = itemModel.getModel('itemStyle');\n\t        var visualColor = data.getItemVisual(idx, 'color');\n\t\n\t        sector.useStyle(\n\t            zrUtil.defaults(\n\t                {\n\t                    lineJoin: 'bevel',\n\t                    fill: visualColor\n\t                },\n\t                itemStyleModel.getModel('normal').getItemStyle()\n\t            )\n\t        );\n\t        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\t\n\t        // Toggle selected\n\t        toggleItemSelected(\n\t            this,\n\t            data.getItemLayout(idx),\n\t            itemModel.get('selected'),\n\t            seriesModel.get('selectedOffset'),\n\t            seriesModel.get('animation')\n\t        );\n\t\n\t        function onEmphasis() {\n\t            // Sector may has animation of updating data. Force to move to the last frame\n\t            // Or it may stopped on the wrong shape\n\t            sector.stopAnimation(true);\n\t            sector.animateTo({\n\t                shape: {\n\t                    r: layout.r + 10\n\t                }\n\t            }, 300, 'elasticOut');\n\t        }\n\t        function onNormal() {\n\t            sector.stopAnimation(true);\n\t            sector.animateTo({\n\t                shape: {\n\t                    r: layout.r\n\t                }\n\t            }, 300, 'elasticOut');\n\t        }\n\t        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\t        if (itemModel.get('hoverAnimation') && seriesModel.ifEnableAnimation()) {\n\t            sector\n\t                .on('mouseover', onEmphasis)\n\t                .on('mouseout', onNormal)\n\t                .on('emphasis', onEmphasis)\n\t                .on('normal', onNormal);\n\t        }\n\t\n\t        this._updateLabel(data, idx);\n\t\n\t        graphic.setHoverStyle(this);\n\t    };\n\t\n\t    piePieceProto._updateLabel = function (data, idx) {\n\t\n\t        var labelLine = this.childAt(1);\n\t        var labelText = this.childAt(2);\n\t\n\t        var seriesModel = data.hostModel;\n\t        var itemModel = data.getItemModel(idx);\n\t        var layout = data.getItemLayout(idx);\n\t        var labelLayout = layout.label;\n\t        var visualColor = data.getItemVisual(idx, 'color');\n\t\n\t        graphic.updateProps(labelLine, {\n\t            shape: {\n\t                points: labelLayout.linePoints || [\n\t                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n\t                ]\n\t            }\n\t        }, seriesModel, idx);\n\t\n\t        graphic.updateProps(labelText, {\n\t            style: {\n\t                x: labelLayout.x,\n\t                y: labelLayout.y\n\t            }\n\t        }, seriesModel, idx);\n\t        labelText.attr({\n\t            style: {\n\t                textVerticalAlign: labelLayout.verticalAlign,\n\t                textAlign: labelLayout.textAlign,\n\t                textFont: labelLayout.font\n\t            },\n\t            rotation: labelLayout.rotation,\n\t            origin: [labelLayout.x, labelLayout.y],\n\t            z2: 10\n\t        });\n\t\n\t        var labelModel = itemModel.getModel('label.normal');\n\t        var labelHoverModel = itemModel.getModel('label.emphasis');\n\t        var labelLineModel = itemModel.getModel('labelLine.normal');\n\t        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n\t        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\t\n\t        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\t\n\t        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n\t        labelText.hoverIgnore = !labelHoverModel.get('show');\n\t\n\t        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n\t        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\t\n\t        // Default use item visual color\n\t        labelLine.setStyle({\n\t            stroke: visualColor,\n\t            opacity: data.getItemVisual(idx, 'opacity')\n\t        });\n\t        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\t\n\t        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n\t        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\t\n\t        var smooth = labelLineModel.get('smooth');\n\t        if (smooth && smooth === true) {\n\t            smooth = 0.4;\n\t        }\n\t        labelLine.setShape({\n\t            smooth: smooth\n\t        });\n\t    };\n\t\n\t    zrUtil.inherits(PiePiece, graphic.Group);\n\t\n\t\n\t    // Pie view\n\t    var Pie = __webpack_require__(524).extend({\n\t\n\t        type: 'pie',\n\t\n\t        init: function () {\n\t            var sectorGroup = new graphic.Group();\n\t            this._sectorGroup = sectorGroup;\n\t        },\n\t\n\t        render: function (seriesModel, ecModel, api, payload) {\n\t            if (payload && (payload.from === this.uid)) {\n\t                return;\n\t            }\n\t\n\t            var data = seriesModel.getData();\n\t            var oldData = this._data;\n\t            var group = this.group;\n\t\n\t            var hasAnimation = ecModel.get('animation');\n\t            var isFirstRender = !oldData;\n\t\n\t            var onSectorClick = zrUtil.curry(\n\t                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n\t            );\n\t\n\t            var selectedMode = seriesModel.get('selectedMode');\n\t\n\t            data.diff(oldData)\n\t                .add(function (idx) {\n\t                    var piePiece = new PiePiece(data, idx);\n\t                    if (isFirstRender) {\n\t                        piePiece.eachChild(function (child) {\n\t                            child.stopAnimation(true);\n\t                        });\n\t                    }\n\t\n\t                    selectedMode && piePiece.on('click', onSectorClick);\n\t\n\t                    data.setItemGraphicEl(idx, piePiece);\n\t\n\t                    group.add(piePiece);\n\t                })\n\t                .update(function (newIdx, oldIdx) {\n\t                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\t\n\t                    piePiece.updateData(data, newIdx);\n\t\n\t                    piePiece.off('click');\n\t                    selectedMode && piePiece.on('click', onSectorClick);\n\t                    group.add(piePiece);\n\t                    data.setItemGraphicEl(newIdx, piePiece);\n\t                })\n\t                .remove(function (idx) {\n\t                    var piePiece = oldData.getItemGraphicEl(idx);\n\t                    group.remove(piePiece);\n\t                })\n\t                .execute();\n\t\n\t            if (hasAnimation && isFirstRender && data.count() > 0) {\n\t                var shape = data.getItemLayout(0);\n\t                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\t\n\t                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n\t                group.setClipPath(this._createClipPath(\n\t                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n\t                ));\n\t            }\n\t\n\t            this._data = data;\n\t        },\n\t\n\t        dispose: function () {},\n\t\n\t        _createClipPath: function (\n\t            cx, cy, r, startAngle, clockwise, cb, seriesModel\n\t        ) {\n\t            var clipPath = new graphic.Sector({\n\t                shape: {\n\t                    cx: cx,\n\t                    cy: cy,\n\t                    r0: 0,\n\t                    r: r,\n\t                    startAngle: startAngle,\n\t                    endAngle: startAngle,\n\t                    clockwise: clockwise\n\t                }\n\t            });\n\t\n\t            graphic.initProps(clipPath, {\n\t                shape: {\n\t                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n\t                }\n\t            }, seriesModel, cb);\n\t\n\t            return clipPath;\n\t        },\n\t\n\t        /**\n\t         * @implement\n\t         */\n\t        containPoint: function (point, seriesModel) {\n\t            var data = seriesModel.getData();\n\t            var itemLayout = data.getItemLayout(0);\n\t            if (itemLayout) {\n\t                var dx = point[0] - itemLayout.cx;\n\t                var dy = point[1] - itemLayout.cy;\n\t                var radius = Math.sqrt(dx * dx + dy * dy);\n\t                return radius <= itemLayout.r && radius >= itemLayout.r0;\n\t            }\n\t        }\n\t\n\t    });\n\t\n\t    module.exports = Pie;\n\n\n/***/ },\n/* 639 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t    var echarts = __webpack_require__(484);\n\t    var zrUtil = __webpack_require__(483);\n\t    module.exports = function (seriesType, actionInfos) {\n\t        zrUtil.each(actionInfos, function (actionInfo) {\n\t            actionInfo.update = 'updateView';\n\t            /**\n\t             * @payload\n\t             * @property {string} seriesName\n\t             * @property {string} name\n\t             */\n\t            echarts.registerAction(actionInfo, function (payload, ecModel) {\n\t                var selected = {};\n\t                ecModel.eachComponent(\n\t                    {mainType: 'series', subType: seriesType, query: payload},\n\t                    function (seriesModel) {\n\t                        if (seriesModel[actionInfo.method]) {\n\t                            seriesModel[actionInfo.method](payload.name);\n\t                        }\n\t                        var data = seriesModel.getData();\n\t                        // Create selected map\n\t                        data.each(function (idx) {\n\t                            var name = data.getName(idx);\n\t                            selected[name] = seriesModel.isSelected(name) || false;\n\t                        });\n\t                    }\n\t                );\n\t                return {\n\t                    name: payload.name,\n\t                    selected: selected\n\t                };\n\t            });\n\t        });\n\t    };\n\n\n/***/ },\n/* 640 */\n/***/ function(module, exports) {\n\n\t// Pick color from palette for each data item\n\t\n\t\n\t    module.exports = function (seriesType, ecModel) {\n\t        // Pie and funnel may use diferrent scope\n\t        var paletteScope = {};\n\t        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n\t            var dataAll = seriesModel.getRawData();\n\t            var idxMap = {};\n\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\n\t                var data = seriesModel.getData();\n\t                data.each(function (idx) {\n\t                    var rawIdx = data.getRawIndex(idx);\n\t                    idxMap[rawIdx] = idx;\n\t                });\n\t                dataAll.each(function (rawIdx) {\n\t                    // FIXME Performance\n\t                    var itemModel = dataAll.getItemModel(rawIdx);\n\t                    var filteredIdx = idxMap[rawIdx];\n\t\n\t                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\t                    var singleDataColor = filteredIdx != null\n\t                        && data.getItemVisual(filteredIdx, 'color', true);\n\t\n\t                    if (!singleDataColor) {\n\t                        var color = itemModel.get('itemStyle.normal.color')\n\t                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n\t                        // Legend may use the visual info in data before processed\n\t                        dataAll.setItemVisual(rawIdx, 'color', color);\n\t\n\t                        // Data is not filtered\n\t                        if (filteredIdx != null) {\n\t                            data.setItemVisual(filteredIdx, 'color', color);\n\t                        }\n\t                    }\n\t                    else {\n\t                        // Set data all color for legend\n\t                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n\t                    }\n\t                });\n\t            }\n\t        });\n\t    };\n\n\n/***/ },\n/* 641 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// TODO minAngle\n\t\n\t\n\t\n\t    var numberUtil = __webpack_require__(489);\n\t    var parsePercent = numberUtil.parsePercent;\n\t    var labelLayout = __webpack_require__(642);\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var PI2 = Math.PI * 2;\n\t    var RADIAN = Math.PI / 180;\n\t\n\t    module.exports = function (seriesType, ecModel, api, payload) {\n\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\t            var center = seriesModel.get('center');\n\t            var radius = seriesModel.get('radius');\n\t\n\t            if (!zrUtil.isArray(radius)) {\n\t                radius = [0, radius];\n\t            }\n\t            if (!zrUtil.isArray(center)) {\n\t                center = [center, center];\n\t            }\n\t\n\t            var width = api.getWidth();\n\t            var height = api.getHeight();\n\t            var size = Math.min(width, height);\n\t            var cx = parsePercent(center[0], width);\n\t            var cy = parsePercent(center[1], height);\n\t            var r0 = parsePercent(radius[0], size / 2);\n\t            var r = parsePercent(radius[1], size / 2);\n\t\n\t            var data = seriesModel.getData();\n\t\n\t            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\t\n\t            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\t\n\t            var sum = data.getSum('value');\n\t            // Sum may be 0\n\t            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\t\n\t            var clockwise = seriesModel.get('clockwise');\n\t\n\t            var roseType = seriesModel.get('roseType');\n\t\n\t            // [0...max]\n\t            var extent = data.getDataExtent('value');\n\t            extent[0] = 0;\n\t\n\t            // In the case some sector angle is smaller than minAngle\n\t            var restAngle = PI2;\n\t            var valueSumLargerThanMinAngle = 0;\n\t\n\t            var currentAngle = startAngle;\n\t\n\t            var dir = clockwise ? 1 : -1;\n\t            data.each('value', function (value, idx) {\n\t                var angle;\n\t                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\t                if (roseType !== 'area') {\n\t                    angle = sum === 0 ? unitRadian : (value * unitRadian);\n\t                }\n\t                else {\n\t                    angle = PI2 / (data.count() || 1);\n\t                }\n\t\n\t                if (angle < minAngle) {\n\t                    angle = minAngle;\n\t                    restAngle -= minAngle;\n\t                }\n\t                else {\n\t                    valueSumLargerThanMinAngle += value;\n\t                }\n\t\n\t                var endAngle = currentAngle + dir * angle;\n\t                data.setItemLayout(idx, {\n\t                    angle: angle,\n\t                    startAngle: currentAngle,\n\t                    endAngle: endAngle,\n\t                    clockwise: clockwise,\n\t                    cx: cx,\n\t                    cy: cy,\n\t                    r0: r0,\n\t                    r: roseType\n\t                        ? numberUtil.linearMap(value, extent, [r0, r])\n\t                        : r\n\t                });\n\t\n\t                currentAngle = endAngle;\n\t            }, true);\n\t\n\t            // Some sector is constrained by minAngle\n\t            // Rest sectors needs recalculate angle\n\t            if (restAngle < PI2) {\n\t                // Average the angle if rest angle is not enough after all angles is\n\t                // Constrained by minAngle\n\t                if (restAngle <= 1e-3) {\n\t                    var angle = PI2 / data.count();\n\t                    data.each(function (idx) {\n\t                        var layout = data.getItemLayout(idx);\n\t                        layout.startAngle = startAngle + dir * idx * angle;\n\t                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n\t                    });\n\t                }\n\t                else {\n\t                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n\t                    currentAngle = startAngle;\n\t                    data.each('value', function (value, idx) {\n\t                        var layout = data.getItemLayout(idx);\n\t                        var angle = layout.angle === minAngle\n\t                            ? minAngle : value * unitRadian;\n\t                        layout.startAngle = currentAngle;\n\t                        layout.endAngle = currentAngle + dir * angle;\n\t                        currentAngle += dir * angle;\n\t                    });\n\t                }\n\t            }\n\t\n\t            labelLayout(seriesModel, r, width, height);\n\t        });\n\t    };\n\n\n/***/ },\n/* 642 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// FIXME emphasis label position is not same with normal label position\n\t\n\t\n\t    var textContain = __webpack_require__(490);\n\t\n\t    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n\t        list.sort(function (a, b) {\n\t            return a.y - b.y;\n\t        });\n\t\n\t        // 压\n\t        function shiftDown(start, end, delta, dir) {\n\t            for (var j = start; j < end; j++) {\n\t                list[j].y += delta;\n\t                if (j > start\n\t                    && j + 1 < end\n\t                    && list[j + 1].y > list[j].y + list[j].height\n\t                ) {\n\t                    shiftUp(j, delta / 2);\n\t                    return;\n\t                }\n\t            }\n\t\n\t            shiftUp(end - 1, delta / 2);\n\t        }\n\t\n\t        // 弹\n\t        function shiftUp(end, delta) {\n\t            for (var j = end; j >= 0; j--) {\n\t                list[j].y -= delta;\n\t                if (j > 0\n\t                    && list[j].y > list[j - 1].y + list[j - 1].height\n\t                ) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t\n\t        function changeX(list, isDownList, cx, cy, r, dir) {\n\t            var lastDeltaX = dir > 0\n\t                ? isDownList                // 右侧\n\t                    ? Number.MAX_VALUE      // 下\n\t                    : 0                     // 上\n\t                : isDownList                // 左侧\n\t                    ? Number.MAX_VALUE      // 下\n\t                    : 0;                    // 上\n\t\n\t            for (var i = 0, l = list.length; i < l; i++) {\n\t                // Not change x for center label\n\t                if (list[i].position === 'center') {\n\t                    continue;\n\t                }\n\t                var deltaY = Math.abs(list[i].y - cy);\n\t                var length = list[i].len;\n\t                var length2 = list[i].len2;\n\t                var deltaX = (deltaY < r + length)\n\t                    ? Math.sqrt(\n\t                          (r + length + length2) * (r + length + length2)\n\t                          - deltaY * deltaY\n\t                      )\n\t                    : Math.abs(list[i].x - cx);\n\t                if (isDownList && deltaX >= lastDeltaX) {\n\t                    // 右下，左下\n\t                    deltaX = lastDeltaX - 10;\n\t                }\n\t                if (!isDownList && deltaX <= lastDeltaX) {\n\t                    // 右上，左上\n\t                    deltaX = lastDeltaX + 10;\n\t                }\n\t\n\t                list[i].x = cx + deltaX * dir;\n\t                lastDeltaX = deltaX;\n\t            }\n\t        }\n\t\n\t        var lastY = 0;\n\t        var delta;\n\t        var len = list.length;\n\t        var upList = [];\n\t        var downList = [];\n\t        for (var i = 0; i < len; i++) {\n\t            delta = list[i].y - lastY;\n\t            if (delta < 0) {\n\t                shiftDown(i, len, -delta, dir);\n\t            }\n\t            lastY = list[i].y + list[i].height;\n\t        }\n\t        if (viewHeight - lastY < 0) {\n\t            shiftUp(len - 1, lastY - viewHeight);\n\t        }\n\t        for (var i = 0; i < len; i++) {\n\t            if (list[i].y >= cy) {\n\t                downList.push(list[i]);\n\t            }\n\t            else {\n\t                upList.push(list[i]);\n\t            }\n\t        }\n\t        changeX(upList, false, cx, cy, r, dir);\n\t        changeX(downList, true, cx, cy, r, dir);\n\t    }\n\t\n\t    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n\t        var leftList = [];\n\t        var rightList = [];\n\t        for (var i = 0; i < labelLayoutList.length; i++) {\n\t            if (labelLayoutList[i].x < cx) {\n\t                leftList.push(labelLayoutList[i]);\n\t            }\n\t            else {\n\t                rightList.push(labelLayoutList[i]);\n\t            }\n\t        }\n\t\n\t        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n\t        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\t\n\t        for (var i = 0; i < labelLayoutList.length; i++) {\n\t            var linePoints = labelLayoutList[i].linePoints;\n\t            if (linePoints) {\n\t                var dist = linePoints[1][0] - linePoints[2][0];\n\t                if (labelLayoutList[i].x < cx) {\n\t                    linePoints[2][0] = labelLayoutList[i].x + 3;\n\t                }\n\t                else {\n\t                    linePoints[2][0] = labelLayoutList[i].x - 3;\n\t                }\n\t                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n\t                linePoints[1][0] = linePoints[2][0] + dist;\n\t            }\n\t        }\n\t    }\n\t\n\t    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n\t        var data = seriesModel.getData();\n\t        var labelLayoutList = [];\n\t        var cx;\n\t        var cy;\n\t        var hasLabelRotate = false;\n\t\n\t        data.each(function (idx) {\n\t            var layout = data.getItemLayout(idx);\n\t\n\t            var itemModel = data.getItemModel(idx);\n\t            var labelModel = itemModel.getModel('label.normal');\n\t            // Use position in normal or emphasis\n\t            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\t\n\t            var labelLineModel = itemModel.getModel('labelLine.normal');\n\t            var labelLineLen = labelLineModel.get('length');\n\t            var labelLineLen2 = labelLineModel.get('length2');\n\t\n\t            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\t            var dx = Math.cos(midAngle);\n\t            var dy = Math.sin(midAngle);\n\t\n\t            var textX;\n\t            var textY;\n\t            var linePoints;\n\t            var textAlign;\n\t\n\t            cx = layout.cx;\n\t            cy = layout.cy;\n\t\n\t            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\t            if (labelPosition === 'center') {\n\t                textX = layout.cx;\n\t                textY = layout.cy;\n\t                textAlign = 'center';\n\t            }\n\t            else {\n\t                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n\t                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\t\n\t                textX = x1 + dx * 3;\n\t                textY = y1 + dy * 3;\n\t\n\t                if (!isLabelInside) {\n\t                    // For roseType\n\t                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n\t                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n\t                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n\t                    var y3 = y2;\n\t\n\t                    textX = x3 + (dx < 0 ? -5 : 5);\n\t                    textY = y3;\n\t                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n\t                }\n\t\n\t                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n\t            }\n\t            var font = labelModel.getModel('textStyle').getFont();\n\t\n\t            var labelRotate = labelModel.get('rotate')\n\t                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n\t            var text = seriesModel.getFormattedLabel(idx, 'normal')\n\t                        || data.getName(idx);\n\t            var textRect = textContain.getBoundingRect(\n\t                text, font, textAlign, 'top'\n\t            );\n\t            hasLabelRotate = !!labelRotate;\n\t            layout.label = {\n\t                x: textX,\n\t                y: textY,\n\t                position: labelPosition,\n\t                height: textRect.height,\n\t                len: labelLineLen,\n\t                len2: labelLineLen2,\n\t                linePoints: linePoints,\n\t                textAlign: textAlign,\n\t                verticalAlign: 'middle',\n\t                font: font,\n\t                rotation: labelRotate\n\t            };\n\t\n\t            // Not layout the inside label\n\t            if (!isLabelInside) {\n\t                labelLayoutList.push(layout.label);\n\t            }\n\t        });\n\t        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n\t            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n\t        }\n\t    };\n\n\n/***/ },\n/* 643 */\n/***/ function(module, exports) {\n\n\t\n\t    module.exports = function (seriesType, ecModel) {\n\t        var legendModels = ecModel.findComponents({\n\t            mainType: 'legend'\n\t        });\n\t        if (!legendModels || !legendModels.length) {\n\t            return;\n\t        }\n\t        ecModel.eachSeriesByType(seriesType, function (series) {\n\t            var data = series.getData();\n\t            data.filterSelf(function (idx) {\n\t                var name = data.getName(idx);\n\t                // If in any legend component the status is not selected.\n\t                for (var i = 0; i < legendModels.length; i++) {\n\t                    if (!legendModels[i].isSelected(name)) {\n\t                        return false;\n\t                    }\n\t                }\n\t                return true;\n\t            }, this);\n\t        }, this);\n\t    };\n\n\n/***/ },\n/* 644 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(645);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(100)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./piechart.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./piechart.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 645 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(94)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 646 */,\n/* 647 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(629);\n\t\n\tvar _gaugechart = __webpack_require__(648);\n\t\n\tvar _gaugechart2 = _interopRequireDefault(_gaugechart);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = angular.module('gaugeChart', ['ng-echarts'])\n\t/**\n\t * 轻在routerConfig.js里定义路由\n\t */\n\t.component('gaugeChart', _gaugechart2.default);\n\n/***/ },\n/* 648 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _gaugechart = __webpack_require__(649);\n\t\n\tvar _gaugechart2 = _interopRequireDefault(_gaugechart);\n\t\n\tvar _gaugechart3 = __webpack_require__(650);\n\t\n\tvar _gaugechart4 = _interopRequireDefault(_gaugechart3);\n\t\n\t__webpack_require__(655);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  restrict: 'E',\n\t  bindings: {},\n\t  template: _gaugechart2.default,\n\t  controller: _gaugechart4.default,\n\t  controllerAs: 'vm'\n\t};\n\n/***/ },\n/* 649 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1>仪表图</h1>\\n\\t<h2>安装</h2>\\n\\t<p>安装ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n\\t<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"bash\\\">npm install ffan-ng-echarts --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>注入模块</h2>\\n\\t<p>在使用图表的模版入口js中注入ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport 'ffan-ng-echarts';\\nimport gaugechartComponent from './gaugechart.component';\\n\\nexport default angular.module('gaugeChart', [\\n  'ng-echarts'\\n.component('gaugeChart', gaugechartComponent);\\n</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<p>在controller中注入echarts lib</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\n// include gauge chart\\nrequire('echarts/lib/chart/gauge');\\n\\n// include tooltip component\\nrequire('echarts/lib/component/tooltip');\\n// include title component\\nrequire('echarts/lib/component/title');\\n// include legend component\\nrequire('echarts/lib/component/legend');\\n</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>示例</h2>\\n</section>\\n\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-4 echarts-container\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.gaugeConfig\\\" ec-option=\\\"vm.gaugeOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.gaugeConfig\\\" ec-option=\\\"vm.gaugeOption\\\" ></ng-echarts>\\n</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nthis.gaugeConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\nthis.gaugeOption = {\\n  series: [\\n  {\\n    name: \\\"外层\\\",\\n    z: 3,\\n    type: \\\"gauge\\\",\\n    startAngle: 180, //总的360，设置180就是半圆\\n    endAngle: 0,\\n    center: [\\\"50%\\\", \\\"77%\\\"], //整体的位置设置\\n    radius: 80,\\n    axisLine: {\\n      lineStyle: {\\n        width: 3, //柱子的宽度\\n        color: [[1, \\\"#1fbba6\\\"], [1, \\\"#dbdbdb\\\"]]\\n      }\\n    },\\n    axisTick: {\\n      show: false\\n    },\\n    axisLabel: {\\n      show: false\\n    },\\n    splitLine: {\\n      show: false\\n    },\\n    pointer: {\\n      width: 0, //指针的宽度\\n      length: \\\"80%\\\", //指针长度，按照半圆半径的百分比\\n      color: \\\"#2d99e2\\\"\\n    },\\n    title: {\\n      show: false\\n    },\\n    detail: {\\n      show: false\\n    },\\n    data: [{ //显示数据\\n      value: 100,\\n      name: \\\"100%\\\"\\n    }]\\n  },\\n  {\\n    name: \\\"内层\\\",\\n    type: \\\"gauge\\\",\\n    startAngle: 180, //总的360，设置180就是半圆\\n    endAngle: 0,\\n    center: [\\\"50%\\\", \\\"77%\\\"], //整体的位置设置\\n    radius: 75,\\n    axisLine: {\\n      lineStyle: {\\n        width: 30, //柱子的宽度\\n        color: [[0.305, \\\"#1fbba6\\\"], [1, \\\"#dbdbdb\\\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\\n      }\\n    },\\n    axisTick: {\\n      show: false\\n    },\\n    axisLabel: {\\n      show: false\\n    },\\n    splitLine: {\\n      show: false\\n    },\\n    pointer: {\\n      width: 0, //指针的宽度\\n      length: \\\"80%\\\", //指针长度，按照半圆半径的百分比\\n      color: \\\"#2d99e2\\\"\\n    },\\n    title: {\\n      show: true,\\n      offsetCenter: [0, '-10px'], //标题位置设置\\n      textStyle: { //标题样式设置\\n        color: \\\"#1fbba6\\\",\\n        fontSize: 18,\\n        fontFamily: \\\"Arial\\\",\\n        fontWeight: \\\"normal\\\"\\n      }\\n    },\\n    detail: {\\n      show: false\\n    },\\n    data: [{ //显示数据\\n      value: 30.50,\\n      name: \\\"30.50%\\\"\\n    }]\\n  }]\\n};\\n</div>\\n</div>\"\n\n/***/ },\n/* 650 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * (description)\n\t *\n\t * @author yourname\n\t */\n\t\n\t// include gauge chart\n\t__webpack_require__(651);\n\t\n\t// include tooltip component\n\t__webpack_require__(616);\n\t// include title component\n\t__webpack_require__(620);\n\t// include legend component\n\t__webpack_require__(621);\n\t\n\tvar GaugechartController = function () {\n\t\tfunction GaugechartController() {\n\t\t\t\"ngInject\";\n\t\n\t\t\t_classCallCheck(this, GaugechartController);\n\t\n\t\t\tthis.initGaugeChart();\n\t\t}\n\t\n\t\t_createClass(GaugechartController, [{\n\t\t\tkey: 'initGaugeChart',\n\t\t\tvalue: function initGaugeChart() {\n\t\t\t\tthis.gaugeConfig = {\n\t\t\t\t\ttheme: 'default',\n\t\t\t\t\tdataLoaded: true\n\t\t\t\t};\n\t\n\t\t\t\tthis.gaugeOption = {\n\t\t\t\t\tseries: [{\n\t\t\t\t\t\tname: \"外层\",\n\t\t\t\t\t\tz: 3,\n\t\t\t\t\t\ttype: \"gauge\",\n\t\t\t\t\t\tstartAngle: 180, //总的360，设置180就是半圆\n\t\t\t\t\t\tendAngle: 0,\n\t\t\t\t\t\tcenter: [\"50%\", \"77%\"], //整体的位置设置\n\t\t\t\t\t\tradius: 80,\n\t\t\t\t\t\taxisLine: {\n\t\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\t\twidth: 3, //柱子的宽度\n\t\t\t\t\t\t\t\tcolor: [[1, \"#1fbba6\"], [1, \"#dbdbdb\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\taxisTick: {\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpointer: {\n\t\t\t\t\t\t\twidth: 0, //指针的宽度\n\t\t\t\t\t\t\tlength: \"80%\", //指针长度，按照半圆半径的百分比\n\t\t\t\t\t\t\tcolor: \"#2d99e2\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdata: [{ //显示数据\n\t\t\t\t\t\t\tvalue: 100,\n\t\t\t\t\t\t\tname: \"100%\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t}, {\n\t\t\t\t\t\tname: \"内层\",\n\t\t\t\t\t\ttype: \"gauge\",\n\t\t\t\t\t\tstartAngle: 180, //总的360，设置180就是半圆\n\t\t\t\t\t\tendAngle: 0,\n\t\t\t\t\t\tcenter: [\"50%\", \"77%\"], //整体的位置设置\n\t\t\t\t\t\tradius: 75,\n\t\t\t\t\t\taxisLine: {\n\t\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\t\twidth: 30, //柱子的宽度\n\t\t\t\t\t\t\t\tcolor: [[0.305, \"#1fbba6\"], [1, \"#dbdbdb\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\taxisTick: {\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpointer: {\n\t\t\t\t\t\t\twidth: 0, //指针的宽度\n\t\t\t\t\t\t\tlength: \"80%\", //指针长度，按照半圆半径的百分比\n\t\t\t\t\t\t\tcolor: \"#2d99e2\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\toffsetCenter: [0, '-10px'], //标题位置设置\n\t\t\t\t\t\t\ttextStyle: { //标题样式设置\n\t\t\t\t\t\t\t\tcolor: \"#1fbba6\",\n\t\t\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\t\t\tfontFamily: \"Arial\",\n\t\t\t\t\t\t\t\tfontWeight: \"normal\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdata: [{ //显示数据\n\t\t\t\t\t\t\tvalue: 30.50,\n\t\t\t\t\t\t\tname: \"30.50%\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn GaugechartController;\n\t}();\n\t\n\texports.default = GaugechartController;\n\n/***/ },\n/* 651 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t    __webpack_require__(652);\n\t    __webpack_require__(653);\n\n\n/***/ },\n/* 652 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var List = __webpack_require__(580);\n\t    var SeriesModel = __webpack_require__(510);\n\t    var zrUtil = __webpack_require__(483);\n\t\n\t    var GaugeSeries = SeriesModel.extend({\n\t\n\t        type: 'series.gauge',\n\t\n\t        getInitialData: function (option, ecModel) {\n\t            var list = new List(['value'], this);\n\t            var dataOpt = option.data || [];\n\t            if (!zrUtil.isArray(dataOpt)) {\n\t                dataOpt = [dataOpt];\n\t            }\n\t            // Only use the first data item\n\t            list.initData(dataOpt);\n\t            return list;\n\t        },\n\t\n\t        defaultOption: {\n\t            zlevel: 0,\n\t            z: 2,\n\t            // 默认全局居中\n\t            center: ['50%', '50%'],\n\t            legendHoverLink: true,\n\t            radius: '75%',\n\t            startAngle: 225,\n\t            endAngle: -45,\n\t            clockwise: true,\n\t            // 最小值\n\t            min: 0,\n\t            // 最大值\n\t            max: 100,\n\t            // 分割段数，默认为10\n\t            splitNumber: 10,\n\t            // 坐标轴线\n\t            axisLine: {\n\t                // 默认显示，属性show控制显示与否\n\t                show: true,\n\t                lineStyle: {       // 属性lineStyle控制线条样式\n\t                    color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n\t                    width: 30\n\t                }\n\t            },\n\t            // 分隔线\n\t            splitLine: {\n\t                // 默认显示，属性show控制显示与否\n\t                show: true,\n\t                // 属性length控制线长\n\t                length: 30,\n\t                // 属性lineStyle（详见lineStyle）控制线条样式\n\t                lineStyle: {\n\t                    color: '#eee',\n\t                    width: 2,\n\t                    type: 'solid'\n\t                }\n\t            },\n\t            // 坐标轴小标记\n\t            axisTick: {\n\t                // 属性show控制显示与否，默认不显示\n\t                show: true,\n\t                // 每份split细分多少段\n\t                splitNumber: 5,\n\t                // 属性length控制线长\n\t                length: 8,\n\t                // 属性lineStyle控制线条样式\n\t                lineStyle: {\n\t                    color: '#eee',\n\t                    width: 1,\n\t                    type: 'solid'\n\t                }\n\t            },\n\t            axisLabel: {\n\t                show: true,\n\t                distance: 5,\n\t                // formatter: null,\n\t                textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n\t                    color: 'auto'\n\t                }\n\t            },\n\t            pointer: {\n\t                show: true,\n\t                length: '80%',\n\t                width: 8\n\t            },\n\t            itemStyle: {\n\t                normal: {\n\t                    color: 'auto'\n\t                }\n\t            },\n\t            title: {\n\t                show: true,\n\t                // x, y，单位px\n\t                offsetCenter: [0, '-40%'],\n\t                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n\t                textStyle: {\n\t                    color: '#333',\n\t                    fontSize: 15\n\t                }\n\t            },\n\t            detail: {\n\t                show: true,\n\t                backgroundColor: 'rgba(0,0,0,0)',\n\t                borderWidth: 0,\n\t                borderColor: '#ccc',\n\t                width: 100,\n\t                height: 40,\n\t                // x, y，单位px\n\t                offsetCenter: [0, '40%'],\n\t                // formatter: null,\n\t                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n\t                textStyle: {\n\t                    color: 'auto',\n\t                    fontSize: 30\n\t                }\n\t            }\n\t        }\n\t    });\n\t\n\t    module.exports = GaugeSeries;\n\n\n/***/ },\n/* 653 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var PointerPath = __webpack_require__(654);\n\t\n\t    var graphic = __webpack_require__(525);\n\t    var numberUtil = __webpack_require__(489);\n\t    var parsePercent = numberUtil.parsePercent;\n\t\n\t    function parsePosition(seriesModel, api) {\n\t        var center = seriesModel.get('center');\n\t        var width = api.getWidth();\n\t        var height = api.getHeight();\n\t        var size = Math.min(width, height);\n\t        var cx = parsePercent(center[0], api.getWidth());\n\t        var cy = parsePercent(center[1], api.getHeight());\n\t        var r = parsePercent(seriesModel.get('radius'), size / 2);\n\t\n\t        return {\n\t            cx: cx,\n\t            cy: cy,\n\t            r: r\n\t        };\n\t    }\n\t\n\t    function formatLabel(label, labelFormatter) {\n\t        if (labelFormatter) {\n\t            if (typeof labelFormatter === 'string') {\n\t                label = labelFormatter.replace('{value}', label != null ? label : '');\n\t            }\n\t            else if (typeof labelFormatter === 'function') {\n\t                label = labelFormatter(label);\n\t            }\n\t        }\n\t\n\t        return label;\n\t    }\n\t\n\t    var PI2 = Math.PI * 2;\n\t\n\t    var GaugeView = __webpack_require__(524).extend({\n\t\n\t        type: 'gauge',\n\t\n\t        render: function (seriesModel, ecModel, api) {\n\t\n\t            this.group.removeAll();\n\t\n\t            var colorList = seriesModel.get('axisLine.lineStyle.color');\n\t            var posInfo = parsePosition(seriesModel, api);\n\t\n\t            this._renderMain(\n\t                seriesModel, ecModel, api, colorList, posInfo\n\t            );\n\t        },\n\t\n\t        dispose: function () {},\n\t\n\t        _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n\t            var group = this.group;\n\t\n\t            var axisLineModel = seriesModel.getModel('axisLine');\n\t            var lineStyleModel = axisLineModel.getModel('lineStyle');\n\t\n\t            var clockwise = seriesModel.get('clockwise');\n\t            var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n\t            var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n\t\n\t            var angleRangeSpan = (endAngle - startAngle) % PI2;\n\t\n\t            var prevEndAngle = startAngle;\n\t            var axisLineWidth = lineStyleModel.get('width');\n\t\n\t            for (var i = 0; i < colorList.length; i++) {\n\t                // Clamp\n\t                var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n\t                var endAngle = startAngle + angleRangeSpan * percent;\n\t                var sector = new graphic.Sector({\n\t                    shape: {\n\t                        startAngle: prevEndAngle,\n\t                        endAngle: endAngle,\n\t                        cx: posInfo.cx,\n\t                        cy: posInfo.cy,\n\t                        clockwise: clockwise,\n\t                        r0: posInfo.r - axisLineWidth,\n\t                        r: posInfo.r\n\t                    },\n\t                    silent: true\n\t                });\n\t\n\t                sector.setStyle({\n\t                    fill: colorList[i][1]\n\t                });\n\t\n\t                sector.setStyle(lineStyleModel.getLineStyle(\n\t                    // Because we use sector to simulate arc\n\t                    // so the properties for stroking are useless\n\t                    ['color', 'borderWidth', 'borderColor']\n\t                ));\n\t\n\t                group.add(sector);\n\t\n\t                prevEndAngle = endAngle;\n\t            }\n\t\n\t            var getColor = function (percent) {\n\t                // Less than 0\n\t                if (percent <= 0) {\n\t                    return colorList[0][1];\n\t                }\n\t                for (var i = 0; i < colorList.length; i++) {\n\t                    if (colorList[i][0] >= percent\n\t                        && (i === 0 ? 0 : colorList[i - 1][0]) < percent\n\t                    ) {\n\t                        return colorList[i][1];\n\t                    }\n\t                }\n\t                // More than 1\n\t                return colorList[i - 1][1];\n\t            };\n\t\n\t            if (!clockwise) {\n\t                var tmp = startAngle;\n\t                startAngle = endAngle;\n\t                endAngle = tmp;\n\t            }\n\t\n\t            this._renderTicks(\n\t                seriesModel, ecModel, api, getColor, posInfo,\n\t                startAngle, endAngle, clockwise\n\t            );\n\t\n\t            this._renderPointer(\n\t                seriesModel, ecModel, api, getColor, posInfo,\n\t                startAngle, endAngle, clockwise\n\t            );\n\t\n\t            this._renderTitle(\n\t                seriesModel, ecModel, api, getColor, posInfo\n\t            );\n\t            this._renderDetail(\n\t                seriesModel, ecModel, api, getColor, posInfo\n\t            );\n\t        },\n\t\n\t        _renderTicks: function (\n\t            seriesModel, ecModel, api, getColor, posInfo,\n\t            startAngle, endAngle, clockwise\n\t        ) {\n\t            var group = this.group;\n\t            var cx = posInfo.cx;\n\t            var cy = posInfo.cy;\n\t            var r = posInfo.r;\n\t\n\t            var minVal = seriesModel.get('min');\n\t            var maxVal = seriesModel.get('max');\n\t\n\t            var splitLineModel = seriesModel.getModel('splitLine');\n\t            var tickModel = seriesModel.getModel('axisTick');\n\t            var labelModel = seriesModel.getModel('axisLabel');\n\t\n\t            var splitNumber = seriesModel.get('splitNumber');\n\t            var subSplitNumber = tickModel.get('splitNumber');\n\t\n\t            var splitLineLen = parsePercent(\n\t                splitLineModel.get('length'), r\n\t            );\n\t            var tickLen = parsePercent(\n\t                tickModel.get('length'), r\n\t            );\n\t\n\t            var angle = startAngle;\n\t            var step = (endAngle - startAngle) / splitNumber;\n\t            var subStep = step / subSplitNumber;\n\t\n\t            var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n\t            var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\t            var textStyleModel = labelModel.getModel('textStyle');\n\t\n\t            for (var i = 0; i <= splitNumber; i++) {\n\t                var unitX = Math.cos(angle);\n\t                var unitY = Math.sin(angle);\n\t                // Split line\n\t                if (splitLineModel.get('show')) {\n\t                    var splitLine = new graphic.Line({\n\t                        shape: {\n\t                            x1: unitX * r + cx,\n\t                            y1: unitY * r + cy,\n\t                            x2: unitX * (r - splitLineLen) + cx,\n\t                            y2: unitY * (r - splitLineLen) + cy\n\t                        },\n\t                        style: splitLineStyle,\n\t                        silent: true\n\t                    });\n\t                    if (splitLineStyle.stroke === 'auto') {\n\t                        splitLine.setStyle({\n\t                            stroke: getColor(i / splitNumber)\n\t                        });\n\t                    }\n\t\n\t                    group.add(splitLine);\n\t                }\n\t\n\t                // Label\n\t                if (labelModel.get('show')) {\n\t                    var label = formatLabel(\n\t                        numberUtil.round(i / splitNumber * (maxVal - minVal) + minVal),\n\t                        labelModel.get('formatter')\n\t                    );\n\t                    var distance = labelModel.get('distance');\n\t\n\t                    var text = new graphic.Text({\n\t                        style: {\n\t                            text: label,\n\t                            x: unitX * (r - splitLineLen - distance) + cx,\n\t                            y: unitY * (r - splitLineLen - distance) + cy,\n\t                            fill: textStyleModel.getTextColor(),\n\t                            textFont: textStyleModel.getFont(),\n\t                            textVerticalAlign: unitY < -0.4 ? 'top' : (unitY > 0.4 ? 'bottom' : 'middle'),\n\t                            textAlign: unitX < -0.4 ? 'left' : (unitX > 0.4 ? 'right' : 'center')\n\t                        },\n\t                        silent: true\n\t                    });\n\t                    if (text.style.fill === 'auto') {\n\t                        text.setStyle({\n\t                            fill: getColor(i / splitNumber)\n\t                        });\n\t                    }\n\t\n\t                    group.add(text);\n\t                }\n\t\n\t                // Axis tick\n\t                if (tickModel.get('show') && i !== splitNumber) {\n\t                    for (var j = 0; j <= subSplitNumber; j++) {\n\t                        var unitX = Math.cos(angle);\n\t                        var unitY = Math.sin(angle);\n\t                        var tickLine = new graphic.Line({\n\t                            shape: {\n\t                                x1: unitX * r + cx,\n\t                                y1: unitY * r + cy,\n\t                                x2: unitX * (r - tickLen) + cx,\n\t                                y2: unitY * (r - tickLen) + cy\n\t                            },\n\t                            silent: true,\n\t                            style: tickLineStyle\n\t                        });\n\t\n\t                        if (tickLineStyle.stroke === 'auto') {\n\t                            tickLine.setStyle({\n\t                                stroke: getColor((i + j / subSplitNumber) / splitNumber)\n\t                            });\n\t                        }\n\t\n\t                        group.add(tickLine);\n\t                        angle += subStep;\n\t                    }\n\t                    angle -= subStep;\n\t                }\n\t                else {\n\t                    angle += step;\n\t                }\n\t            }\n\t        },\n\t\n\t        _renderPointer: function (\n\t            seriesModel, ecModel, api, getColor, posInfo,\n\t            startAngle, endAngle, clockwise\n\t        ) {\n\t            var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n\t            var angleExtent = [startAngle, endAngle];\n\t\n\t            var data = seriesModel.getData();\n\t            var oldData = this._data;\n\t\n\t            var group = this.group;\n\t\n\t            data.diff(oldData)\n\t                .add(function (idx) {\n\t                    var pointer = new PointerPath({\n\t                        shape: {\n\t                            angle: startAngle\n\t                        }\n\t                    });\n\t\n\t                    graphic.updateProps(pointer, {\n\t                        shape: {\n\t                            angle: numberUtil.linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n\t                        }\n\t                    }, seriesModel);\n\t\n\t                    group.add(pointer);\n\t                    data.setItemGraphicEl(idx, pointer);\n\t                })\n\t                .update(function (newIdx, oldIdx) {\n\t                    var pointer = oldData.getItemGraphicEl(oldIdx);\n\t\n\t                    graphic.updateProps(pointer, {\n\t                        shape: {\n\t                            angle: numberUtil.linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n\t                        }\n\t                    }, seriesModel);\n\t\n\t                    group.add(pointer);\n\t                    data.setItemGraphicEl(newIdx, pointer);\n\t                })\n\t                .remove(function (idx) {\n\t                    var pointer = oldData.getItemGraphicEl(idx);\n\t                    group.remove(pointer);\n\t                })\n\t                .execute();\n\t\n\t            data.eachItemGraphicEl(function (pointer, idx) {\n\t                var itemModel = data.getItemModel(idx);\n\t                var pointerModel = itemModel.getModel('pointer');\n\t\n\t                pointer.setShape({\n\t                    x: posInfo.cx,\n\t                    y: posInfo.cy,\n\t                    width: parsePercent(\n\t                        pointerModel.get('width'), posInfo.r\n\t                    ),\n\t                    r: parsePercent(pointerModel.get('length'), posInfo.r)\n\t                });\n\t\n\t                pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\t\n\t                if (pointer.style.fill === 'auto') {\n\t                    pointer.setStyle('fill', getColor(\n\t                        (data.get('value', idx) - valueExtent[0]) / (valueExtent[1] - valueExtent[0])\n\t                    ));\n\t                }\n\t\n\t                graphic.setHoverStyle(\n\t                    pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle()\n\t                );\n\t            });\n\t\n\t            this._data = data;\n\t        },\n\t\n\t        _renderTitle: function (\n\t            seriesModel, ecModel, api, getColor, posInfo\n\t        ) {\n\t            var titleModel = seriesModel.getModel('title');\n\t            if (titleModel.get('show')) {\n\t                var textStyleModel = titleModel.getModel('textStyle');\n\t                var offsetCenter = titleModel.get('offsetCenter');\n\t                var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n\t                var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n\t                var text = new graphic.Text({\n\t                    style: {\n\t                        x: x,\n\t                        y: y,\n\t                        // FIXME First data name ?\n\t                        text: seriesModel.getData().getName(0),\n\t                        fill: textStyleModel.getTextColor(),\n\t                        textFont: textStyleModel.getFont(),\n\t                        textAlign: 'center',\n\t                        textVerticalAlign: 'middle'\n\t                    }\n\t                });\n\t                this.group.add(text);\n\t            }\n\t        },\n\t\n\t        _renderDetail: function (\n\t            seriesModel, ecModel, api, getColor, posInfo\n\t        ) {\n\t            var detailModel = seriesModel.getModel('detail');\n\t            var minVal = seriesModel.get('min');\n\t            var maxVal = seriesModel.get('max');\n\t            if (detailModel.get('show')) {\n\t                var textStyleModel = detailModel.getModel('textStyle');\n\t                var offsetCenter = detailModel.get('offsetCenter');\n\t                var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n\t                var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n\t                var width = parsePercent(detailModel.get('width'), posInfo.r);\n\t                var height = parsePercent(detailModel.get('height'), posInfo.r);\n\t                var value = seriesModel.getData().get('value', 0);\n\t                var rect = new graphic.Rect({\n\t                    shape: {\n\t                        x: x - width / 2,\n\t                        y: y - height / 2,\n\t                        width: width,\n\t                        height: height\n\t                    },\n\t                    style: {\n\t                        text: formatLabel(\n\t                            // FIXME First data name ?\n\t                            value, detailModel.get('formatter')\n\t                        ),\n\t                        fill: detailModel.get('backgroundColor'),\n\t                        textFill: textStyleModel.getTextColor(),\n\t                        textFont: textStyleModel.getFont()\n\t                    }\n\t                });\n\t                if (rect.style.textFill === 'auto') {\n\t                    rect.setStyle('textFill', getColor(\n\t                        numberUtil.linearMap(value, [minVal, maxVal], [0, 1], true)\n\t                    ));\n\t                }\n\t                rect.setStyle(detailModel.getItemStyle(['color']));\n\t                this.group.add(rect);\n\t            }\n\t        }\n\t    });\n\t\n\t    module.exports = GaugeView;\n\n\n/***/ },\n/* 654 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    module.exports = __webpack_require__(527).extend({\n\t\n\t        type: 'echartsGaugePointer',\n\t\n\t        shape: {\n\t            angle: 0,\n\t\n\t            width: 10,\n\t\n\t            r: 10,\n\t\n\t            x: 0,\n\t\n\t            y: 0\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var mathCos = Math.cos;\n\t            var mathSin = Math.sin;\n\t\n\t            var r = shape.r;\n\t            var width = shape.width;\n\t            var angle = shape.angle;\n\t            var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n\t            var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n\t\n\t            angle = shape.angle - Math.PI / 2;\n\t            ctx.moveTo(x, y);\n\t            ctx.lineTo(\n\t                shape.x + mathCos(angle) * width,\n\t                shape.y + mathSin(angle) * width\n\t            );\n\t            ctx.lineTo(\n\t                shape.x + mathCos(shape.angle) * r,\n\t                shape.y + mathSin(shape.angle) * r\n\t            );\n\t            ctx.lineTo(\n\t                shape.x - mathCos(angle) * width,\n\t                shape.y - mathSin(angle) * width\n\t            );\n\t            ctx.lineTo(x, y);\n\t            return;\n\t        }\n\t    });\n\n\n/***/ },\n/* 655 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(656);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(100)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./gaugechart.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./gaugechart.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 656 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(94)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }\n]));\n\n\n// WEBPACK FOOTER //\n// chart.min.js","import linechartComponent from './linechart.component';\nimport 'ffan-ng-echarts';\n\nexport default angular.module('lineChart', [\n\t\t'ng-echarts'\n\t])\n\t/**\n\t * 轻在routerConfig.js里定义路由\n\t */\n\t.component('lineChart', linechartComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/linechart/linechart.js","import template from './linechart.html';\nimport controller from './linechart.controller';\nimport './linechart.less';\n\nexport default {\n  restrict: 'E',\n  bindings: {},\n  template,\n  controller,\n  controllerAs: 'vm'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/linechart/linechart.component.js","module.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1>曲线图</h1>\\n\\t<h2>安装</h2>\\n\\t<p>安装ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n\\t<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"bash\\\">npm install ffan-ng-echarts --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>注入模块</h2>\\n\\t<p>在使用图表的模版入口js中注入ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport 'ffan-ng-echarts';\\nimport linechartComponent from './linechart.component';\\n\\nexport default angular.module('lineChart', [\\n  'ng-echarts'\\n])\\n.component('lineChart', linechartComponent);\\n</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<p>在controller中注入echarts lib</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\n// include line chart\\nrequire('echarts/lib/chart/line');\\n\\n// include tooltip component\\nrequire('echarts/lib/component/tooltip');\\n// include title component\\nrequire('echarts/lib/component/title');\\n// include legend component\\nrequire('echarts/lib/component/legend');\\n</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>示例</h2>\\n</section>\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-12 echarts-container\\\" style=\\\"height: 400px\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.lineConfig\\\" ec-option=\\\"vm.lineOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.lineConfig\\\" ec-option=\\\"vm.lineOption\\\" ></ng-echarts>\\n</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nlet self = this;\\nthis.lineConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\n\\nthis.lineOption = {\\n  title: {\\n    text: '内存使用情况',\\n    subtext: 'pod memory usage',\\n    textAlign: 'left',\\n    x: \\\"0\\\",\\n    textStyle: {\\n      color: '#666',\\n      fontSize: '14'\\n    },\\n    subtextStyle: {\\n      color: '#d6d6d6',\\n      fontSize: '12',\\n      display: 'inline'\\n    }\\n  },\\n  grid: {\\n    borderWidth: 0,\\n    borderColor: '#f2f2f2'\\n  },\\n  legend: {\\n    orient: 'horizontal',\\n    top: '0',\\n    right: '0',\\n    align: 'left',\\n    data: ['op-lodgings-sync', 'elasticsearch-logging']\\n  },\\n  tooltip: {\\n    trigger: 'axis'\\n  },\\n  xAxis: {\\n    type: 'category',\\n    boundaryGap: false,\\n    data: ['13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55', '14:00', '14:05', '14:10', '14:15', '14:20'],\\n      splitLine: {\\n      show: true,\\n      interval: 'auto'\\n    }\\n  },\\n  yAxis: {\\n    type: 'value',\\n    axisLabel: {\\n      formatter: '{value} GiB'\\n    }\\n  },\\n  color: ['#64b1e4', '#fa9073'],\\n  series: [\\n    {\\n      name: 'op-lodgings-sync',\\n      type: 'line',\\n      smooth: false,\\n      data: [1.1, 4.5, 3.4, 1.7, 3.8, 2.1, 4.5, 4.7, 5.1, 3.8, 5.5, 6.2]\\n    },\\n    {\\n      name: 'elasticsearch-logging',\\n      type: 'line',\\n      smooth: false,\\n      data: [2.6, 3.7, 5.1, 8.2, 3.2, 6.1, 3.9, 4.5, 3.4, 1.7, 3.8, 2.1]\\n    }\\n  ]\\n};\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/app/components/linechart/linechart.html\n// module id = 480\n// module chunks = 16","/**\n * (description)\n *\n * @author yourname\n */\n\n// include line chart\nrequire('echarts/lib/chart/line');\n\n// include tooltip component\nrequire('echarts/lib/component/tooltip');\n// include title component\nrequire('echarts/lib/component/title');\n// include legend component\nrequire('echarts/lib/component/legend');\n\nexport default class LinechartController {\n\tconstructor() {\n\t\t\"ngInject\";\n\t\tthis.initLineChart();\n\t}\n\n\tinitLineChart() {\n\t\tlet self =  this;\n\t\tthis.lineConfig = {\n\t\t\ttheme: 'default',\n\t\t\tdataLoaded: true\n\t\t};\n\n\t\tthis.lineOption = {\n\t\t\ttitle: {\n\t\t\t\ttext: '内存使用情况',\n\t\t\t\tsubtext: 'pod memory usage',\n\t\t\t\ttextAlign: 'left',\n\t\t\t\tx: \"0\",\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#666',\n\t\t\t\t\tfontSize: '14'\n\t\t\t\t},\n\t\t\t\tsubtextStyle: {\n\t\t\t\t\tcolor: '#d6d6d6',\n\t\t\t\t\tfontSize: '12',\n\t\t\t\t\tdisplay: 'inline'\n\t\t\t\t}\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tborderWidth: 0,\n\t\t\t\tborderColor: '#f2f2f2'\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\torient: 'horizontal',\n\t\t\t\ttop: '0',\n\t\t\t\tright: '0',\n\t\t\t\talign: 'left',\n\t\t\t\tdata: ['op-lodgings-sync', 'elasticsearch-logging']\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis'\n\t\t\t},\n\t\t\txAxis: {\n\t\t\t\ttype: 'category',\n\t\t\t\tboundaryGap: false,\n\t\t\t\tdata: ['13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55', '14:00', '14:05', '14:10', '14:15', '14:20'],\n\t\t\t\tsplitLine: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tinterval: 'auto'\n\t\t\t\t}\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\ttype: 'value',\n\t\t\t\taxisLabel: {\n\t\t\t\t\tformatter: '{value} GiB'\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolor: ['#64b1e4', '#fa9073'],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'op-lodgings-sync',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tsmooth: false,\n\t\t\t\t\tdata: [1.1, 4.5, 3.4, 1.7, 3.8, 2.1, 4.5, 4.7, 5.1, 3.8, 5.5, 6.2]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'elasticsearch-logging',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tsmooth: false,\n\t\t\t\t\tdata: [2.6, 3.7, 5.1, 8.2, 3.2, 6.1, 3.9, 4.5, 3.4, 1.7, 3.8, 2.1]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/linechart/linechart.controller.js","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 482\n// module chunks = 16","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuildInObject(sourceProp)\n                    && !isBuildInObject(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuildInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuildInObject: isBuildInObject,\n        isDom: isDom,\n        retrieve: retrieve,\n        assert: assert,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 483\n// module chunks = 16","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * @param {Object} option\n     * @param {boolean} notMerge\n     * @param {boolean} [lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = true;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n            this[OPTION_UPDATED] = false;\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        flushPendingActions.call(this, false);\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        // PENDING\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        highlight: function (payload) {\n            toggleHighlight.call(this, 'highlight', payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        downplay: function (payload) {\n            toggleHighlight.call(this, 'downplay', payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @param {Object} payload\n     * @private\n     */\n    function toggleHighlight(method, payload) {\n        var ecModel = this._model;\n\n        // dispatchAction before setOption\n        if (!ecModel) {\n            return;\n        }\n\n        ecModel.eachComponent(\n            {mainType: 'series', query: payload},\n            function (seriesModel, index) {\n                var chartView = this._chartsMap[seriesModel.__viewId];\n                if (chartView && chartView.__alive) {\n                    chartView[method](\n                        seriesModel, ecModel, this._api, payload\n                    );\n                }\n            },\n            this\n        );\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        updateMethods[optionChanged ? 'prepareAndUpdate' : 'update'].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        flushPendingActions.call(this);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var actionWrap = actions[payload.type];\n        var actionInfo = actionWrap.actionInfo;\n        var updateMethod = actionInfo.update || 'update';\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighlightOrDownplay = payload.type === 'highlight' || payload.type === 'downplay';\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // Highlight and downplay are special.\n            isHighlightOrDownplay && updateMethods[updateMethod].call(this, batchItem);\n        }\n\n        if (updateMethod !== 'none' && !isHighlightOrDownplay) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payload.type,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = ComponentModel.parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.3.2',\n        dependencies: {\n            zrender: '3.2.2'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n\n    var parseClassType = ComponentModel.parseClassType;\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts, superClass) {\n        var Clazz = ComponentModel;\n        if (superClass) {\n            var classType = parseClassType(superClass);\n            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts, superClass) {\n        var Clazz = ComponentView;\n        if (superClass) {\n            var classType = parseClassType(superClass);\n            Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts, superClass) {\n        var Clazz = SeriesModel;\n        if (superClass) {\n            superClass = 'series.' + superClass.replace('series.', '');\n            var classType = parseClassType(superClass);\n            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts, superClass) {\n        var Clazz = ChartView;\n        if (superClass) {\n            superClass.replace('series.', '');\n            var classType = parseClassType(superClass);\n            Clazz = ChartView.getClass(classType.main, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 484\n// module chunks = 16","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default,\n                // only MS browsers are reliable on pointer events currently.\n                && (browser.edge || (browser.ie && browser.version >= 10))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 485\n// module chunks = 16","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q.hasOwnProperty(indexAttr)\n                        || q.hasOwnProperty(idAttr)\n                        || q.hasOwnProperty(nameAttr)\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 486\n// module chunks = 16","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 487\n// module chunks = 16","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param  {string} tpl\n     * @param  {Array.<Object>|Object} paramsList\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            tpl = tpl.replace(wrapVar(alias),  wrapVar(alias, 0));\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    paramsList[seriesIdx][$vars[k]]\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 488\n// module chunks = 16","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number}  precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        return Math.max(\n            -dataQuantity + sizeQuantity,\n            0\n        );\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 489\n// module chunks = 16","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var halfHeight = height / 2 - textHeight / 2;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'top'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 490\n// module chunks = 16","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 491\n// module chunks = 16","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 492\n// module chunks = 16","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 493\n// module chunks = 16","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (!path) {\n                return this.option;\n            }\n\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n\n            var obj = this.option;\n            var parentModel = this.parentModel;\n            for (var i = 0; i < path.length; i++) {\n                // Ignore empty\n                if (!path[i]) {\n                    continue;\n                }\n                // obj could be number/string/... (like 0)\n                obj = (obj && typeof obj === 'object') ? obj[path[i]] : null;\n                if (obj == null) {\n                    break;\n                }\n            }\n            if (obj == null && parentModel && !ignoreParent) {\n                obj = parentModel.get(path);\n            }\n            return obj;\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = this.parentModel;\n            if (val == null && parentModel && !ignoreParent) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = this.get(path, true);\n            var thisParentModel = this.parentModel;\n            var model = new Model(\n                obj, parentModel || (thisParentModel && thisParentModel.getModel(path)),\n                this.ecModel\n            );\n            return model;\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        }\n    };\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 494\n// module chunks = 16","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentTypeMain, subType, throwWhenNotFound) {\n            var Clazz = storage[componentTypeMain];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    'Component ' + componentTypeMain + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 495\n// module chunks = 16","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 496\n// module chunks = 16","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 497\n// module chunks = 16","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 498\n// module chunks = 16","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 499\n// module chunks = 16","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 500\n// module chunks = 16","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!this.hasOwnProperty('__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                this.__defaultOption = defaultOption;\n            }\n            return this.__defaultOption;\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 501\n// module chunks = 16","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 502\n// module chunks = 16","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 503\n// module chunks = 16","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 504\n// module chunks = 16","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 505\n// module chunks = 16","\n    module.exports = {\n        clearColorPalette: function () {\n            this._colorIdx = 0;\n            this._colorNameMap = {};\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = scope._colorIdx || 0;\n            var colorNameMap = scope._colorNameMap || (scope._colorNameMap = {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            scope._colorIdx = (colorIdx + 1) % colorPalette.length;\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 506\n// module chunks = 16","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 507\n// module chunks = 16","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 508\n// module chunks = 16","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 509\n// module chunks = 16","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            this._dataBeforeProcessed = this.getInitialData(option, ecModel);\n\n            // If we reverse the order (make this._data firstly, and then make\n            // this._dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause this._data.graph.data !== this._data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this._data = this._dataBeforeProcessed.cloneShallow();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                this._data = data;\n                this._dataBeforeProcessed = data.cloneShallow();\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            return dataType == null ? this._data : this._data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            this._data = data;\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return this._dataBeforeProcessed;\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = this._data;\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : addCommas(value);\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + color + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue)\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        ifEnableAnimation: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            this._data = this._dataBeforeProcessed.cloneShallow();\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 510\n// module chunks = 16","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 511\n// module chunks = 16","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToMap(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromMap(child.id);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromMap(child.id);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToMap(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromMap(child.id);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 512\n// module chunks = 16","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 513\n// module chunks = 16","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 514\n// module chunks = 16","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 515\n// module chunks = 16","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = this.origin;\n\n        var scale = this.scale;\n        var rotation = this.rotation;\n        var position = this.position;\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 516\n// module chunks = 16","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 517\n// module chunks = 16","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 518\n// module chunks = 16","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            var percent = (globalTime - this._startTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n\n            this._needsRemove = false;\n        },\n\n        fire: function(eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 519\n// module chunks = 16","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 520\n// module chunks = 16","/**\n * @module zrender/tool/color\n */\n\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    /**\n     * @param {string} colorStr\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr) {\n        if (!colorStr) {\n            return;\n        }\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            return kCSSColorTable[str].slice();  // dup.\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                ];\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                ];\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return [\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    ];\n                case 'hsla':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    return hsla2rgba(params);\n                case 'hsl':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return hsla2rgba(params);\n                default:\n                    return;\n            }\n        }\n\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        var rgba = [\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)\n        ];\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>}\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n        out = out || [0, 0, 0, 0];\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<string>} colors Color list.\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color.\n     */\n    function stringify(arrColor, type) {\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 521\n// module chunks = 16","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 522\n// module chunks = 16","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 523\n// module chunks = 16","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 524\n// module chunks = 16","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            this.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        var animationEnabled = animatableModel\n            && (\n                animatableModel.ifEnableAnimation\n                ? animatableModel.ifEnableAnimation()\n                // Directly use animation property\n                : animatableModel.getShallow('animation')\n            );\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel\n                && animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel\n                && animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel\n                && animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(dataIndex);\n            }\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 525\n// module chunks = 16","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n    var matrix = require('../core/matrix');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        var transform;\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            path.setData(pathProxy.data);\n            transform && transformPath(path, transform);\n            // Svg and vml renderer don't have context\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            if (!transform) {\n                transform = matrix.create();\n            }\n            matrix.mul(transform, m, transform);\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (pathEl.__dirty) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 526\n// module chunks = 16","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = new PathProxy();\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect = this.getBoundingRect();\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath || (\n                lineDash && !ctxLineDash && hasStroke\n            )) {\n                path = this.path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                this.__dirtyPath = false;\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 527\n// module chunks = 16","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 528\n// module chunks = 16","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        // var size =\n        var x = obj.x;\n        var x2 = obj.x2;\n        var y = obj.y;\n        var y2 = obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x;\n        var y = obj.y;\n        var r = obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 529\n// module chunks = 16","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                textFill && ctx.fillText(textLines[i], x, y);\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 530\n// module chunks = 16","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function () {\n\n        /**\n         * Path data. Stored as flat array\n         * @type {Array.<Object>}\n         */\n        this.data = [];\n\n        this._len = 0;\n\n        this._ctx = null;\n\n        this._xi = 0;\n        this._yi = 0;\n\n        this._x0 = 0;\n        this._y0 = 0;\n\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        this._ux = 0;\n        this._uy = 0;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            this._len = 0;\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._xi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 531\n// module chunks = 16","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 532\n// module chunks = 16","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 533\n// module chunks = 16","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 534\n// module chunks = 16","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 535\n// module chunks = 16","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 536\n// module chunks = 16","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 537\n// module chunks = 16","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 538\n// module chunks = 16","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 539\n// module chunks = 16","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 540\n// module chunks = 16","\n\n    var Pattern = function (image, repeat) {\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n\n        return this._canvasPattern\n            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 541\n// module chunks = 16","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i++] += x;\n                    // cy\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 542\n// module chunks = 16","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var width = style.width || image.width;\n                var height = style.height || image.height;\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                // 如果没设置宽和高的话自动根据图片宽高设置\n                if (style.width == null) {\n                    style.width = width;\n                }\n                if (style.height == null) {\n                    style.height = height;\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 543\n// module chunks = 16","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function() {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function(val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function(entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function(entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function() {\n        return this._len;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function(val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function(maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     */\n    LRUProto.put = function(key, value) {\n        var list = this._list;\n        var map = this._map;\n        if (map[key] == null) {\n            var len = list.len();\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n            }\n\n            var entry = list.insert(value);\n            entry.key = key;\n            map[key] = entry;\n        }\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function(key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function() {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 544\n// module chunks = 16","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            if (!this._rect) {\n                var style = this.style;\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                this._rect = rect;\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 545\n// module chunks = 16","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 546\n// module chunks = 16","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 547\n// module chunks = 16","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 548\n// module chunks = 16","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 549\n// module chunks = 16","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 550\n// module chunks = 16","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 551\n// module chunks = 16","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 552\n// module chunks = 16","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 553\n// module chunks = 16","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 554\n// module chunks = 16","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 555\n// module chunks = 16","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 556\n// module chunks = 16","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 557\n// module chunks = 16","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 558\n// module chunks = 16","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 559\n// module chunks = 16","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 560\n// module chunks = 16","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 561\n// module chunks = 16","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 562\n// module chunks = 16","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 563\n// module chunks = 16","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.2.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromMap, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromMap = storage.delFromMap;\n        var oldAddToMap = storage.addToMap;\n\n        storage.delFromMap = function (elId) {\n            var el = storage.get(elId);\n\n            oldDelFromMap.call(storage, elId);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToMap = function (el) {\n            oldAddToMap.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, width, height) {\n            var id = guid();\n            return this.painter.pathToImage(id, e, width, height);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 564\n// module chunks = 16","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    function makeEventPacket(eveType, target, event) {\n        return {\n            type: eveType,\n            event: event,\n            target: target,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._hovered;\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var hovered = this.findHover(x, y, null);\n            var lastHovered = this._hovered;\n            var proxy = this.proxy;\n\n            this._hovered = hovered;\n\n            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hovered && hovered !== lastHovered) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = null;\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetEl 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetEl, eventName, event) {\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetEl, event);\n\n            var el = targetEl;\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                if (!list[i].silent\n                 && list[i] !== exclude\n                 // getDisplayList may include ignored item in VML mode\n                 && !list[i].ignore\n                 && isHover(list[i], x, y)) {\n                    return list[i];\n                }\n            }\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY, null);\n\n            if (name === 'mousedown') {\n                this._downel = hovered;\n                // In case click triggered before mouseup\n                this._upel = hovered;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hovered;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            while (el) {\n                // If ancestor is silent or clipped by ancestor\n                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {\n                    return false;\n                }\n                el = el.parent;\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 565\n// module chunks = 16","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(draggingTarget, 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(draggingTarget, 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget);\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(dropTarget, 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(draggingTarget, 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(this._dropTarget, 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 566\n// module chunks = 16","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        // 所有常规形状，id索引的map\n        this._elements = {};\n\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var clipPath = el.clipPath;\n            if (clipPath) {\n                // clipPath 的变换是基于 group 的变换\n                clipPath.parent = el;\n                clipPath.updateTransform();\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                    clipPaths.push(clipPath);\n                }\n                else {\n                    clipPaths = [clipPath];\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            // Element has been added\n            if (this._elements[el.id]) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToMap(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n         */\n        delRoot: function (elId) {\n            if (elId == null) {\n                // 不指定elId清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._elements = {};\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (elId instanceof Array) {\n                for (var i = 0, l = elId.length; i < l; i++) {\n                    this.delRoot(elId[i]);\n                }\n                return;\n            }\n\n            var el;\n            if (typeof(elId) == 'string') {\n                el = this._elements[elId];\n            }\n            else {\n                el = elId;\n            }\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromMap(el.id);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToMap: function (el) {\n            if (el instanceof Group) {\n                el.__storage = this;\n            }\n            el.dirty(false);\n\n            this._elements[el.id] = el;\n\n            return this;\n        },\n\n        get: function (elId) {\n            return this._elements[elId];\n        },\n\n        delFromMap: function (elId) {\n            var elements = this._elements;\n            var el = elements[elId];\n            if (el) {\n                delete elements[elId];\n                if (el instanceof Group) {\n                    el.__storage = null;\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._elements =\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 567\n// module chunks = 16","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 568\n// module chunks = 16","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 569\n// module chunks = 16","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * 停止冒泡和阻止默认行为\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 570\n// module chunks = 16","\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 571\n// module chunks = 16","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null),\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        if (gestureInfo) {\n            // eventTool.stop(event);\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);\n        }\n    }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n    function useTouchEvent() {\n        return env.touchEventsSupported;\n    }\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        }\n    };\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        for (var i = 0; i < touchHandlerNames.length; i++) {\n            var name = touchHandlerNames[i];\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        }\n\n        for (var i = 0; i < mouseHandlerNames.length; i++) {\n            var name = mouseHandlerNames[i];\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        }\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (useTouchEvent()) {\n            mountHandlers(touchHandlerNames, this);\n\n            // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n            // addEventListener(root, 'mouseout', this._mouseoutHandler);\n        }\n\n        // Considering some devices that both enable touch and mouse event (like MS Surface\n        // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n        // mouse event can not be handle in those devices.\n        mountHandlers(mouseHandlerNames, this);\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 572\n// module chunks = 16","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 573\n// module chunks = 16","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.isBuildin) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            var path = clipPath.path;\n\n            clipPath.setTransform(ctx);\n            path.beginPath(ctx);\n            clipPath.buildPath(path, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n        }\n\n        this.pathToImage = this._createPathToImage();\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._singleCanvas ? this._layers[0].dom : this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.isBuildin && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuildinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuildinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.isBuildin) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.isBuildin = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            if (prevLayer) {\n                var prevDom = prevLayer.dom;\n                if (prevDom.nextSibling) {\n                    domRoot.insertBefore(\n                        layer.dom,\n                        prevDom.nextSibling\n                    );\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n            else {\n                if (domRoot.firstChild) {\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n\n            layersMap[zlevel] = layer;\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuildinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (! layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuildinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuildinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuildinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        _pathToImage: function (id, path, width, height, dpr) {\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.clearRect(0, 0, width * dpr, height * dpr);\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [0, 0, 0];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                id: id,\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        },\n\n        _createPathToImage: function () {\n            var me = this;\n\n            return function (id, e, width, height) {\n                return me._pathToImage(\n                    id, e, width, height, me.dpr\n                );\n            };\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 574\n// module chunks = 16","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 575\n// module chunks = 16","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 576\n// module chunks = 16","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 577\n// module chunks = 16","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 578\n// module chunks = 16","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 579\n// module chunks = 16","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getDataExtent = function (dim, stack) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                value < min && (min = value);\n                value > max && (max = value);\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 580\n// module chunks = 16","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 581\n// module chunks = 16","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 582\n// module chunks = 16","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 583\n// module chunks = 16","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} defaultNames    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} extraPrefix             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 584\n// module chunks = 16","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 585\n// module chunks = 16","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 586\n// module chunks = 16","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function normalizeSymbolSize(symbolSize) {\n        symbolSize = symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n        symbolSize[0] /= 2;\n        symbolSize[1] /= 2;\n        return symbolSize;\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        var size = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n\n        graphic.initProps(symbolPath, {\n            scale: size\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: symbolSize\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        var size = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        if (hoverAnimation && seriesModel.ifEnableAnimation()) {\n            var onEmphasis = function() {\n                var ratio = size[1] / size[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(size[0] * 1.1, size[0] + 3),\n                        Math.max(size[1] * 1.1, size[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: size\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 587\n// module chunks = 16","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 588\n// module chunks = 16","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 589\n// module chunks = 16","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 590\n// module chunks = 16","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 591\n// module chunks = 16","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 592\n// module chunks = 16","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 593\n// module chunks = 16","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/grid.js\n// module id = 594\n// module chunks = 16","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.findGridModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtent(data.getDataExtent(\n                    dim, axis.scale.type !== 'ordinal'\n                ));\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.findGridModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.findGridModel() !== yAxisModel.findGridModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 595\n// module chunks = 16","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var originalExtent = scale.getExtent();\n        var span = originalExtent[1] - originalExtent[0];\n        if (scale.type === 'ordinal') {\n            // If series has no data, scale extent may be wrong\n            if (!isFinite(span)) {\n                return [0, 0];\n            }\n            else {\n                return originalExtent;\n            }\n        }\n        var min = model.getMin ? model.getMin() : model.get('min');\n        var max = model.getMax ? model.getMax() : model.get('max');\n        var crossZero = model.getNeedCrossZero\n            ? model.getNeedCrossZero() : !model.get('scale');\n        var boundaryGap = model.get('boundaryGap');\n        if (!zrUtil.isArray(boundaryGap)) {\n            boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n        }\n        boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n        boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n        var fixMin = true;\n        var fixMax = true;\n        // Add boundary gap\n        if (min == null) {\n            min = originalExtent[0] - boundaryGap[0] * span;\n            fixMin = false;\n        }\n        if (max == null) {\n            max = originalExtent[1] + boundaryGap[1] * span;\n            fixMax = false;\n        }\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        // Evaluate if axis needs cross zero\n        if (crossZero) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = (model.getMin ? model.getMin() : model.get('min')) != null;\n        var fixMax = (model.getMax ? model.getMax() : model.get('max')) != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 596\n// module chunks = 16","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 597\n// module chunks = 16","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 598\n// module chunks = 16","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 599\n// module chunks = 16","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 600\n// module chunks = 16","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 601\n// module chunks = 16","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 602\n// module chunks = 16","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 603\n// module chunks = 16","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 604\n// module chunks = 16","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 605\n// module chunks = 16","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 606\n// module chunks = 16","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 607\n// module chunks = 16","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        findGridModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.get('gridIndex'),\n                id: this.get('gridId')\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n    zrUtil.merge(AxisModel.prototype, require('../axisModelZoomMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 608\n// module chunks = 16","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 609\n// module chunks = 16","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 610\n// module chunks = 16","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Get categories\n     */\n    function getCategories() {\n        return this.get('type') === 'category'\n            && zrUtil.map(this.get('data'), getName);\n    }\n\n    /**\n     * Format labels\n     * @return {Array.<string>}\n     */\n    function getFormattedLabels() {\n        return axisHelper.getFormattedLabels(\n            this.axis,\n            this.get('axisLabel.formatter')\n        );\n    }\n\n    module.exports = {\n\n        getFormattedLabels: getFormattedLabels,\n\n        getCategories: getCategories\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 611\n// module chunks = 16","\n\n    module.exports = {\n\n        /**\n         * @public\n         * @return {Array.<number|string|Date>}\n         */\n        getMin: function () {\n            var option = this.option;\n            var min = option.rangeStart != null ? option.rangeStart : option.min;\n            // In case of axis.type === 'time', Date should be converted to timestamp.\n            // In other cases, min/max should be a number or null/undefined or 'dataMin/Max'.\n            if (min instanceof Date) {\n                min = +min;\n            }\n            return min;\n        },\n\n        /**\n         * @public\n         * @return {Array.<number|string|Date>}\n         */\n        getMax: function () {\n            var option = this.option;\n            var max = option.rangeEnd != null ? option.rangeEnd : option.max;\n            // In case of axis.type === 'time', Date should be converted to timestamp.\n            // In other cases, min/max should be a number or null/undefined or 'dataMin/Max'.\n            if (max instanceof Date) {\n                max = +max;\n            }\n            return max;\n        },\n\n        /**\n         * @public\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * @public\n         * @param {number} rangeStart\n         * @param {number} rangeEnd\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * @public\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelZoomMixin.js\n// module id = 612\n// module chunks = 16","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/AxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 613\n// module chunks = 16","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.findGridModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 614\n// module chunks = 16","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisTick.show')) {\n                return;\n            }\n\n            var axis = axisModel.axis;\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show) {\n                return;\n            }\n\n            var axis = axisModel.axis;\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n            if (axis.type !== 'category') {\n                // If min or max are user set, we need to check\n                // If the tick on min(max) are overlap on their neighbour tick\n                // If they are overlapped, we need to hide the min(max) tick label\n                if (axisModel.getMin ? axisModel.getMin() : axisModel.get('min')) {\n                    var firstLabel = textEls[0];\n                    var nextLabel = textEls[1];\n                    if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                        firstLabel.ignore = true;\n                    }\n                }\n                if (axisModel.getMax ? axisModel.getMax() : axisModel.get('max')) {\n                    var lastLabel = textEls[textEls.length - 1];\n                    var prevLabel = textEls[textEls.length - 2];\n                    if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                        lastLabel.ignore = true;\n                    }\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 615\n// module chunks = 16","// FIXME Better way to pack data in graphic element\n\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'none'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'none'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 616\n// module chunks = 16","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 617\n// module chunks = 16","\n\n    var TooltipContent = require('./TooltipContent');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var modelUtil = require('../../util/model');\n    var parsePercent = numberUtil.parsePercent;\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n\n            api.on('showTip', this._manuallyShowTip, this);\n            api.on('hideTip', this._manuallyHideTip, this);\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self._manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self._manuallyShowTip({\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        _manuallyShowTip: function (event) {\n            // From self\n            if (event.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = event.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, event);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (event.x == null || event.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, event);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: event.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(event.x, event.y);\n                this._tryShow({\n                    offsetX: event.x,\n                    offsetY: event.y,\n                    position: event.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        _manuallyHideTip: function (e) {\n            if (e.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var itemModel = dataModel.getData().getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: el.dataIndex,\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: payloadBatch[sampleSeriesIndex].dataIndexInside,\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? firstLine + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            api.off('showTip', this._manuallyShowTip);\n            api.off('hideTip', this._manuallyHideTip);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 618\n// module chunks = 16","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 619\n// module chunks = 16","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/title.js\n// module id = 620\n// module chunks = 16","/**\n * Legend component entry file8\n */\n\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 621\n// module chunks = 16","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 622\n// module chunks = 16","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 623\n// module chunks = 16","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 624\n// module chunks = 16","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 625\n// module chunks = 16","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 626\n// module chunks = 16","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./linechart.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./linechart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./linechart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/app/components/linechart/linechart.less\n// module id = 627\n// module chunks = 16","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/less-loader!./client/app/components/linechart/linechart.less\n// module id = 628\n// module chunks = 16","var echarts = require('echarts/lib/echarts');\n\nangular.module('ng-echarts',[])\n\t.directive('ngEcharts',[function(){\n\t\treturn {\n\t\t\tlink: function(scope,element,attrs,ctrl){\n\t\t\t\tfunction refreshChart(){\n\t\t\t\t\tvar theme = (scope.config && scope.config.theme)\n\t\t\t\t\t\t? scope.config.theme : 'default';\n\t\t\t\t\tvar chart = echarts.init(element[0],theme);\n\t\t\t\t\tif(scope.config && scope.config.dataLoaded === false){\n\t\t\t\t\t\tchart.showLoading();\n\t\t\t\t\t}\n\n\t\t\t\t\tif(scope.config && scope.config.dataLoaded){\n\t\t\t\t\t\tchart.setOption(scope.option);\n\t\t\t\t\t\tchart.resize();\n\t\t\t\t\t\tchart.hideLoading();\n\t\t\t\t\t}\n\n\t\t\t\t\tif(scope.config && scope.config.event){\n\t\t\t\t\t\tif(angular.isArray(scope.config.event)){\n\t\t\t\t\t\t\tangular.forEach(scope.config.event,function(value,key){\n\t\t\t\t\t\t\t\tfor(var e in value){\n\t\t\t\t\t\t\t\t\tchart.on(e,value[e]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t//自定义参数 - config\n\t\t\t\t// event 定义事件\n\t\t\t\t// theme 主题名称\n\t\t\t\t// dataLoaded 数据是否加载\n\n\t\t\t\tscope.$watch(\n\t\t\t\t\tfunction () { return scope.config; },\n\t\t\t\t\tfunction (value) {if (value) {refreshChart();}},\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\t\t//图表原生option\n\t\t\t\tscope.$watch(\n\t\t\t\t\tfunction () { return scope.option; },\n\t\t\t\t\tfunction (value) {if (value) {refreshChart();}},\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t},\n\t\t\tscope:{\n\t\t\t\toption:'=ecOption',\n\t\t\t\tconfig:'=ecConfig'\n\t\t\t},\n\t\t\trestrict:'EA'\n\t\t}\n\t}]);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ffan-ng-echarts/src/ng-echarts.js\n// module id = 629\n// module chunks = 16","import 'ffan-ng-echarts';\nimport piechartComponent from './piechart.component';\n\nexport default angular.module('pieChart', [\n\t'ng-echarts'\n])\n/**\n * 轻在routerConfig.js里定义路由\n */\n.component('pieChart', piechartComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/piechart/piechart.js","import template from './piechart.html';\nimport controller from './piechart.controller';\nimport './piechart.less';\n\nexport default {\n  restrict: 'E',\n  bindings: {},\n  template,\n  controller,\n  controllerAs: 'vm'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/piechart/piechart.component.js","module.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1>饼图</h1>\\n\\t<h2>安装</h2>\\n\\t<p>安装ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n\\t<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"bash\\\">npm install ffan-ng-echarts --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>注入模块</h2>\\n\\t<p>在使用图表的模版入口js中注入ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport 'ffan-ng-echarts';\\nimport piechartComponent from './piechart.component';\\n\\nexport default angular.module('pieChart', [\\n  'ng-echarts'\\n.component('pieChart', piechartComponent);\\n</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<p>在controller中注入echarts lib</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\n// include pie chart\\nrequire('echarts/lib/chart/pie');\\n\\n// include tooltip component\\nrequire('echarts/lib/component/tooltip');\\n// include title component\\nrequire('echarts/lib/component/title');\\n// include legend component\\nrequire('echarts/lib/component/legend');\\n</div>\\n</div>\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-4 echarts-container\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.pieConfig\\\" ec-option=\\\"vm.pieOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.pieConfig\\\" ec-option=\\\"vm.pieOption\\\" ></ng-echarts>\\n</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nlet self = this;\\nself.pieConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\n\\nself.pieOption = {\\n  tooltip: {\\n  trigger: 'item',\\n  formatter: \\\"{a} <br/>{b} : {c} ({d}%)\\\"\\n},\\nlegend: {\\n  orient: 'vertical',\\n  x: '65%',\\n  top: '25%',\\n  data: ['正常', '断开', '等待'],\\n  formatter: function (name) {\\n    var oa = self.pieOption.series[0].data;\\n    for (var i = 0; i < self.pieOption.series[0].data.length; i++) {\\n      if (name == oa[i].name) {\\n        return name + ':' + oa[i].value + '个';\\n      }\\n    }\\n  }\\n},\\ncolor: ['#bdea75', '#fe5454', '#faba3c'],\\nseries: [\\n  {\\n    name: '比例分析',\\n    type: 'pie',\\n    radius: '55%',\\n    center: ['35%', '50%'],\\n    data: [\\n    {\\n      value: '2',\\n      name: '正常'\\n    },\\n    {\\n      value: '2',\\n      name: '断开'\\n    },\\n    {\\n      value: '2',\\n      name: '等待'\\n    }],\\n    itemStyle: {\\n      normal: {\\n        label: {\\n          show: false,\\n          formatter: '{b} : {c} ({d}%)'\\n        }\\n      },\\n      labelLine: {\\n        show: true\\n      }\\n    }\\n}]\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/app/components/piechart/piechart.html\n// module id = 633\n// module chunks = 16","/**\n * (description)\n *\n * @author yourname\n */\n\n// include pie chart\nrequire('echarts/lib/chart/pie');\n\n// include tooltip component\nrequire('echarts/lib/component/tooltip');\n// include title component\nrequire('echarts/lib/component/title');\n// include legend component\nrequire('echarts/lib/component/legend');\n\nexport default class PiechartController {\n\tconstructor() {\n\t\t\"ngInject\";\n\t\tthis.initPieChart();\n\t}\n\n\tinitPieChart() {\n\t\tlet self = this;\n\t\tself.pieConfig = {\n\t\t\ttheme: 'default',\n\t\t\tdataLoaded: true\n\t\t};\n\n\t\tself.pieOption = {\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item',\n\t\t\t\tformatter: \"{a} <br/>{b} : {c} ({d}%)\"\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\torient: 'vertical',\n\t\t\t\tx: '65%',\n\t\t\t\ttop: '25%',\n\t\t\t\tdata: ['正常', '断开', '等待'],\n\t\t\t\tformatter: function (name) {\n\t\t\t\t\tvar oa = self.pieOption.series[0].data;\n\t\t\t\t\tfor (var i = 0; i < self.pieOption.series[0].data.length; i++) {\n\t\t\t\t\t\tif (name == oa[i].name) {\n\t\t\t\t\t\t\treturn name + ':' + oa[i].value + '个';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolor: ['#bdea75', '#fe5454', '#faba3c'],\n\t\t\tseries: [{\n\t\t\t\tname: '比例分析',\n\t\t\t\ttype: 'pie',\n\t\t\t\tradius: '55%',\n\t\t\t\tcenter: ['35%', '50%'],\n\t\t\t\tdata: [{\n\t\t\t\t\tvalue: '2',\n\t\t\t\t\tname: '正常'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: '2',\n\t\t\t\t\tname: '断开'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: '2',\n\t\t\t\t\tname: '等待'\n\t\t\t\t}],\n\t\t\t\titemStyle: {\n\t\t\t\t\tnormal: {\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\tformatter: '{b} : {c} ({d}%)'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlabelLine: {\n\t\t\t\t\t\tshow: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t};\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/piechart/piechart.controller.js","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie.js\n// module id = 635\n// module chunks = 16","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this._dataBeforeProcessed;\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this._data;\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieSeries.js\n// module id = 636\n// module chunks = 16","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/selectableMixin.js\n// module id = 637\n// module chunks = 16","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n            sector.shape.endAngle = layout.startAngle;\n            graphic.updateProps(sector, {\n                shape: {\n                    endAngle: layout.endAngle\n                }\n            }, seriesModel, idx);\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.ifEnableAnimation()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    if (isFirstRender) {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (hasAnimation && isFirstRender && data.count() > 0) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieView.js\n// module id = 638\n// module chunks = 16","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/action/createDataSelectAction.js\n// module id = 639\n// module chunks = 16","// Pick color from palette for each data item\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    // FIXME Performance\n                    var itemModel = dataAll.getItemModel(rawIdx);\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/dataColor.js\n// module id = 640\n// module chunks = 16","// TODO minAngle\n\n\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = sum === 0 ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/pieLayout.js\n// module id = 641\n// module chunks = 16","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/labelLayout.js\n// module id = 642\n// module chunks = 16","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataFilter.js\n// module id = 643\n// module chunks = 16","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./piechart.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./piechart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./piechart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/app/components/piechart/piechart.less\n// module id = 644\n// module chunks = 16","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/less-loader!./client/app/components/piechart/piechart.less\n// module id = 645\n// module chunks = 16","import 'ffan-ng-echarts';\nimport gaugechartComponent from './gaugechart.component';\n\nexport default angular.module('gaugeChart', [\n\t'ng-echarts'\n])\n/**\n * 轻在routerConfig.js里定义路由\n */\n.component('gaugeChart', gaugechartComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/gaugechart/gaugechart.js","import template from './gaugechart.html';\nimport controller from './gaugechart.controller';\nimport './gaugechart.less';\n\nexport default {\n  restrict: 'E',\n  bindings: {},\n  template,\n  controller,\n  controllerAs: 'vm'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/gaugechart/gaugechart.component.js","module.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1>仪表图</h1>\\n\\t<h2>安装</h2>\\n\\t<p>安装ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n\\t<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"bash\\\">npm install ffan-ng-echarts --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>注入模块</h2>\\n\\t<p>在使用图表的模版入口js中注入ffan-ng-echarts</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport 'ffan-ng-echarts';\\nimport gaugechartComponent from './gaugechart.component';\\n\\nexport default angular.module('gaugeChart', [\\n  'ng-echarts'\\n.component('gaugeChart', gaugechartComponent);\\n</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<p>在controller中注入echarts lib</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\n// include gauge chart\\nrequire('echarts/lib/chart/gauge');\\n\\n// include tooltip component\\nrequire('echarts/lib/component/tooltip');\\n// include title component\\nrequire('echarts/lib/component/title');\\n// include legend component\\nrequire('echarts/lib/component/legend');\\n</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>示例</h2>\\n</section>\\n\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-4 echarts-container\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.gaugeConfig\\\" ec-option=\\\"vm.gaugeOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.gaugeConfig\\\" ec-option=\\\"vm.gaugeOption\\\" ></ng-echarts>\\n</div>\\n\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nthis.gaugeConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\nthis.gaugeOption = {\\n  series: [\\n  {\\n    name: \\\"外层\\\",\\n    z: 3,\\n    type: \\\"gauge\\\",\\n    startAngle: 180, //总的360，设置180就是半圆\\n    endAngle: 0,\\n    center: [\\\"50%\\\", \\\"77%\\\"], //整体的位置设置\\n    radius: 80,\\n    axisLine: {\\n      lineStyle: {\\n        width: 3, //柱子的宽度\\n        color: [[1, \\\"#1fbba6\\\"], [1, \\\"#dbdbdb\\\"]]\\n      }\\n    },\\n    axisTick: {\\n      show: false\\n    },\\n    axisLabel: {\\n      show: false\\n    },\\n    splitLine: {\\n      show: false\\n    },\\n    pointer: {\\n      width: 0, //指针的宽度\\n      length: \\\"80%\\\", //指针长度，按照半圆半径的百分比\\n      color: \\\"#2d99e2\\\"\\n    },\\n    title: {\\n      show: false\\n    },\\n    detail: {\\n      show: false\\n    },\\n    data: [{ //显示数据\\n      value: 100,\\n      name: \\\"100%\\\"\\n    }]\\n  },\\n  {\\n    name: \\\"内层\\\",\\n    type: \\\"gauge\\\",\\n    startAngle: 180, //总的360，设置180就是半圆\\n    endAngle: 0,\\n    center: [\\\"50%\\\", \\\"77%\\\"], //整体的位置设置\\n    radius: 75,\\n    axisLine: {\\n      lineStyle: {\\n        width: 30, //柱子的宽度\\n        color: [[0.305, \\\"#1fbba6\\\"], [1, \\\"#dbdbdb\\\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\\n      }\\n    },\\n    axisTick: {\\n      show: false\\n    },\\n    axisLabel: {\\n      show: false\\n    },\\n    splitLine: {\\n      show: false\\n    },\\n    pointer: {\\n      width: 0, //指针的宽度\\n      length: \\\"80%\\\", //指针长度，按照半圆半径的百分比\\n      color: \\\"#2d99e2\\\"\\n    },\\n    title: {\\n      show: true,\\n      offsetCenter: [0, '-10px'], //标题位置设置\\n      textStyle: { //标题样式设置\\n        color: \\\"#1fbba6\\\",\\n        fontSize: 18,\\n        fontFamily: \\\"Arial\\\",\\n        fontWeight: \\\"normal\\\"\\n      }\\n    },\\n    detail: {\\n      show: false\\n    },\\n    data: [{ //显示数据\\n      value: 30.50,\\n      name: \\\"30.50%\\\"\\n    }]\\n  }]\\n};\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/app/components/gaugechart/gaugechart.html\n// module id = 649\n// module chunks = 16","/**\n * (description)\n *\n * @author yourname\n */\n\n// include gauge chart\nrequire('echarts/lib/chart/gauge');\n\n// include tooltip component\nrequire('echarts/lib/component/tooltip');\n// include title component\nrequire('echarts/lib/component/title');\n// include legend component\nrequire('echarts/lib/component/legend');\n\n\nexport default class GaugechartController {\n\tconstructor() {\n\t\t\"ngInject\";\n\t\tthis.initGaugeChart();\n\t}\n\n\tinitGaugeChart() {\n\t\tthis.gaugeConfig = {\n\t\t\ttheme: 'default',\n\t\t\tdataLoaded: true\n\t\t};\n\n\t\tthis.gaugeOption = {\n\t\t\tseries: [{\n\t\t\t\tname: \"外层\",\n\t\t\t\tz: 3,\n\t\t\t\ttype: \"gauge\",\n\t\t\t\tstartAngle: 180, //总的360，设置180就是半圆\n\t\t\t\tendAngle: 0,\n\t\t\t\tcenter: [\"50%\", \"77%\"], //整体的位置设置\n\t\t\t\tradius: 80,\n\t\t\t\taxisLine: {\n\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\twidth: 3, //柱子的宽度\n\t\t\t\t\t\tcolor: [[1, \"#1fbba6\"], [1, \"#dbdbdb\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taxisTick: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\taxisLabel: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\tsplitLine: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\tpointer: {\n\t\t\t\t\twidth: 0, //指针的宽度\n\t\t\t\t\tlength: \"80%\", //指针长度，按照半圆半径的百分比\n\t\t\t\t\tcolor: \"#2d99e2\"\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\tdetail: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\tdata: [{ //显示数据\n\t\t\t\t\tvalue: 100,\n\t\t\t\t\tname: \"100%\"\n\t\t\t\t}]\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"内层\",\n\t\t\t\t\ttype: \"gauge\",\n\t\t\t\t\tstartAngle: 180, //总的360，设置180就是半圆\n\t\t\t\t\tendAngle: 0,\n\t\t\t\t\tcenter: [\"50%\", \"77%\"], //整体的位置设置\n\t\t\t\t\tradius: 75,\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\twidth: 30, //柱子的宽度\n\t\t\t\t\t\t\tcolor: [[0.305, \"#1fbba6\"], [1, \"#dbdbdb\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tpointer: {\n\t\t\t\t\t\twidth: 0, //指针的宽度\n\t\t\t\t\t\tlength: \"80%\", //指针长度，按照半圆半径的百分比\n\t\t\t\t\t\tcolor: \"#2d99e2\"\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\toffsetCenter: [0, '-10px'], //标题位置设置\n\t\t\t\t\t\ttextStyle: { //标题样式设置\n\t\t\t\t\t\t\tcolor: \"#1fbba6\",\n\t\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\t\tfontFamily: \"Arial\",\n\t\t\t\t\t\t\tfontWeight: \"normal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tdata: [{ //显示数据\n\t\t\t\t\t\tvalue: 30.50,\n\t\t\t\t\t\tname: \"30.50%\"\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t};\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/gaugechart/gaugechart.controller.js","\n    require('./gauge/GaugeSeries');\n    require('./gauge/GaugeView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge.js\n// module id = 651\n// module chunks = 16","\n\n    var List = require('../../data/List');\n    var SeriesModel = require('../../model/Series');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var GaugeSeries = SeriesModel.extend({\n\n        type: 'series.gauge',\n\n        getInitialData: function (option, ecModel) {\n            var list = new List(['value'], this);\n            var dataOpt = option.data || [];\n            if (!zrUtil.isArray(dataOpt)) {\n                dataOpt = [dataOpt];\n            }\n            // Only use the first data item\n            list.initData(dataOpt);\n            return list;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            legendHoverLink: true,\n            radius: '75%',\n            startAngle: 225,\n            endAngle: -45,\n            clockwise: true,\n            // 最小值\n            min: 0,\n            // 最大值\n            max: 100,\n            // 分割段数，默认为10\n            splitNumber: 10,\n            // 坐标轴线\n            axisLine: {\n                // 默认显示，属性show控制显示与否\n                show: true,\n                lineStyle: {       // 属性lineStyle控制线条样式\n                    color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n                    width: 30\n                }\n            },\n            // 分隔线\n            splitLine: {\n                // 默认显示，属性show控制显示与否\n                show: true,\n                // 属性length控制线长\n                length: 30,\n                // 属性lineStyle（详见lineStyle）控制线条样式\n                lineStyle: {\n                    color: '#eee',\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // 坐标轴小标记\n            axisTick: {\n                // 属性show控制显示与否，默认不显示\n                show: true,\n                // 每份split细分多少段\n                splitNumber: 5,\n                // 属性length控制线长\n                length: 8,\n                // 属性lineStyle控制线条样式\n                lineStyle: {\n                    color: '#eee',\n                    width: 1,\n                    type: 'solid'\n                }\n            },\n            axisLabel: {\n                show: true,\n                distance: 5,\n                // formatter: null,\n                textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                    color: 'auto'\n                }\n            },\n            pointer: {\n                show: true,\n                length: '80%',\n                width: 8\n            },\n            itemStyle: {\n                normal: {\n                    color: 'auto'\n                }\n            },\n            title: {\n                show: true,\n                // x, y，单位px\n                offsetCenter: [0, '-40%'],\n                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                textStyle: {\n                    color: '#333',\n                    fontSize: 15\n                }\n            },\n            detail: {\n                show: true,\n                backgroundColor: 'rgba(0,0,0,0)',\n                borderWidth: 0,\n                borderColor: '#ccc',\n                width: 100,\n                height: 40,\n                // x, y，单位px\n                offsetCenter: [0, '40%'],\n                // formatter: null,\n                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                textStyle: {\n                    color: 'auto',\n                    fontSize: 30\n                }\n            }\n        }\n    });\n\n    module.exports = GaugeSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/GaugeSeries.js\n// module id = 652\n// module chunks = 16","\n\n    var PointerPath = require('./PointerPath');\n\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    function parsePosition(seriesModel, api) {\n        var center = seriesModel.get('center');\n        var width = api.getWidth();\n        var height = api.getHeight();\n        var size = Math.min(width, height);\n        var cx = parsePercent(center[0], api.getWidth());\n        var cy = parsePercent(center[1], api.getHeight());\n        var r = parsePercent(seriesModel.get('radius'), size / 2);\n\n        return {\n            cx: cx,\n            cy: cy,\n            r: r\n        };\n    }\n\n    function formatLabel(label, labelFormatter) {\n        if (labelFormatter) {\n            if (typeof labelFormatter === 'string') {\n                label = labelFormatter.replace('{value}', label != null ? label : '');\n            }\n            else if (typeof labelFormatter === 'function') {\n                label = labelFormatter(label);\n            }\n        }\n\n        return label;\n    }\n\n    var PI2 = Math.PI * 2;\n\n    var GaugeView = require('../../view/Chart').extend({\n\n        type: 'gauge',\n\n        render: function (seriesModel, ecModel, api) {\n\n            this.group.removeAll();\n\n            var colorList = seriesModel.get('axisLine.lineStyle.color');\n            var posInfo = parsePosition(seriesModel, api);\n\n            this._renderMain(\n                seriesModel, ecModel, api, colorList, posInfo\n            );\n        },\n\n        dispose: function () {},\n\n        _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n            var group = this.group;\n\n            var axisLineModel = seriesModel.getModel('axisLine');\n            var lineStyleModel = axisLineModel.getModel('lineStyle');\n\n            var clockwise = seriesModel.get('clockwise');\n            var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n            var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n\n            var angleRangeSpan = (endAngle - startAngle) % PI2;\n\n            var prevEndAngle = startAngle;\n            var axisLineWidth = lineStyleModel.get('width');\n\n            for (var i = 0; i < colorList.length; i++) {\n                // Clamp\n                var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n                var endAngle = startAngle + angleRangeSpan * percent;\n                var sector = new graphic.Sector({\n                    shape: {\n                        startAngle: prevEndAngle,\n                        endAngle: endAngle,\n                        cx: posInfo.cx,\n                        cy: posInfo.cy,\n                        clockwise: clockwise,\n                        r0: posInfo.r - axisLineWidth,\n                        r: posInfo.r\n                    },\n                    silent: true\n                });\n\n                sector.setStyle({\n                    fill: colorList[i][1]\n                });\n\n                sector.setStyle(lineStyleModel.getLineStyle(\n                    // Because we use sector to simulate arc\n                    // so the properties for stroking are useless\n                    ['color', 'borderWidth', 'borderColor']\n                ));\n\n                group.add(sector);\n\n                prevEndAngle = endAngle;\n            }\n\n            var getColor = function (percent) {\n                // Less than 0\n                if (percent <= 0) {\n                    return colorList[0][1];\n                }\n                for (var i = 0; i < colorList.length; i++) {\n                    if (colorList[i][0] >= percent\n                        && (i === 0 ? 0 : colorList[i - 1][0]) < percent\n                    ) {\n                        return colorList[i][1];\n                    }\n                }\n                // More than 1\n                return colorList[i - 1][1];\n            };\n\n            if (!clockwise) {\n                var tmp = startAngle;\n                startAngle = endAngle;\n                endAngle = tmp;\n            }\n\n            this._renderTicks(\n                seriesModel, ecModel, api, getColor, posInfo,\n                startAngle, endAngle, clockwise\n            );\n\n            this._renderPointer(\n                seriesModel, ecModel, api, getColor, posInfo,\n                startAngle, endAngle, clockwise\n            );\n\n            this._renderTitle(\n                seriesModel, ecModel, api, getColor, posInfo\n            );\n            this._renderDetail(\n                seriesModel, ecModel, api, getColor, posInfo\n            );\n        },\n\n        _renderTicks: function (\n            seriesModel, ecModel, api, getColor, posInfo,\n            startAngle, endAngle, clockwise\n        ) {\n            var group = this.group;\n            var cx = posInfo.cx;\n            var cy = posInfo.cy;\n            var r = posInfo.r;\n\n            var minVal = seriesModel.get('min');\n            var maxVal = seriesModel.get('max');\n\n            var splitLineModel = seriesModel.getModel('splitLine');\n            var tickModel = seriesModel.getModel('axisTick');\n            var labelModel = seriesModel.getModel('axisLabel');\n\n            var splitNumber = seriesModel.get('splitNumber');\n            var subSplitNumber = tickModel.get('splitNumber');\n\n            var splitLineLen = parsePercent(\n                splitLineModel.get('length'), r\n            );\n            var tickLen = parsePercent(\n                tickModel.get('length'), r\n            );\n\n            var angle = startAngle;\n            var step = (endAngle - startAngle) / splitNumber;\n            var subStep = step / subSplitNumber;\n\n            var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n            var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n            var textStyleModel = labelModel.getModel('textStyle');\n\n            for (var i = 0; i <= splitNumber; i++) {\n                var unitX = Math.cos(angle);\n                var unitY = Math.sin(angle);\n                // Split line\n                if (splitLineModel.get('show')) {\n                    var splitLine = new graphic.Line({\n                        shape: {\n                            x1: unitX * r + cx,\n                            y1: unitY * r + cy,\n                            x2: unitX * (r - splitLineLen) + cx,\n                            y2: unitY * (r - splitLineLen) + cy\n                        },\n                        style: splitLineStyle,\n                        silent: true\n                    });\n                    if (splitLineStyle.stroke === 'auto') {\n                        splitLine.setStyle({\n                            stroke: getColor(i / splitNumber)\n                        });\n                    }\n\n                    group.add(splitLine);\n                }\n\n                // Label\n                if (labelModel.get('show')) {\n                    var label = formatLabel(\n                        numberUtil.round(i / splitNumber * (maxVal - minVal) + minVal),\n                        labelModel.get('formatter')\n                    );\n                    var distance = labelModel.get('distance');\n\n                    var text = new graphic.Text({\n                        style: {\n                            text: label,\n                            x: unitX * (r - splitLineLen - distance) + cx,\n                            y: unitY * (r - splitLineLen - distance) + cy,\n                            fill: textStyleModel.getTextColor(),\n                            textFont: textStyleModel.getFont(),\n                            textVerticalAlign: unitY < -0.4 ? 'top' : (unitY > 0.4 ? 'bottom' : 'middle'),\n                            textAlign: unitX < -0.4 ? 'left' : (unitX > 0.4 ? 'right' : 'center')\n                        },\n                        silent: true\n                    });\n                    if (text.style.fill === 'auto') {\n                        text.setStyle({\n                            fill: getColor(i / splitNumber)\n                        });\n                    }\n\n                    group.add(text);\n                }\n\n                // Axis tick\n                if (tickModel.get('show') && i !== splitNumber) {\n                    for (var j = 0; j <= subSplitNumber; j++) {\n                        var unitX = Math.cos(angle);\n                        var unitY = Math.sin(angle);\n                        var tickLine = new graphic.Line({\n                            shape: {\n                                x1: unitX * r + cx,\n                                y1: unitY * r + cy,\n                                x2: unitX * (r - tickLen) + cx,\n                                y2: unitY * (r - tickLen) + cy\n                            },\n                            silent: true,\n                            style: tickLineStyle\n                        });\n\n                        if (tickLineStyle.stroke === 'auto') {\n                            tickLine.setStyle({\n                                stroke: getColor((i + j / subSplitNumber) / splitNumber)\n                            });\n                        }\n\n                        group.add(tickLine);\n                        angle += subStep;\n                    }\n                    angle -= subStep;\n                }\n                else {\n                    angle += step;\n                }\n            }\n        },\n\n        _renderPointer: function (\n            seriesModel, ecModel, api, getColor, posInfo,\n            startAngle, endAngle, clockwise\n        ) {\n            var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n            var angleExtent = [startAngle, endAngle];\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var group = this.group;\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var pointer = new PointerPath({\n                        shape: {\n                            angle: startAngle\n                        }\n                    });\n\n                    graphic.updateProps(pointer, {\n                        shape: {\n                            angle: numberUtil.linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n                        }\n                    }, seriesModel);\n\n                    group.add(pointer);\n                    data.setItemGraphicEl(idx, pointer);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var pointer = oldData.getItemGraphicEl(oldIdx);\n\n                    graphic.updateProps(pointer, {\n                        shape: {\n                            angle: numberUtil.linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n                        }\n                    }, seriesModel);\n\n                    group.add(pointer);\n                    data.setItemGraphicEl(newIdx, pointer);\n                })\n                .remove(function (idx) {\n                    var pointer = oldData.getItemGraphicEl(idx);\n                    group.remove(pointer);\n                })\n                .execute();\n\n            data.eachItemGraphicEl(function (pointer, idx) {\n                var itemModel = data.getItemModel(idx);\n                var pointerModel = itemModel.getModel('pointer');\n\n                pointer.setShape({\n                    x: posInfo.cx,\n                    y: posInfo.cy,\n                    width: parsePercent(\n                        pointerModel.get('width'), posInfo.r\n                    ),\n                    r: parsePercent(pointerModel.get('length'), posInfo.r)\n                });\n\n                pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n                if (pointer.style.fill === 'auto') {\n                    pointer.setStyle('fill', getColor(\n                        (data.get('value', idx) - valueExtent[0]) / (valueExtent[1] - valueExtent[0])\n                    ));\n                }\n\n                graphic.setHoverStyle(\n                    pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle()\n                );\n            });\n\n            this._data = data;\n        },\n\n        _renderTitle: function (\n            seriesModel, ecModel, api, getColor, posInfo\n        ) {\n            var titleModel = seriesModel.getModel('title');\n            if (titleModel.get('show')) {\n                var textStyleModel = titleModel.getModel('textStyle');\n                var offsetCenter = titleModel.get('offsetCenter');\n                var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n                var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n                var text = new graphic.Text({\n                    style: {\n                        x: x,\n                        y: y,\n                        // FIXME First data name ?\n                        text: seriesModel.getData().getName(0),\n                        fill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont(),\n                        textAlign: 'center',\n                        textVerticalAlign: 'middle'\n                    }\n                });\n                this.group.add(text);\n            }\n        },\n\n        _renderDetail: function (\n            seriesModel, ecModel, api, getColor, posInfo\n        ) {\n            var detailModel = seriesModel.getModel('detail');\n            var minVal = seriesModel.get('min');\n            var maxVal = seriesModel.get('max');\n            if (detailModel.get('show')) {\n                var textStyleModel = detailModel.getModel('textStyle');\n                var offsetCenter = detailModel.get('offsetCenter');\n                var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n                var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n                var width = parsePercent(detailModel.get('width'), posInfo.r);\n                var height = parsePercent(detailModel.get('height'), posInfo.r);\n                var value = seriesModel.getData().get('value', 0);\n                var rect = new graphic.Rect({\n                    shape: {\n                        x: x - width / 2,\n                        y: y - height / 2,\n                        width: width,\n                        height: height\n                    },\n                    style: {\n                        text: formatLabel(\n                            // FIXME First data name ?\n                            value, detailModel.get('formatter')\n                        ),\n                        fill: detailModel.get('backgroundColor'),\n                        textFill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont()\n                    }\n                });\n                if (rect.style.textFill === 'auto') {\n                    rect.setStyle('textFill', getColor(\n                        numberUtil.linearMap(value, [minVal, maxVal], [0, 1], true)\n                    ));\n                }\n                rect.setStyle(detailModel.getItemStyle(['color']));\n                this.group.add(rect);\n            }\n        }\n    });\n\n    module.exports = GaugeView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/GaugeView.js\n// module id = 653\n// module chunks = 16","\n\n    module.exports = require('zrender/lib/graphic/Path').extend({\n\n        type: 'echartsGaugePointer',\n\n        shape: {\n            angle: 0,\n\n            width: 10,\n\n            r: 10,\n\n            x: 0,\n\n            y: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var mathCos = Math.cos;\n            var mathSin = Math.sin;\n\n            var r = shape.r;\n            var width = shape.width;\n            var angle = shape.angle;\n            var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n            var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n\n            angle = shape.angle - Math.PI / 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(\n                shape.x + mathCos(angle) * width,\n                shape.y + mathSin(angle) * width\n            );\n            ctx.lineTo(\n                shape.x + mathCos(shape.angle) * r,\n                shape.y + mathSin(shape.angle) * r\n            );\n            ctx.lineTo(\n                shape.x - mathCos(angle) * width,\n                shape.y - mathSin(angle) * width\n            );\n            ctx.lineTo(x, y);\n            return;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/PointerPath.js\n// module id = 654\n// module chunks = 16","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./gaugechart.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./gaugechart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./gaugechart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/app/components/gaugechart/gaugechart.less\n// module id = 655\n// module chunks = 16","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/less-loader!./client/app/components/gaugechart/gaugechart.less\n// module id = 656\n// module chunks = 16"],"sourceRoot":""}
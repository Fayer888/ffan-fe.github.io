webpackJsonp([15],{471:function(n,exports,t){"use strict";function e(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(exports,"__esModule",{value:!0});var o=t(472),a=e(o);exports.default=angular.module("generateComponent",[]).component("generateComponent",a.default)},472:function(n,exports,t){"use strict";function e(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(exports,"__esModule",{value:!0});var o=t(473),a=e(o),l=t(474),s=e(l);t(475),exports.default={restrict:"E",bindings:{},template:a.default,controller:s.default,controllerAs:"vm"}},473:function(n,exports){n.exports='<section class="intro-content">\n\t<h1>快速上手</h1>\n\t<h2>生成模块</h2>\n\t<p>增加一个页面模块, 执行 gulp component 命令。</p>\n</section>\n\n<div class="example-block">\n\t<div class="highlight no-border" hljs hljs-language="bash">gulp component --name componentName</div>\n</div>\n\n<section class="intro-content">\n\t<h3>参数：</h3>\n\t<p>--name：确定没有重名的模块，--name 会覆盖已有同名模块，大小写不敏感。</p>\n\t<p>--parent：可以通过修改 --parent 参数来改变生成的目录，基准目录是 client/app/components/。</p>\n\n\t<h3>示例：</h3>\n\t<p>模块默认会生成在 client/app/components 目录下，如安装其他目录，请参考：</p>\n\t<p>创建在 client/app/components/auth/signup下</p>\n</section>\n\n<div class="example-block">\n\t<div class="highlight no-border" hljs hljs-language="bash">gulp component --name signup --parent auth</div>\n</div>\n\n<section class="intro-content">\n\t<p>生成公共模块，创建在client/app/common/header下，生成公共头部</p>\n</section>\n\n<div class="example-block">\n\t<div class="highlight no-border" hljs hljs-language="bash">gulp component --name commonheader --parent ../common</div>\n</div>\n\n<section class="intro-content">\n\t<h3>创建好的模板目录如下：</h3>\n</section>\n\n<div class="example-block">\n<div class="highlight no-border" hljs>\n|- componentName/  --------------------- 项目源代码\n  |- componentName.js  ----------------- 模板入口文件\n  |- componentName.component.js -------- 组件文件\n  |- componentName.controller.js  ------ 组件controller\n  |- componentName.html  --------------- 页面html\n  |- componentName.less  --------------- 页面styles\n  |- componentName.spec.js  ------------ 单元测试的测试用例\n</div>\n</div>\n\n<section class="intro-content">\n\t<h2>路由配置</h2>\n\t<p>在这里配置路由：client/app/router/routerConfig.js，其中tracking为打点使用，可选填。</p>\n</section>\n<div class="example-block">\n<pre class="highlight no-border" escape=\'false\' hljs hljs-language="javascript">\nexport default [\n  {\n    name: \'build\',\n    url: "/demo/start",\n    template: \'<build></build>\',\n    lazyload: require("bundle?lazy&name=start!../components/start/start.js"),\n    tracking: {\n      key: \'ROUTENAME\'\n    }\n  },\n  {\n    name: \'button\',\n    url: "/demo/button",\n    template: \'<button-demo></button-demo>\',\n    lazyload: require("bundle?lazy&name=button!../components/button/button.js"),\n    tracking: {\n      key: \'ROUTENAME\'\n    }\n  },\n  {\n    name: \'modal\',\n    url: "/demo/modal",\n    template: \'<modal></modal>\',\n    lazyload: require("bundle?lazy&name=modal!../components/modal/modal.js"),\n    tracking: {\n      key: \'ROUTENAME\'\n    }\n  }\n]\n</pre>\n</div>\n\n<section class="intro-content">\n\t<h2>配置代理</h2>\n\t<p>为了方便本地调试和解决跨域问题, 在执行 gulp 启动调试时, 会启动代理服务器, 转发是可配置的, 见custom.env.config.js。</p>\n\t<p>\n\t\tapiFilter：<br>需要过滤的api, 这里配置的目录就走代理。\n\t</p>\n\t<p>\n\t\ttargetDomain：<br>需要转发的域名, 在调用后端接口时, 用的是相对路径, 接口路径是本地域名, 如: http://localhost:3000, 此项配置将localhost转发到targetDomain配置的域名(后端接口的域名), 并将cookie带过去。\n\t</p>\n\t<p>\n\t\tcookie：<br>登陆的cookie, 转发域名登陆的PHPSESSID, 这里暂时自己先登陆一下, 把cookie拷贝过来。\n\t</p>\n\t<div class="example-block">\n\t\t<pre class="highlight no-border" hljs hljs-language="javascript">\nmodule.exports = {\n  /**\n  * 要发布的项目路径\n  */\n  distPath: \'../bptest\',\n  /**\n  * 需要过滤的api, 解决跨域问题\n  */\n  apiFilter: [\'/api\', \'/database\'],\n  /**\n  * 需要转发的域名, 一般是sit, 需要服务端先提交到sit\n  */\n  targetDomain: \'http://admin.sit.ffan.com/\',\n  /**\n  * 登陆的cookie, 转发域名登陆的PHPSESSID, 这里暂时自己先登陆一下, 把cookie拷贝过来\n  */\n  cookie: \'PHPSESSID=sm9vejn7ffh0lqc0hfjklmd312\'\n};\n\t\t</pre>\n\t</div>\n</section>\n\n<section class="intro-content">\n\t<h2>打包</h2>\n\t<p>运行gulp webpack命令, 将项目打包到custom.env.config.js中配置的distPath。</p>\n</section>\n\n<div class="example-block">\n\t<div class="highlight no-border" hljs hljs-language="bash">gulp webpack</div>\n</div>'},474:function(n,exports){"use strict";function t(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var e=function n(){t(this,n),this.name="generatecomponent"};exports.default=e},475:function(n,exports,t){var e=t(476);"string"==typeof e&&(e=[[n.id,e,""]]);t(100)(e,{});e.locals&&(n.exports=e.locals)},476:function(n,exports,t){exports=n.exports=t(94)(),exports.push([n.id,"",""])}});
//# sourceMappingURL=generatecomponent.min.js.map
webpackJsonp([1],{362:function(n,exports,e){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(exports,"__esModule",{value:!0});var o=e(363),s=t(o);exports.default=angular.module("build",[]).component("build",s.default)},363:function(n,exports,e){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(exports,"__esModule",{value:!0});var o=e(364),s=t(o),l=e(365),i=t(l);e(367),exports.default={restrict:"E",bindings:{},template:s.default,controller:i.default,controllerAs:"vm"}},364:function(n,exports){n.exports='<section class="intro-content">\n\t<h1>安装</h1>\n\t<p>介绍如何搭建环境及快速上手。</p>\n\t<h2>项目生成</h2>\n\t<h3>用脚手架 bp-adam 快速生成项目。</h3>\n\t<p>安装生成器: </p>\n</section>\n\n<div class="example-block">\n\t<pre class="highlight no-border" hljs hljs-language="bash">\nnpm install -g bp-adam</pre>\n</div>\n\n<section class="intro-content">\n\t<p>使用bp init初始化，根据提示选择类型以及输入项目名称 </p>\n</section>\n\n<div class="example-block">\n\t<pre class="highlight no-border" hljs hljs-language="bash">\nbp init</pre>\n</div>\n\n<section class="intro-content">\n\t<p>切换至新建项目目录，运行项目。 </p>\n</section>\n\n<div class="example-block">\n\t<pre class="highlight no-border" hljs hljs-language="bash">\nbp start</pre>\n</div>\n\n<h3>目前支持两种项目类型选择</h3>\n<p>\n\t<img src="{{vm.img}}">\n</p>\n<p>\n\t1.xadmin: 项目独立开发，适用于大型后台系统，解决大型应用项目冲突问题\t\n</p>\n<p>\n\t2.cloud: 项目集中开发，适用于中小型后台系统，路由的变更有集中监控\n</p>\n'},365:function(n,exports,e){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}function o(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var s=e(366),l=t(s),i=function n(e,t){"ngInject";o(this,n),this.img=l.default};i.$inject=["$interval","$timeout"],exports.default=i},366:function(n,exports,e){n.exports=e.p+"img-ad52fb3bce50fbf63b05189ae0193872.png"},367:function(n,exports,e){var t=e(368);"string"==typeof t&&(t=[[n.id,t,""]]);e(100)(t,{});t.locals&&(n.exports=t.locals)},368:function(n,exports,e){exports=n.exports=e(94)(),exports.push([n.id,"",""])},370:function(n,exports,e){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(exports,"__esModule",{value:!0});var o=e(371),s=t(o);exports.default=angular.module("structure",[]).component("structure",s.default)},371:function(n,exports,e){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(exports,"__esModule",{value:!0});var o=e(372),s=t(o),l=e(373),i=t(l);e(374),exports.default={restrict:"E",bindings:{},template:s.default,controller:i.default,controllerAs:"vm"}},372:function(n,exports){n.exports='<section class="intro-content">\n\t<h1>项目目录</h1>\n\t<p>项目的目录结构: </p>\n</section>\n\n<div class="example-block">\n<div class="highlight no-border" hljs hljs-language="html">\n|- client/\n  |- app/\n    |- app.js ------------------------ 项目入口\n    |- app.html ---------------------- 项目html\n      |- common/ --------------------- 公共的组件\n      |- components/ ----------------- 不同页面模块\n        |- components.js ------------- 页面模块入口\n      |-router/ ---------------------- 路由配置\n        |-routerConfig.js/ ----------- 路由配置入口\n|-.babelrc --------------------------- babel配置文件\n|-custom.env.config.js --------------- 配置代理\n|-gulpfile.babel.js ------------------ gulp配置文件\n|-webpack.config.js ------------------ webpack配置文件\n|-webpack.dev.config.js -------------- webpack配置文件(开发环境)\n|-webpack.dist.config.js ------------- webpack配置文件(生产环境)\n</div>\n</div>'},373:function(n,exports){"use strict";function e(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var t=function n(){e(this,n),this.name="structure"};exports.default=t},374:function(n,exports,e){var t=e(375);"string"==typeof t&&(t=[[n.id,t,""]]);e(100)(t,{});t.locals&&(n.exports=t.locals)},375:function(n,exports,e){exports=n.exports=e(94)(),exports.push([n.id,"",""])}});
//# sourceMappingURL=build.min.js.map